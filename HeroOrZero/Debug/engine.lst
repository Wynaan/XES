ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"engine.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata._ZStL19piecewise_construct,"a",%progbits
  16              		.align	2
  19              	_ZStL19piecewise_construct:
  20 0000 00       		.space	1
  21              		.section	.text._ZnwjPv,"axG",%progbits,_ZnwjPv,comdat
  22              		.align	1
  23              		.weak	_ZnwjPv
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu softvfp
  29              	_ZnwjPv:
  30              	.LFB756:
  31              		.file 1 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\new"
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // Copyright (C) 1994-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // This file is part of GCC.
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** //
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // any later version.
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // 
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // GNU General Public License for more details.
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // 
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** /** @file new
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 2


  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  handling memory allocation errors; see
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  */
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #ifndef _NEW
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #define _NEW
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #pragma GCC system_header
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #include <bits/c++config.h>
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #include <exception>
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #pragma GCC visibility push(default)
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** extern "C++" {
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** namespace std 
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** {
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   /**
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****    *  @ingroup exceptions
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****    *
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****    *  errors from the throwing forms of @c new.  */
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   class bad_alloc : public exception 
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   {
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   public:
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     bad_alloc() throw() { }
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     // This declaration is not useless:
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     virtual ~bad_alloc() throw();
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     // See comment in eh_exception.cc.
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     virtual const char* what() const throw();
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   };
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #if __cplusplus >= 201103L
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   class bad_array_new_length : public bad_alloc
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   {
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   public:
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     bad_array_new_length() throw() { };
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     // This declaration is not useless:
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     virtual ~bad_array_new_length() throw();
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     // See comment in eh_exception.cc.
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     virtual const char* what() const throw();
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   };
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #endif
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #if __cpp_aligned_new
  83:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   enum class align_val_t: size_t {};
  84:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #endif
  85:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  86:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   struct nothrow_t
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 3


  87:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   {
  88:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #if __cplusplus >= 201103L
  89:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****     explicit nothrow_t() = default;
  90:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #endif
  91:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   };
  92:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  93:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   extern const nothrow_t nothrow;
  94:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  95:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
  96:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****    *  be of this type.  */
  97:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   typedef void (*new_handler)();
  98:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
  99:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 100:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   /// previous handler.
 101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
 103:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #if __cplusplus >= 201103L
 104:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   /// Return the current new handler.
 105:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   new_handler get_new_handler() noexcept;
 106:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #endif
 107:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** } // namespace std
 108:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
 109:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** //@{
 110:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** /** These are replaceable signatures:
 111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  - normal array new and delete (same)
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *    @c NULL on error)
 115:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  - @c nothrow array new and delete (same)
 116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *
 117:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 118:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 119:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** */
 120:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 121:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 122:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 123:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 124:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 127:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #if __cpp_sized_deallocation
 129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 132:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 133:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #endif
 134:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 137:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 138:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 139:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 140:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 142:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #if __cpp_aligned_new
 143:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new(std::size_t, std::align_val_t)
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 4


 144:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 145:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 146:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 147:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete(void*, std::align_val_t)
 148:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 149:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 150:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 151:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new[](std::size_t, std::align_val_t)
 152:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   __attribute__((__externally_visible__));
 153:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 154:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete[](void*, std::align_val_t)
 156:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 158:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 159:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #if __cpp_sized_deallocation
 160:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 161:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 162:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 163:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 164:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #endif // __cpp_sized_deallocation
 165:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** #endif // __cpp_aligned_new
 166:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** 
 167:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** // Default placement versions of operator new.
 168:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 169:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\new **** { return __p; }
  32              		.loc 1 169 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 7, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              		.cfi_def_cfa_offset 16
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  45 0008 3960     		str	r1, [r7]
  46              		.loc 1 169 0
  47 000a 3B68     		ldr	r3, [r7]
  48 000c 1846     		mov	r0, r3
  49 000e 0C37     		adds	r7, r7, #12
  50              		.cfi_def_cfa_offset 4
  51 0010 BD46     		mov	sp, r7
  52              		.cfi_def_cfa_register 13
  53              		@ sp needed
  54 0012 80BC     		pop	{r7}
  55              		.cfi_restore 7
  56              		.cfi_def_cfa_offset 0
  57 0014 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE756:
  61              		.section	.text._ZL20__gthread_key_deletei,"ax",%progbits
  62              		.align	1
  63              		.syntax unified
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 5


  64              		.thumb
  65              		.thumb_func
  66              		.fpu softvfp
  68              	_ZL20__gthread_key_deletei:
  69              	.LFB913:
  70              		.file 2 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\arm-no
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Compile this one with gcc.  */
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** This file is part of GCC.
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** version.
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** for more details.
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** typedef int __gthread_key_t;
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** typedef int __gthread_once_t;
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** typedef int __gthread_mutex_t;
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx) do {} while (0)
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((__unused__))
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #ifdef _LIBOBJC
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Thread local storage for a single thread */
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static void *thread_local_storage = NULL;
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Backend initialization functions */
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Initialize the threads subsystem.  */
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 6


  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* No thread support available */
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return -1;
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Close the threads subsystem.  */
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* No thread support available */
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return -1;
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Backend thread functions */
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Create a new thread of execution.  */
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline objc_thread_t
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* No thread support available */
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return NULL;
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Set the current thread's priority.  */
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* No thread support available */
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return -1;
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
  83:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  84:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Return the current thread's priority.  */
  85:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
  86:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
  88:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
  90:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  91:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Yield our process time to another thread.  */
  92:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline void
  93:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_yield (void)
  94:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
  95:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return;
  96:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
  97:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
  98:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Terminate the current thread.  */
  99:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 100:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_exit (void)
 101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* No thread support available */
 103:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* Should we really exit the program */
 104:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return -1;
 106:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 107:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 108:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 7


 109:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline objc_thread_t
 110:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_id (void)
 111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* No thread support, use 1.  */
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return (objc_thread_t) 1;
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 115:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 118:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 120:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   thread_local_storage = value;
 121:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 122:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 123:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 124:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline void *
 126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 128:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return thread_local_storage;
 129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Backend mutex functions */
 132:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 133:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Allocate a mutex.  */
 134:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 137:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 138:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 139:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 140:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Deallocate a mutex.  */
 141:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 142:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 144:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 145:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 146:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 147:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Grab a lock on a mutex.  */
 148:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 149:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 151:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 153:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 154:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 155:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 157:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 159:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 161:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 162:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 163:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Unlock the mutex */
 164:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 165:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 8


 166:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 167:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 168:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 169:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 170:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Backend condition mutex functions */
 171:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 172:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Allocate a condition.  */
 173:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 174:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 176:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 177:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 178:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 179:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Deallocate a condition.  */
 180:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 181:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 183:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 184:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 185:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 186:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Wait on the condition */
 187:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 188:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 191:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 192:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 193:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 194:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 196:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 198:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 199:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 200:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 201:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 203:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 205:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 206:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 207:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 208:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** #else /* _LIBOBJC */
 209:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 210:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 211:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_active_p (void)
 212:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 213:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 214:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 215:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 216:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int
 217:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 219:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 220:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 221:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 222:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static inline int _GLIBCXX_UNUSED
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 9


 223:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
 225:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
 226:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
 227:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** 
 228:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** static int _GLIBCXX_UNUSED
 229:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** {
  71              		.loc 2 230 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 8
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76 0000 80B4     		push	{r7}
  77              		.cfi_def_cfa_offset 4
  78              		.cfi_offset 7, -4
  79 0002 83B0     		sub	sp, sp, #12
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  83 0006 7860     		str	r0, [r7, #4]
 231:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h ****   return 0;
  84              		.loc 2 231 0
  85 0008 0023     		movs	r3, #0
 232:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\arm-none-eabi\thumb\v7-m\bits\gthr-default.h **** }
  86              		.loc 2 232 0
  87 000a 1846     		mov	r0, r3
  88 000c 0C37     		adds	r7, r7, #12
  89              		.cfi_def_cfa_offset 4
  90 000e BD46     		mov	sp, r7
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0010 80BC     		pop	{r7}
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 0012 7047     		bx	lr
  97              		.cfi_endproc
  98              	.LFE913:
 100              		.global	_Z13PriorityQueueB5cxx11
 101              		.section	.bss._Z13PriorityQueueB5cxx11,"aw",%nobits
 102              		.align	2
 105              	_Z13PriorityQueueB5cxx11:
 106 0000 00000000 		.space	60
 106      00000000 
 106      00000000 
 106      00000000 
 106      00000000 
 107              		.global	stackDepth
 108              		.section	.bss.stackDepth,"aw",%nobits
 109              		.align	2
 112              	stackDepth:
 113 0000 00000000 		.space	4
 114              		.section	.text._ZN10TickEngine9PushStackEP7IUpdate5Stack,"ax",%progbits
 115              		.align	1
 116              		.global	_ZN10TickEngine9PushStackEP7IUpdate5Stack
 117              		.syntax unified
 118              		.thumb
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 10


 119              		.thumb_func
 120              		.fpu softvfp
 122              	_ZN10TickEngine9PushStackEP7IUpdate5Stack:
 123              	.LFB1447:
 124              		.file 3 "../src/engine.cpp"
   1:../src/engine.cpp **** #include "board.h"
   2:../src/engine.cpp **** #include "engine.h"
   3:../src/engine.cpp **** #include "xav_data.h"
   4:../src/engine.cpp **** #include "interfaces.h"
   5:../src/engine.cpp **** #include <list>
   6:../src/engine.cpp **** 
   7:../src/engine.cpp **** std::list<IUpdate*> PriorityQueue[5];
   8:../src/engine.cpp **** Stack stackDepth = Stack::L1;
   9:../src/engine.cpp **** 
  10:../src/engine.cpp **** void TickEngine::PushStack(IUpdate * element, Stack stackLevel)
  11:../src/engine.cpp **** {
 125              		.loc 3 11 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 16
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129 0000 80B5     		push	{r7, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 0002 84B0     		sub	sp, sp, #16
 134              		.cfi_def_cfa_offset 24
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 137 0006 7860     		str	r0, [r7, #4]
 138 0008 3960     		str	r1, [r7]
  12:../src/engine.cpp **** 	if(stackLevel > stackDepth)
 139              		.loc 3 12 0
 140 000a 0D4B     		ldr	r3, .L7
 141 000c 1B68     		ldr	r3, [r3]
 142 000e 3A68     		ldr	r2, [r7]
 143 0010 9A42     		cmp	r2, r3
 144 0012 02DD     		ble	.L6
  13:../src/engine.cpp **** 		stackDepth = stackLevel;
 145              		.loc 3 13 0
 146 0014 0A4A     		ldr	r2, .L7
 147 0016 3B68     		ldr	r3, [r7]
 148 0018 1360     		str	r3, [r2]
 149              	.L6:
  14:../src/engine.cpp **** 
  15:../src/engine.cpp **** 	uint8_t accessor = (uint8_t)stackLevel;
 150              		.loc 3 15 0
 151 001a 3B68     		ldr	r3, [r7]
 152 001c FB73     		strb	r3, [r7, #15]
  16:../src/engine.cpp **** 	/* Insert the element at the beginning of the list */
  17:../src/engine.cpp **** 	PriorityQueue[accessor].push_front(element);
 153              		.loc 3 17 0
 154 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 155 0020 1346     		mov	r3, r2
 156 0022 5B00     		lsls	r3, r3, #1
 157 0024 1344     		add	r3, r3, r2
 158 0026 9B00     		lsls	r3, r3, #2
 159 0028 064A     		ldr	r2, .L7+4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 11


 160 002a 1344     		add	r3, r3, r2
 161 002c 3A1D     		adds	r2, r7, #4
 162 002e 1146     		mov	r1, r2
 163 0030 1846     		mov	r0, r3
 164 0032 FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE10push_frontERKS2_
  18:../src/engine.cpp **** }
 165              		.loc 3 18 0
 166 0036 00BF     		nop
 167 0038 1037     		adds	r7, r7, #16
 168              		.cfi_def_cfa_offset 8
 169 003a BD46     		mov	sp, r7
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 003c 80BD     		pop	{r7, pc}
 173              	.L8:
 174 003e 00BF     		.align	2
 175              	.L7:
 176 0040 00000000 		.word	stackDepth
 177 0044 00000000 		.word	_Z13PriorityQueueB5cxx11
 178              		.cfi_endproc
 179              	.LFE1447:
 181              		.section	.text._ZN10TickEngine8PopStackE5Stack,"ax",%progbits
 182              		.align	1
 183              		.global	_ZN10TickEngine8PopStackE5Stack
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	_ZN10TickEngine8PopStackE5Stack:
 190              	.LFB1448:
  19:../src/engine.cpp **** 
  20:../src/engine.cpp **** void TickEngine::PopStack(Stack stackLevel)
  21:../src/engine.cpp **** {
 191              		.loc 3 21 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 16
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 84B0     		sub	sp, sp, #16
 200              		.cfi_def_cfa_offset 24
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
  22:../src/engine.cpp **** 	uint8_t accessor = (uint8_t)stackLevel;
 204              		.loc 3 22 0
 205 0008 7B68     		ldr	r3, [r7, #4]
 206 000a FB73     		strb	r3, [r7, #15]
  23:../src/engine.cpp **** 	/* Delete the first element */
  24:../src/engine.cpp **** 	PriorityQueue[accessor].pop_front();
 207              		.loc 3 24 0
 208 000c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 209 000e 1346     		mov	r3, r2
 210 0010 5B00     		lsls	r3, r3, #1
 211 0012 1344     		add	r3, r3, r2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 12


 212 0014 9B00     		lsls	r3, r3, #2
 213 0016 124A     		ldr	r2, .L14
 214 0018 1344     		add	r3, r3, r2
 215 001a 1846     		mov	r0, r3
 216 001c FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE9pop_frontEv
  25:../src/engine.cpp **** 
  26:../src/engine.cpp **** 	/* Resize the maximum stack depth if the only element was removed */
  27:../src/engine.cpp **** 	if(PriorityQueue[accessor].size() == 0 && stackDepth == stackLevel)
 217              		.loc 3 27 0
 218 0020 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 219 0022 1346     		mov	r3, r2
 220 0024 5B00     		lsls	r3, r3, #1
 221 0026 1344     		add	r3, r3, r2
 222 0028 9B00     		lsls	r3, r3, #2
 223 002a 0D4A     		ldr	r2, .L14
 224 002c 1344     		add	r3, r3, r2
 225 002e 1846     		mov	r0, r3
 226 0030 FFF7FEFF 		bl	_ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv
 227 0034 0346     		mov	r3, r0
 228 0036 002B     		cmp	r3, #0
 229 0038 06D1     		bne	.L10
 230              		.loc 3 27 0 is_stmt 0 discriminator 1
 231 003a 0A4B     		ldr	r3, .L14+4
 232 003c 1B68     		ldr	r3, [r3]
 233 003e 7A68     		ldr	r2, [r7, #4]
 234 0040 9A42     		cmp	r2, r3
 235 0042 01D1     		bne	.L10
 236              		.loc 3 27 0 discriminator 3
 237 0044 0123     		movs	r3, #1
 238 0046 00E0     		b	.L11
 239              	.L10:
 240              		.loc 3 27 0 discriminator 4
 241 0048 0023     		movs	r3, #0
 242              	.L11:
 243              		.loc 3 27 0 discriminator 6
 244 004a 002B     		cmp	r3, #0
 245 004c 03D0     		beq	.L13
  28:../src/engine.cpp **** 		stackDepth = (Stack)(accessor - 1);
 246              		.loc 3 28 0 is_stmt 1
 247 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 248 0050 013B     		subs	r3, r3, #1
 249 0052 044A     		ldr	r2, .L14+4
 250 0054 1360     		str	r3, [r2]
 251              	.L13:
  29:../src/engine.cpp **** }
 252              		.loc 3 29 0
 253 0056 00BF     		nop
 254 0058 1037     		adds	r7, r7, #16
 255              		.cfi_def_cfa_offset 8
 256 005a BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 005c 80BD     		pop	{r7, pc}
 260              	.L15:
 261 005e 00BF     		.align	2
 262              	.L14:
 263 0060 00000000 		.word	_Z13PriorityQueueB5cxx11
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 13


 264 0064 00000000 		.word	stackDepth
 265              		.cfi_endproc
 266              	.LFE1448:
 268              		.section	.text._ZN10TickEngine4TickEv,"ax",%progbits
 269              		.align	1
 270              		.global	_ZN10TickEngine4TickEv
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu softvfp
 276              	_ZN10TickEngine4TickEv:
 277              	.LFB1449:
  30:../src/engine.cpp **** 
  31:../src/engine.cpp **** void TickEngine::Tick()
  32:../src/engine.cpp **** {
 278              		.loc 3 32 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 82B0     		sub	sp, sp, #8
 287              		.cfi_def_cfa_offset 16
 288 0004 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 290              	.LBB2:
  33:../src/engine.cpp **** 	/* Tick the first element for each priority level if defined */
  34:../src/engine.cpp **** 	for(uint8_t i = 0; i <= (uint8_t)stackDepth; i++){
 291              		.loc 3 34 0
 292 0006 0023     		movs	r3, #0
 293 0008 FB71     		strb	r3, [r7, #7]
 294              	.L19:
 295              		.loc 3 34 0 is_stmt 0 discriminator 1
 296 000a 1B4B     		ldr	r3, .L21
 297 000c 1B68     		ldr	r3, [r3]
 298 000e DBB2     		uxtb	r3, r3
 299 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 300 0012 9A42     		cmp	r2, r3
 301 0014 2BD8     		bhi	.L20
  35:../src/engine.cpp **** 		if(PriorityQueue[i].size() != 0)
 302              		.loc 3 35 0 is_stmt 1
 303 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 304 0018 1346     		mov	r3, r2
 305 001a 5B00     		lsls	r3, r3, #1
 306 001c 1344     		add	r3, r3, r2
 307 001e 9B00     		lsls	r3, r3, #2
 308 0020 164A     		ldr	r2, .L21+4
 309 0022 1344     		add	r3, r3, r2
 310 0024 1846     		mov	r0, r3
 311 0026 FFF7FEFF 		bl	_ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv
 312 002a 0346     		mov	r3, r0
 313 002c 002B     		cmp	r3, #0
 314 002e 14BF     		ite	ne
 315 0030 0123     		movne	r3, #1
 316 0032 0023     		moveq	r3, #0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 14


 317 0034 DBB2     		uxtb	r3, r3
 318 0036 002B     		cmp	r3, #0
 319 0038 15D0     		beq	.L18
  36:../src/engine.cpp **** 			(*PriorityQueue[i].begin())->Tick();
 320              		.loc 3 36 0
 321 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 322 003c 1346     		mov	r3, r2
 323 003e 5B00     		lsls	r3, r3, #1
 324 0040 1344     		add	r3, r3, r2
 325 0042 9B00     		lsls	r3, r3, #2
 326 0044 0D4A     		ldr	r2, .L21+4
 327 0046 1344     		add	r3, r3, r2
 328 0048 1846     		mov	r0, r3
 329 004a FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv
 330 004e 0346     		mov	r3, r0
 331 0050 3B60     		str	r3, [r7]
 332 0052 3B46     		mov	r3, r7
 333 0054 1846     		mov	r0, r3
 334 0056 FFF7FEFF 		bl	_ZNKSt14_List_iteratorIP7IUpdateEdeEv
 335 005a 0346     		mov	r3, r0
 336 005c 1B68     		ldr	r3, [r3]
 337 005e 1A68     		ldr	r2, [r3]
 338 0060 1268     		ldr	r2, [r2]
 339 0062 1846     		mov	r0, r3
 340 0064 9047     		blx	r2
 341              	.LVL0:
 342              	.L18:
  34:../src/engine.cpp **** 		if(PriorityQueue[i].size() != 0)
 343              		.loc 3 34 0 discriminator 2
 344 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 345 0068 0133     		adds	r3, r3, #1
 346 006a FB71     		strb	r3, [r7, #7]
 347 006c CDE7     		b	.L19
 348              	.L20:
 349              	.LBE2:
  37:../src/engine.cpp **** 	}
  38:../src/engine.cpp **** }
 350              		.loc 3 38 0
 351 006e 00BF     		nop
 352 0070 0837     		adds	r7, r7, #8
 353              		.cfi_def_cfa_offset 8
 354 0072 BD46     		mov	sp, r7
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 0074 80BD     		pop	{r7, pc}
 358              	.L22:
 359 0076 00BF     		.align	2
 360              	.L21:
 361 0078 00000000 		.word	stackDepth
 362 007c 00000000 		.word	_Z13PriorityQueueB5cxx11
 363              		.cfi_endproc
 364              	.LFE1449:
 366              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev,"axG",%progbits,_ZNSt7__cxx114listIP7IUpda
 367              		.align	1
 368              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev
 369              		.syntax unified
 370              		.thumb
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 15


 371              		.thumb_func
 372              		.fpu softvfp
 374              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev:
 375              	.LFB1681:
 376              		.file 4 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\\
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // List implementation -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** // <http://www.gnu.org/licenses/>.
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** /*
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  *
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * Copyright (c) 1994
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * Hewlett-Packard Company
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  *
  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * that both that copyright notice and this permission notice appear
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * representations about the suitability of this software for any
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  *
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  *
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * Copyright (c) 1996,1997
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  *
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * that both that copyright notice and this permission notice appear
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * representations about the suitability of this software for any
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  */
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** /** @file bits/stl_list.h
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  *  This is an internal header file, included by other library headers.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 16


  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  *  Do not attempt to use it directly. @headername{list}
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****  */
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #ifndef _STL_LIST_H
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #define _STL_LIST_H 1
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #include <bits/concept_check.h>
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #include <ext/alloc_traits.h>
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #include <initializer_list>
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #include <bits/allocated_ptr.h>
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #include <ext/aligned_buffer.h>
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** {
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   namespace __detail
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   {
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     // Supporting structures are split into common and templated
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     // types; the latter publicly inherits from the former in an
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     // effort to reduce code duplication.  This results in some
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     // "needless" static_cast'ing later on, but it's all safe
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     // downcasting.
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     /// Common part of a node in the %list.
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     struct _List_node_base
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     {
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_node_base* _M_next;
  83:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_node_base* _M_prev;
  84:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  85:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       static void
  86:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       swap(_List_node_base& __x, _List_node_base& __y) _GLIBCXX_USE_NOEXCEPT;
  87:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  88:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
  89:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_transfer(_List_node_base* const __first,
  90:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 		  _List_node_base* const __last) _GLIBCXX_USE_NOEXCEPT;
  91:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  92:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
  93:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_reverse() _GLIBCXX_USE_NOEXCEPT;
  94:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  95:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
  96:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_hook(_List_node_base* const __position) _GLIBCXX_USE_NOEXCEPT;
  97:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
  98:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
  99:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_unhook() _GLIBCXX_USE_NOEXCEPT;
 100:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     };
 101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   _GLIBCXX_END_NAMESPACE_VERSION
 103:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   } // namespace detail
 104:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 105:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 106:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 107:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   /// An actual node in the %list.
 108:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   template<typename _Tp>
 109:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     struct _List_node : public __detail::_List_node_base
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 17


 110:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     {
 111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       __gnu_cxx::__aligned_membuf<_Tp> _M_storage;
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp*       _M_valptr()       { return _M_storage._M_ptr(); }
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp const* _M_valptr() const { return _M_storage._M_ptr(); }
 115:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp _M_data;
 117:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp*       _M_valptr()       { return std::__addressof(_M_data); }
 118:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp const* _M_valptr() const { return std::__addressof(_M_data); }
 119:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 120:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     };
 121:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 122:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   /**
 123:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @brief A list::iterator.
 124:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  All the functions are op overloads.
 126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   */
 127:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   template<typename _Tp>
 128:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     struct _List_iterator
 129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     {
 130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_iterator<_Tp>		_Self;
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_node<_Tp>			_Node;
 132:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 133:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef ptrdiff_t				difference_type;
 134:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef std::bidirectional_iterator_tag	iterator_category;
 135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _Tp				value_type;
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _Tp*				pointer;
 137:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _Tp&				reference;
 138:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 139:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_iterator() _GLIBCXX_NOEXCEPT
 140:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_node() { }
 141:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 142:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       explicit
 143:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_iterator(__detail::_List_node_base* __x) _GLIBCXX_NOEXCEPT
 144:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_node(__x) { }
 145:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 146:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self
 147:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 148:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return *this; }
 149:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 150:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Must downcast from _List_node_base to _List_node to get to value.
 151:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       reference
 152:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator*() const _GLIBCXX_NOEXCEPT
 153:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return *static_cast<_Node*>(_M_node)->_M_valptr(); }
 154:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 155:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       pointer
 156:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator->() const _GLIBCXX_NOEXCEPT
 157:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return static_cast<_Node*>(_M_node)->_M_valptr(); }
 158:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 159:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self&
 160:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator++() _GLIBCXX_NOEXCEPT
 161:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 162:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_next;
 163:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *this;
 164:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 165:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 166:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 18


 167:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 168:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 169:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Self __tmp = *this;
 170:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_next;
 171:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return __tmp;
 172:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 173:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 174:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self&
 175:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator--() _GLIBCXX_NOEXCEPT
 176:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 177:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_prev;
 178:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *this;
 179:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 180:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 181:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self
 182:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 183:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 184:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Self __tmp = *this;
 185:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_prev;
 186:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return __tmp;
 187:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 188:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 189:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       bool
 190:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
 191:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _M_node == __x._M_node; }
 192:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 193:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       bool
 194:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
 195:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _M_node != __x._M_node; }
 196:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 197:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // The only member points to the %list element.
 198:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       __detail::_List_node_base* _M_node;
 199:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     };
 200:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 201:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   /**
 202:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @brief A list::const_iterator.
 203:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 204:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  All the functions are op overloads.
 205:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   */
 206:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   template<typename _Tp>
 207:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     struct _List_const_iterator
 208:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     {
 209:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_const_iterator<_Tp>		_Self;
 210:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef const _List_node<_Tp>		_Node;
 211:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_iterator<_Tp>		iterator;
 212:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 213:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef ptrdiff_t				difference_type;
 214:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef std::bidirectional_iterator_tag	iterator_category;
 215:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _Tp				value_type;
 216:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef const _Tp*			pointer;
 217:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef const _Tp&			reference;
 218:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 219:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_const_iterator() _GLIBCXX_NOEXCEPT
 220:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_node() { }
 221:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 222:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       explicit
 223:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_const_iterator(const __detail::_List_node_base* __x)
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 19


 224:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _GLIBCXX_NOEXCEPT
 225:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_node(__x) { }
 226:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 227:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_const_iterator(const iterator& __x) _GLIBCXX_NOEXCEPT
 228:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_node(__x._M_node) { }
 229:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 230:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
 231:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 232:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return iterator(const_cast<__detail::_List_node_base*>(_M_node)); }
 233:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 234:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Must downcast from List_node_base to _List_node to get to value.
 235:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       reference
 236:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator*() const _GLIBCXX_NOEXCEPT
 237:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return *static_cast<_Node*>(_M_node)->_M_valptr(); }
 238:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 239:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       pointer
 240:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator->() const _GLIBCXX_NOEXCEPT
 241:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return static_cast<_Node*>(_M_node)->_M_valptr(); }
 242:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 243:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self&
 244:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator++() _GLIBCXX_NOEXCEPT
 245:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 246:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_next;
 247:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *this;
 248:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 249:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 250:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self
 251:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 252:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 253:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Self __tmp = *this;
 254:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_next;
 255:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return __tmp;
 256:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 257:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 258:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self&
 259:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator--() _GLIBCXX_NOEXCEPT
 260:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 261:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_prev;
 262:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *this;
 263:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 264:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 265:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Self
 266:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 267:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 268:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Self __tmp = *this;
 269:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_node = _M_node->_M_prev;
 270:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return __tmp;
 271:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 272:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 273:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       bool
 274:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
 275:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _M_node == __x._M_node; }
 276:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 277:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       bool
 278:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
 279:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _M_node != __x._M_node; }
 280:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 20


 281:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // The only member points to the %list element.
 282:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const __detail::_List_node_base* _M_node;
 283:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     };
 284:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 285:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   template<typename _Val>
 286:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     inline bool
 287:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     operator==(const _List_iterator<_Val>& __x,
 288:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	       const _List_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
 289:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     { return __x._M_node == __y._M_node; }
 290:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 291:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   template<typename _Val>
 292:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     inline bool
 293:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     operator!=(const _List_iterator<_Val>& __x,
 294:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	       const _List_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
 295:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     { return __x._M_node != __y._M_node; }
 296:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 297:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
 298:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
 299:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   template<typename _Tp, typename _Alloc>
 300:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     class _List_base
 301:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     {
 302:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     protected:
 303:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 304:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	rebind<_Tp>::other				_Tp_alloc_type;
 305:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Tp_alloc_traits;
 306:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Tp_alloc_traits::template
 307:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	rebind<_List_node<_Tp> >::other _Node_alloc_type;
 308:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef __gnu_cxx::__alloc_traits<_Node_alloc_type> _Node_alloc_traits;
 309:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 310:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       static size_t
 311:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _S_distance(const __detail::_List_node_base* __first,
 312:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 		  const __detail::_List_node_base* __last)
 313:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 314:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	size_t __n = 0;
 315:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	while (__first != __last)
 316:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  {
 317:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __first = __first->_M_next;
 318:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    ++__n;
 319:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  }
 320:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return __n;
 321:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 322:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 323:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       struct _List_impl
 324:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : public _Node_alloc_type
 325:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 326:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if _GLIBCXX_USE_CXX11_ABI
 327:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_List_node<size_t> _M_node;
 328:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 329:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__detail::_List_node_base _M_node;
 330:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 331:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 332:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_List_impl() _GLIBCXX_NOEXCEPT
 333:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	: _Node_alloc_type(), _M_node()
 334:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ }
 335:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 336:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_List_impl(const _Node_alloc_type& __a) _GLIBCXX_NOEXCEPT
 337:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	: _Node_alloc_type(__a), _M_node()
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 21


 338:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ }
 339:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 340:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 341:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_List_impl(_Node_alloc_type&& __a) noexcept
 342:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	: _Node_alloc_type(std::move(__a)), _M_node()
 343:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ }
 344:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 345:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       };
 346:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 347:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_impl _M_impl;
 348:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 349:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if _GLIBCXX_USE_CXX11_ABI
 350:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_t _M_get_size() const { return *_M_impl._M_node._M_valptr(); }
 351:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 352:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void _M_set_size(size_t __n) { *_M_impl._M_node._M_valptr() = __n; }
 353:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 354:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void _M_inc_size(size_t __n) { *_M_impl._M_node._M_valptr() += __n; }
 355:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 356:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void _M_dec_size(size_t __n) { *_M_impl._M_node._M_valptr() -= __n; }
 357:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 358:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_t
 359:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_distance(const __detail::_List_node_base* __first,
 360:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 		  const __detail::_List_node_base* __last) const
 361:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _S_distance(__first, __last); }
 362:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 363:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // return the stored size
 364:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_t _M_node_count() const { return *_M_impl._M_node._M_valptr(); }
 365:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 366:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // dummy implementations used when the size is not stored
 367:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_t _M_get_size() const { return 0; }
 368:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void _M_set_size(size_t) { }
 369:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void _M_inc_size(size_t) { }
 370:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void _M_dec_size(size_t) { }
 371:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_t _M_distance(const void*, const void*) const { return 0; }
 372:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 373:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // count the number of nodes
 374:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_t _M_node_count() const
 375:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 376:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return _S_distance(_M_impl._M_node._M_next,
 377:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			   std::__addressof(_M_impl._M_node));
 378:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 379:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 380:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 381:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typename _Node_alloc_traits::pointer
 382:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_get_node()
 383:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _Node_alloc_traits::allocate(_M_impl, 1); }
 384:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 385:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 386:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_put_node(typename _Node_alloc_traits::pointer __p) _GLIBCXX_NOEXCEPT
 387:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _Node_alloc_traits::deallocate(_M_impl, __p, 1); }
 388:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 389:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   public:
 390:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _Alloc allocator_type;
 391:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 392:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Node_alloc_type&
 393:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 394:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _M_impl; }
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 22


 395:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 396:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const _Node_alloc_type&
 397:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 398:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _M_impl; }
 399:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 400:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_base()
 401:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_impl()
 402:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_init(); }
 403:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 404:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_base(const _Node_alloc_type& __a) _GLIBCXX_NOEXCEPT
 405:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_impl(__a)
 406:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_init(); }
 407:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 408:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 409:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_base(_List_base&& __x) noexcept
 410:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_impl(std::move(__x._M_get_Node_allocator()))
 411:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_move_nodes(std::move(__x)); }
 412:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 413:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _List_base(_List_base&& __x, _Node_alloc_type&& __a)
 414:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_impl(std::move(__a))
 415:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 416:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	if (__x._M_get_Node_allocator() == _M_get_Node_allocator())
 417:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _M_move_nodes(std::move(__x));
 418:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	else
 419:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _M_init(); // Caller must move individual elements.
 420:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 421:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 422:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 423:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_move_nodes(_List_base&& __x)
 424:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 425:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	auto* const __xnode = std::__addressof(__x._M_impl._M_node);
 426:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	if (__xnode->_M_next == __xnode)
 427:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _M_init();
 428:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	else
 429:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  {
 430:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    auto* const __node = std::__addressof(_M_impl._M_node);
 431:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __node->_M_next = __xnode->_M_next;
 432:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __node->_M_prev = __xnode->_M_prev;
 433:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __node->_M_next->_M_prev = __node->_M_prev->_M_next = __node;
 434:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    _M_set_size(__x._M_get_size());
 435:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __x._M_init();
 436:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  }
 437:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 438:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 439:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 440:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // This is what actually destroys the list.
 441:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       ~_List_base() _GLIBCXX_NOEXCEPT
 442:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_clear(); }
 443:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 444:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 445:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_clear() _GLIBCXX_NOEXCEPT;
 446:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 447:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 448:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_init() _GLIBCXX_NOEXCEPT
 449:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 450:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_impl._M_node._M_next = &this->_M_impl._M_node;
 451:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_impl._M_node._M_prev = &this->_M_impl._M_node;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 23


 452:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_set_size(0);
 453:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 454:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     };
 455:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 456:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   /**
 457:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @brief A standard container with linear time access to elements,
 458:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  and fixed time insertion/deletion at any point in the sequence.
 459:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 460:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @ingroup sequences
 461:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 462:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @tparam _Tp  Type of element.
 463:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 464:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 465:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 466:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 467:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  <a href="tables.html#67">sequence</a>, including the
 468:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 469:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  %exception of @c at and @c operator[].
 470:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 471:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  This is a @e doubly @e linked %list.  Traversal up and down the
 472:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  %list requires linear time, but adding and removing elements (or
 473:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @e nodes) is done in constant time, regardless of where the
 474:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  change takes place.  Unlike std::vector and std::deque,
 475:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  random-access iterators are not provided, so subscripting ( @c
 476:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  [] ) access is not allowed.  For algorithms which only need
 477:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  sequential access, this lack makes no difference.
 478:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 479:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  Also unlike the other standard containers, std::list provides
 480:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  specialized algorithms %unique to linked lists, such as
 481:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  splicing, sorting, and in-place reversal.
 482:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 483:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  A couple points on memory allocation for list<Tp>:
 484:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 485:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  First, we never actually allocate a Tp, we allocate
 486:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  List_node<Tp>'s and trust [20.1.5]/4 to DTRT.  This is to ensure
 487:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  that after elements from %list<X,Alloc1> are spliced into
 488:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  %list<X,Alloc2>, destroying the memory of the second %list is a
 489:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  valid operation, i.e., Alloc1 giveth and Alloc2 taketh away.
 490:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *
 491:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  Second, a %list conceptually represented as
 492:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @code
 493:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *    A <---> B <---> C <---> D
 494:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  @endcode
 495:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  is actually circular; a link exists between A and D.  The %list
 496:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  class holds (as its only data member) a private list::iterator
 497:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  pointing to @e D, not to @e A!  To get to the head of the %list,
 498:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  we start at the tail and move forward by one.  When this member
 499:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  iterator's next/previous pointers refer to itself, the %list is
 500:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****    *  %empty.
 501:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   */
 502:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 503:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     class list : protected _List_base<_Tp, _Alloc>
 504:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     {
 505:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 506:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // concept requirements
 507:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 508:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** # if __cplusplus < 201103L
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 24


 509:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 510:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** # endif
 511:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 512:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 513:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 514:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_base<_Tp, _Alloc>			_Base;
 515:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 516:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Base::_Tp_alloc_traits		_Tp_alloc_traits;
 517:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Base::_Node_alloc_type		_Node_alloc_type;
 518:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Base::_Node_alloc_traits	_Node_alloc_traits;
 519:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 520:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     public:
 521:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _Tp					 value_type;
 522:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Tp_alloc_traits::pointer	 pointer;
 523:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Tp_alloc_traits::const_pointer	 const_pointer;
 524:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Tp_alloc_traits::reference	 reference;
 525:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef typename _Tp_alloc_traits::const_reference const_reference;
 526:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_iterator<_Tp>			 iterator;
 527:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_const_iterator<_Tp>			 const_iterator;
 528:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef std::reverse_iterator<const_iterator>	 const_reverse_iterator;
 529:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 530:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef size_t					 size_type;
 531:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef ptrdiff_t					 difference_type;
 532:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _Alloc					 allocator_type;
 533:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 534:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     protected:
 535:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Note that pointers-to-_Node's can be ctor-converted to
 536:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // iterator types.
 537:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       typedef _List_node<_Tp>				 _Node;
 538:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 539:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       using _Base::_M_impl;
 540:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       using _Base::_M_put_node;
 541:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       using _Base::_M_get_node;
 542:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       using _Base::_M_get_Node_allocator;
 543:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 544:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 545:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __args  An instance of user data.
 546:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 547:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Allocates space for a new node and constructs a copy of
 548:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @a __args in it.
 549:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 550:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus < 201103L
 551:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Node*
 552:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_create_node(const value_type& __x)
 553:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 554:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Node* __p = this->_M_get_node();
 555:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__try
 556:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  {
 557:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    _Tp_alloc_type __alloc(_M_get_Node_allocator());
 558:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __alloc.construct(__p->_M_valptr(), __x);
 559:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  }
 560:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__catch(...)
 561:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  {
 562:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    _M_put_node(__p);
 563:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __throw_exception_again;
 564:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  }
 565:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return __p;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 25


 566:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 567:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 568:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename... _Args>
 569:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Node*
 570:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_create_node(_Args&&... __args)
 571:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
 572:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  auto __p = this->_M_get_node();
 573:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  auto& __alloc = _M_get_Node_allocator();
 574:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  __allocated_ptr<_Node_alloc_type> __guard{__alloc, __p};
 575:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _Node_alloc_traits::construct(__alloc, __p->_M_valptr(),
 576:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 					std::forward<_Args>(__args)...);
 577:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  __guard = nullptr;
 578:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  return __p;
 579:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
 580:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 581:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 582:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     public:
 583:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // [23.2.2.1] construct/copy/destroy
 584:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // (assign() and get_allocator() are also listed in this section)
 585:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 586:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 587:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Creates a %list with no elements.
 588:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 589:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list()
 377              		.loc 4 589 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 82B0     		sub	sp, sp, #8
 386              		.cfi_def_cfa_offset 16
 387 0004 00AF     		add	r7, sp, #0
 388              		.cfi_def_cfa_register 7
 389 0006 7860     		str	r0, [r7, #4]
 390              	.LBB3:
 590:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 591:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       noexcept(is_nothrow_default_constructible<_Node_alloc_type>::value)
 592:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 593:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base() { }
 391              		.loc 4 593 0
 392 0008 7B68     		ldr	r3, [r7, #4]
 393 000a 1846     		mov	r0, r3
 394 000c FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev
 395              	.LBE3:
 396 0010 7B68     		ldr	r3, [r7, #4]
 397 0012 1846     		mov	r0, r3
 398 0014 0837     		adds	r7, r7, #8
 399              		.cfi_def_cfa_offset 8
 400 0016 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0018 80BD     		pop	{r7, pc}
 404              		.cfi_endproc
 405              	.LFE1681:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 26


 407              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EEC1Ev
 408              		.thumb_set _ZNSt7__cxx114listIP7IUpdateSaIS2_EEC1Ev,_ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev
 409              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE10push_frontERKS2_,"axG",%progbits,_ZNSt7__cxx1
 410              		.align	1
 411              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE10push_frontERKS2_
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE10push_frontERKS2_:
 418              	.LFB1683:
 594:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 595:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 596:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Creates a %list with no elements.
 597:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __a  An allocator object.
 598:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 599:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       explicit
 600:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 601:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(_Node_alloc_type(__a)) { }
 602:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 603:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 604:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 605:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Creates a %list with default constructed elements.
 606:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __n  The number of elements to initially create.
 607:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __a  An allocator object.
 608:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 609:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This constructor fills the %list with @a __n default
 610:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  constructed elements.
 611:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 612:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       explicit
 613:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(size_type __n, const allocator_type& __a = allocator_type())
 614:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(_Node_alloc_type(__a))
 615:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_default_initialize(__n); }
 616:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 617:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 618:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Creates a %list with copies of an exemplar element.
 619:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __n  The number of elements to initially create.
 620:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __value  An element to copy.
 621:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __a  An allocator object.
 622:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 623:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This constructor fills the %list with @a __n copies of @a __value.
 624:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 625:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(size_type __n, const value_type& __value,
 626:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	   const allocator_type& __a = allocator_type())
 627:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(_Node_alloc_type(__a))
 628:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_fill_initialize(__n, __value); }
 629:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 630:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 631:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Creates a %list with copies of an exemplar element.
 632:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __n  The number of elements to initially create.
 633:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __value  An element to copy.
 634:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __a  An allocator object.
 635:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 636:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This constructor fills the %list with @a __n copies of @a __value.
 637:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 638:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       explicit
 639:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(size_type __n, const value_type& __value = value_type(),
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 27


 640:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	   const allocator_type& __a = allocator_type())
 641:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(_Node_alloc_type(__a))
 642:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_fill_initialize(__n, __value); }
 643:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 644:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 645:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 646:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  %List copy constructor.
 647:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  A %list of identical element and allocator types.
 648:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 649:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  The newly-created %list uses a copy of the allocation object used
 650:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 651:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 652:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(const list& __x)
 653:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(_Node_alloc_traits::
 654:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	      _S_select_on_copy(__x._M_get_Node_allocator()))
 655:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_initialize_dispatch(__x.begin(), __x.end(), __false_type()); }
 656:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 657:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 658:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 659:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  %List move constructor.
 660:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  A %list of identical element and allocator types.
 661:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 662:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  The newly-created %list contains the exact contents of @a __x.
 663:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  The contents of @a __x are a valid, but unspecified %list.
 664:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 665:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(list&& __x) noexcept
 666:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(std::move(__x)) { }
 667:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 668:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 669:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Builds a %list from an initializer_list
 670:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __l  An initializer_list of value_type.
 671:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __a  An allocator object.
 672:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 673:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Create a %list consisting of copies of the elements in the
 674:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  initializer_list @a __l.  This is linear in __l.size().
 675:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 676:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(initializer_list<value_type> __l,
 677:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	   const allocator_type& __a = allocator_type())
 678:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(_Node_alloc_type(__a))
 679:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_initialize_dispatch(__l.begin(), __l.end(), __false_type()); }
 680:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 681:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(const list& __x, const allocator_type& __a)
 682:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(_Node_alloc_type(__a))
 683:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_initialize_dispatch(__x.begin(), __x.end(), __false_type()); }
 684:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 685:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list(list&& __x, const allocator_type& __a)
 686:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       noexcept(_Node_alloc_traits::_S_always_equal())
 687:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _Base(std::move(__x), _Node_alloc_type(__a))
 688:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 689:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	// If __x is not empty it means its allocator is not equal to __a,
 690:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	// so we need to move from each element individually.
 691:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	insert(begin(), std::__make_move_if_noexcept_iterator(__x.begin()),
 692:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			std::__make_move_if_noexcept_iterator(__x.end()));
 693:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 694:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 695:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 696:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 28


 697:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Builds a %list from a range.
 698:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  An input iterator.
 699:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last  An input iterator.
 700:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __a  An allocator object.
 701:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 702:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Create a %list consisting of copies of the elements from
 703:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  [@a __first,@a __last).  This is linear in N (where N is
 704:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  distance(@a __first,@a __last)).
 705:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 706:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 707:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator,
 708:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 709:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	list(_InputIterator __first, _InputIterator __last,
 710:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	     const allocator_type& __a = allocator_type())
 711:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	: _Base(_Node_alloc_type(__a))
 712:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ _M_initialize_dispatch(__first, __last, __false_type()); }
 713:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 714:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator>
 715:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	list(_InputIterator __first, _InputIterator __last,
 716:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	     const allocator_type& __a = allocator_type())
 717:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	: _Base(_Node_alloc_type(__a))
 718:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
 719:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 720:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 721:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 722:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
 723:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 724:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 725:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 726:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 727:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  No explicit dtor needed as the _Base dtor takes care of
 728:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  things.  The _Base dtor only erases the elements, and note
 729:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  that if the elements themselves are pointers, the pointed-to
 730:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  memory is not touched in any way.  Managing the pointer is
 731:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the user's responsibility.
 732:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 733:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       ~list() = default;
 734:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 735:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 736:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 737:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  %List assignment operator.
 738:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  A %list of identical element and allocator types.
 739:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 740:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  All the elements of @a __x are copied.
 741:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 742:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Whether the allocator is copied depends on the allocator traits.
 743:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 744:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list&
 745:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator=(const list& __x);
 746:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 747:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 748:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 749:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  %List move assignment operator.
 750:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  A %list of identical element and allocator types.
 751:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 752:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  The contents of @a __x are moved into this %list (without copying).
 753:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 29


 754:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Afterwards @a __x is a valid, but unspecified %list
 755:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 756:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Whether the allocator is moved depends on the allocator traits.
 757:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 758:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list&
 759:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator=(list&& __x)
 760:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       noexcept(_Node_alloc_traits::_S_nothrow_move())
 761:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 762:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	constexpr bool __move_storage =
 763:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _Node_alloc_traits::_S_propagate_on_move_assign()
 764:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  || _Node_alloc_traits::_S_always_equal();
 765:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 766:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *this;
 767:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 768:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 769:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 770:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  %List initializer list assignment operator.
 771:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __l  An initializer_list of value_type.
 772:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 773:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Replace the contents of the %list with copies of the elements
 774:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  in the initializer_list @a __l.  This is linear in l.size().
 775:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 776:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       list&
 777:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       operator=(initializer_list<value_type> __l)
 778:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 779:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->assign(__l.begin(), __l.end());
 780:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *this;
 781:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 782:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 783:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 784:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 785:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Assigns a given value to a %list.
 786:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __n  Number of elements to be assigned.
 787:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __val  Value to be assigned.
 788:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 789:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function fills a %list with @a __n copies of the given
 790:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  value.  Note that the assignment completely changes the %list
 791:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  and that the resulting %list's size is the same as the number
 792:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  of elements assigned.
 793:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 794:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 795:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       assign(size_type __n, const value_type& __val)
 796:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_fill_assign(__n, __val); }
 797:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 798:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 799:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Assigns a range to a %list.
 800:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  An input iterator.
 801:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last   An input iterator.
 802:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 803:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function fills a %list with copies of the elements in the
 804:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  range [@a __first,@a __last).
 805:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 806:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Note that the assignment completely changes the %list and
 807:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  that the resulting %list's size is the same as the number of
 808:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  elements assigned.
 809:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 810:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 30


 811:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator,
 812:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 813:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
 814:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	assign(_InputIterator __first, _InputIterator __last)
 815:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 816:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 817:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator>
 818:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
 819:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	assign(_InputIterator __first, _InputIterator __last)
 820:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
 821:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 822:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 823:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 824:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
 825:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 826:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 827:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 828:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 829:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Assigns an initializer_list to a %list.
 830:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __l  An initializer_list of value_type.
 831:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 832:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Replace the contents of the %list with copies of the elements
 833:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  in the initializer_list @a __l.  This is linear in __l.size().
 834:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 835:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 836:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       assign(initializer_list<value_type> __l)
 837:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_assign_dispatch(__l.begin(), __l.end(), __false_type()); }
 838:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 839:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 840:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /// Get a copy of the memory allocation object.
 841:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       allocator_type
 842:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 843:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return allocator_type(_Base::_M_get_Node_allocator()); }
 844:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 845:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // iterators
 846:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 847:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read/write iterator that points to the first element in the
 848:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  %list.  Iteration is done in ordinary element order.
 849:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 850:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
 851:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       begin() _GLIBCXX_NOEXCEPT
 852:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return iterator(this->_M_impl._M_node._M_next); }
 853:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 854:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 855:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) iterator that points to the
 856:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  first element in the %list.  Iteration is done in ordinary
 857:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 858:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 859:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_iterator
 860:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       begin() const _GLIBCXX_NOEXCEPT
 861:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_iterator(this->_M_impl._M_node._M_next); }
 862:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 863:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 864:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read/write iterator that points one past the last
 865:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element in the %list.  Iteration is done in ordinary element
 866:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  order.
 867:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 31


 868:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
 869:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       end() _GLIBCXX_NOEXCEPT
 870:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return iterator(&this->_M_impl._M_node); }
 871:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 872:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 873:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) iterator that points one past
 874:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the last element in the %list.  Iteration is done in ordinary
 875:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 876:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 877:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_iterator
 878:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       end() const _GLIBCXX_NOEXCEPT
 879:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_iterator(&this->_M_impl._M_node); }
 880:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 881:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 882:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read/write reverse iterator that points to the last
 883:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element in the %list.  Iteration is done in reverse element
 884:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  order.
 885:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 886:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       reverse_iterator
 887:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       rbegin() _GLIBCXX_NOEXCEPT
 888:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return reverse_iterator(end()); }
 889:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 890:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 891:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) reverse iterator that points to
 892:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the last element in the %list.  Iteration is done in reverse
 893:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 894:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 895:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_reverse_iterator
 896:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 897:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_reverse_iterator(end()); }
 898:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 899:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 900:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read/write reverse iterator that points to one
 901:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  before the first element in the %list.  Iteration is done in
 902:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  reverse element order.
 903:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 904:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       reverse_iterator
 905:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       rend() _GLIBCXX_NOEXCEPT
 906:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return reverse_iterator(begin()); }
 907:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 908:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 909:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 910:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  before the first element in the %list.  Iteration is done in reverse
 911:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 912:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 913:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_reverse_iterator
 914:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       rend() const _GLIBCXX_NOEXCEPT
 915:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_reverse_iterator(begin()); }
 916:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 917:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 918:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 919:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) iterator that points to the
 920:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  first element in the %list.  Iteration is done in ordinary
 921:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 922:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 923:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_iterator
 924:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       cbegin() const noexcept
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 32


 925:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_iterator(this->_M_impl._M_node._M_next); }
 926:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 927:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 928:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) iterator that points one past
 929:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the last element in the %list.  Iteration is done in ordinary
 930:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 931:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 932:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_iterator
 933:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       cend() const noexcept
 934:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_iterator(&this->_M_impl._M_node); }
 935:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 936:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 937:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) reverse iterator that points to
 938:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the last element in the %list.  Iteration is done in reverse
 939:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 940:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 941:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_reverse_iterator
 942:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       crbegin() const noexcept
 943:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_reverse_iterator(end()); }
 944:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 945:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 946:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 947:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  before the first element in the %list.  Iteration is done in reverse
 948:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element order.
 949:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 950:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_reverse_iterator
 951:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       crend() const noexcept
 952:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return const_reverse_iterator(begin()); }
 953:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 954:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 955:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // [23.2.2.2] capacity
 956:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 957:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns true if the %list is empty.  (Thus begin() would equal
 958:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  end().)
 959:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 960:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       bool
 961:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       empty() const _GLIBCXX_NOEXCEPT
 962:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return this->_M_impl._M_node._M_next == &this->_M_impl._M_node; }
 963:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 964:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**  Returns the number of elements in the %list.  */
 965:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_type
 966:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size() const _GLIBCXX_NOEXCEPT
 967:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return this->_M_node_count(); }
 968:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 969:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**  Returns the size() of the largest possible %list.  */
 970:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       size_type
 971:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       max_size() const _GLIBCXX_NOEXCEPT
 972:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _Node_alloc_traits::max_size(_M_get_Node_allocator()); }
 973:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 974:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
 975:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 976:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief Resizes the %list to the specified number of elements.
 977:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param __new_size Number of elements the %list should contain.
 978:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 979:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will %resize the %list to the specified number
 980:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  of elements.  If the number is smaller than the %list's
 981:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  current size the %list is truncated, otherwise default
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 33


 982:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  constructed elements are appended.
 983:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 984:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 985:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       resize(size_type __new_size);
 986:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 987:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
 988:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief Resizes the %list to the specified number of elements.
 989:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param __new_size Number of elements the %list should contain.
 990:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param __x Data with which new elements should be populated.
 991:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
 992:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will %resize the %list to the specified number
 993:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  of elements.  If the number is smaller than the %list's
 994:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  current size the %list is truncated, otherwise the %list is
 995:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  extended and new elements are populated with given data.
 996:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
 997:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
 998:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       resize(size_type __new_size, const value_type& __x);
 999:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1000:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1001:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief Resizes the %list to the specified number of elements.
1002:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param __new_size Number of elements the %list should contain.
1003:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param __x Data with which new elements should be populated.
1004:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1005:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will %resize the %list to the specified number
1006:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  of elements.  If the number is smaller than the %list's
1007:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  current size the %list is truncated, otherwise the %list is
1008:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  extended and new elements are populated with given data.
1009:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1010:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1011:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       resize(size_type __new_size, value_type __x = value_type());
1012:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1013:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1014:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // element access
1015:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1016:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read/write reference to the data at the first
1017:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element of the %list.
1018:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1019:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       reference
1020:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       front() _GLIBCXX_NOEXCEPT
1021:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return *begin(); }
1022:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1023:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1024:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) reference to the data at the first
1025:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element of the %list.
1026:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1027:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_reference
1028:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       front() const _GLIBCXX_NOEXCEPT
1029:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return *begin(); }
1030:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1031:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1032:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read/write reference to the data at the last element
1033:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  of the %list.
1034:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1035:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       reference
1036:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       back() _GLIBCXX_NOEXCEPT
1037:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1038:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	iterator __tmp = end();
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 34


1039:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	--__tmp;
1040:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *__tmp;
1041:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1042:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1043:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1044:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Returns a read-only (constant) reference to the data at the last
1045:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element of the %list.
1046:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1047:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       const_reference
1048:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       back() const _GLIBCXX_NOEXCEPT
1049:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1050:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	const_iterator __tmp = end();
1051:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	--__tmp;
1052:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return *__tmp;
1053:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1054:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1055:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // [23.2.2.3] modifiers
1056:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1057:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Add data to the front of the %list.
1058:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Data to be added.
1059:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1060:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This is a typical stack operation.  The function creates an
1061:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element at the front of the %list and assigns the given data
1062:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  to it.  Due to the nature of a %list this operation can be
1063:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  done in constant time, and does not invalidate iterators and
1064:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  references.
1065:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1066:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1067:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       push_front(const value_type& __x)
 419              		.loc 4 1067 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 431 0006 7860     		str	r0, [r7, #4]
 432 0008 3960     		str	r1, [r7]
1068:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_insert(begin(), __x); }
 433              		.loc 4 1068 0
 434 000a 7868     		ldr	r0, [r7, #4]
 435 000c FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv
 436 0010 0346     		mov	r3, r0
 437 0012 3A68     		ldr	r2, [r7]
 438 0014 1946     		mov	r1, r3
 439 0016 7868     		ldr	r0, [r7, #4]
 440 0018 FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_
 441 001c 00BF     		nop
 442 001e 0837     		adds	r7, r7, #8
 443              		.cfi_def_cfa_offset 8
 444 0020 BD46     		mov	sp, r7
 445              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 35


 446              		@ sp needed
 447 0022 80BD     		pop	{r7, pc}
 448              		.cfi_endproc
 449              	.LFE1683:
 451              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE9pop_frontEv,"axG",%progbits,_ZNSt7__cxx114list
 452              		.align	1
 453              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE9pop_frontEv
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu softvfp
 459              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE9pop_frontEv:
 460              	.LFB1684:
1069:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1070:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1071:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1072:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       push_front(value_type&& __x)
1073:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_insert(begin(), std::move(__x)); }
1074:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1075:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename... _Args>
1076:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus > 201402L
1077:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	reference
1078:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1079:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1080:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1081:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	emplace_front(_Args&&... __args)
1082:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
1083:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  this->_M_insert(begin(), std::forward<_Args>(__args)...);
1084:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus > 201402L
1085:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  return front();
1086:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1087:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
1088:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1089:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1090:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1091:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Removes first element.
1092:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1093:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This is a typical stack operation.  It shrinks the %list by
1094:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  one.  Due to the nature of a %list this operation can be done
1095:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  in constant time, and only invalidates iterators/references to
1096:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the element being removed.
1097:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1098:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Note that no data is returned, and if the first element's data
1099:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  is needed, it should be retrieved before pop_front() is
1100:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  called.
1101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1103:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       pop_front() _GLIBCXX_NOEXCEPT
 461              		.loc 4 1103 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 80B5     		push	{r7, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 36


 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 7860     		str	r0, [r7, #4]
1104:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_erase(begin()); }
 474              		.loc 4 1104 0
 475 0008 7868     		ldr	r0, [r7, #4]
 476 000a FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv
 477 000e 0346     		mov	r3, r0
 478 0010 1946     		mov	r1, r3
 479 0012 7868     		ldr	r0, [r7, #4]
 480 0014 FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E
 481 0018 00BF     		nop
 482 001a 0837     		adds	r7, r7, #8
 483              		.cfi_def_cfa_offset 8
 484 001c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 001e 80BD     		pop	{r7, pc}
 488              		.cfi_endproc
 489              	.LFE1684:
 491              		.section	.text._ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv,"axG",%progbits,_ZNKSt7__cxx114listIP7
 492              		.align	1
 493              		.weak	_ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu softvfp
 499              	_ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv:
 500              	.LFB1685:
 966:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return this->_M_node_count(); }
 501              		.loc 4 966 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 82B0     		sub	sp, sp, #8
 510              		.cfi_def_cfa_offset 16
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 967:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 514              		.loc 4 967 0
 515 0008 7B68     		ldr	r3, [r7, #4]
 516 000a 1846     		mov	r0, r3
 517 000c FFF7FEFF 		bl	_ZNKSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE13_M_node_countEv
 518 0010 0346     		mov	r3, r0
 519 0012 1846     		mov	r0, r3
 520 0014 0837     		adds	r7, r7, #8
 521              		.cfi_def_cfa_offset 8
 522 0016 BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 37


 526              		.cfi_endproc
 527              	.LFE1685:
 529              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv,"axG",%progbits,_ZNSt7__cxx114listIP7I
 530              		.align	1
 531              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu softvfp
 537              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv:
 538              	.LFB1686:
 851:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return iterator(this->_M_impl._M_node._M_next); }
 539              		.loc 4 851 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 16
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 84B0     		sub	sp, sp, #16
 548              		.cfi_def_cfa_offset 24
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 7860     		str	r0, [r7, #4]
 852:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 552              		.loc 4 852 0
 553 0008 7B68     		ldr	r3, [r7, #4]
 554 000a 1A68     		ldr	r2, [r3]
 555 000c 07F10C03 		add	r3, r7, #12
 556 0010 1146     		mov	r1, r2
 557 0012 1846     		mov	r0, r3
 558 0014 FFF7FEFF 		bl	_ZNSt14_List_iteratorIP7IUpdateEC1EPNSt8__detail15_List_node_baseE
 559 0018 FB68     		ldr	r3, [r7, #12]
 560 001a 1846     		mov	r0, r3
 561 001c 1037     		adds	r7, r7, #16
 562              		.cfi_def_cfa_offset 8
 563 001e BD46     		mov	sp, r7
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0020 80BD     		pop	{r7, pc}
 567              		.cfi_endproc
 568              	.LFE1686:
 570              		.section	.text._ZNKSt14_List_iteratorIP7IUpdateEdeEv,"axG",%progbits,_ZNKSt14_List_iteratorIP7IUpd
 571              		.align	1
 572              		.weak	_ZNKSt14_List_iteratorIP7IUpdateEdeEv
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu softvfp
 578              	_ZNKSt14_List_iteratorIP7IUpdateEdeEv:
 579              	.LFB1687:
 152:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return *static_cast<_Node*>(_M_node)->_M_valptr(); }
 580              		.loc 4 152 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 8
 583              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 38


 584 0000 80B5     		push	{r7, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 82B0     		sub	sp, sp, #8
 589              		.cfi_def_cfa_offset 16
 590 0004 00AF     		add	r7, sp, #0
 591              		.cfi_def_cfa_register 7
 592 0006 7860     		str	r0, [r7, #4]
 153:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 593              		.loc 4 153 0
 594 0008 7B68     		ldr	r3, [r7, #4]
 595 000a 1B68     		ldr	r3, [r3]
 596 000c 1846     		mov	r0, r3
 597 000e FFF7FEFF 		bl	_ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv
 598 0012 0346     		mov	r3, r0
 599 0014 1846     		mov	r0, r3
 600 0016 0837     		adds	r7, r7, #8
 601              		.cfi_def_cfa_offset 8
 602 0018 BD46     		mov	sp, r7
 603              		.cfi_def_cfa_register 13
 604              		@ sp needed
 605 001a 80BD     		pop	{r7, pc}
 606              		.cfi_endproc
 607              	.LFE1687:
 609              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD2Ev,"axG",%progbits,_ZNSt7_
 610              		.align	1
 611              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD2Ev
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu softvfp
 617              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD2Ev:
 618              	.LFB1788:
 323:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : public _Node_alloc_type
 619              		.loc 4 323 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 8
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 80B5     		push	{r7, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 7, -8
 626              		.cfi_offset 14, -4
 627 0002 82B0     		sub	sp, sp, #8
 628              		.cfi_def_cfa_offset 16
 629 0004 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 632              	.LBB4:
 323:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : public _Node_alloc_type
 633              		.loc 4 323 0
 634 0008 7868     		ldr	r0, [r7, #4]
 635 000a FFF7FEFF 		bl	_ZNSaISt10_List_nodeIP7IUpdateEED2Ev
 636              	.LBE4:
 637 000e 7B68     		ldr	r3, [r7, #4]
 638 0010 1846     		mov	r0, r3
 639 0012 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 39


 640              		.cfi_def_cfa_offset 8
 641 0014 BD46     		mov	sp, r7
 642              		.cfi_def_cfa_register 13
 643              		@ sp needed
 644 0016 80BD     		pop	{r7, pc}
 645              		.cfi_endproc
 646              	.LFE1788:
 648              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD1Ev
 649              		.thumb_set _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD1Ev,_ZNSt7__cxx1110_List_baseIP
 650              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev,"axG",%progbits,_ZNSt7__cxx1110_Lis
 651              		.align	1
 652              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu softvfp
 658              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev:
 659              	.LFB1790:
 400:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_impl()
 660              		.loc 4 400 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 82B0     		sub	sp, sp, #8
 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 672 0006 7860     		str	r0, [r7, #4]
 673              	.LBB5:
 401:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_init(); }
 674              		.loc 4 401 0
 675 0008 7B68     		ldr	r3, [r7, #4]
 676 000a 1846     		mov	r0, r3
 677 000c FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC1Ev
 402:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 678              		.loc 4 402 0
 679 0010 7868     		ldr	r0, [r7, #4]
 680 0012 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE7_M_initEv
 681              	.LBE5:
 682 0016 7B68     		ldr	r3, [r7, #4]
 683 0018 1846     		mov	r0, r3
 684 001a 0837     		adds	r7, r7, #8
 685              		.cfi_def_cfa_offset 8
 686 001c BD46     		mov	sp, r7
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 001e 80BD     		pop	{r7, pc}
 690              		.cfi_endproc
 691              	.LFE1790:
 693              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC1Ev
 694              		.thumb_set _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC1Ev,_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS
 695              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev,"axG",%progbits,_ZNSt7__cxx1110_Lis
 696              		.align	1
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 40


 697              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu softvfp
 703              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev:
 704              	.LFB1793:
 441:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _M_clear(); }
 705              		.loc 4 441 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 8
 708              		@ frame_needed = 1, uses_anonymous_args = 0
 709 0000 80B5     		push	{r7, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713 0002 82B0     		sub	sp, sp, #8
 714              		.cfi_def_cfa_offset 16
 715 0004 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 717 0006 7860     		str	r0, [r7, #4]
 718              	.LBB6:
 442:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 719              		.loc 4 442 0
 720 0008 7868     		ldr	r0, [r7, #4]
 721 000a FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE8_M_clearEv
 722 000e 7B68     		ldr	r3, [r7, #4]
 723 0010 1846     		mov	r0, r3
 724 0012 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD1Ev
 725              	.LBE6:
 726 0016 7B68     		ldr	r3, [r7, #4]
 727 0018 1846     		mov	r0, r3
 728 001a 0837     		adds	r7, r7, #8
 729              		.cfi_def_cfa_offset 8
 730 001c BD46     		mov	sp, r7
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
 733 001e 80BD     		pop	{r7, pc}
 734              		.cfi_endproc
 735              	.LFE1793:
 737              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED1Ev
 738              		.thumb_set _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED1Ev,_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS
 739              		.section	.text._ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE,"axG",%progbits,_ZSt7
 740              		.align	1
 741              		.weak	_ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu softvfp
 747              	_ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE:
 748              	.LFB1796:
 749              		.file 5 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\\
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 41


   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** /** @file bits/move.h
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****  */
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** #ifndef _MOVE_H
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** #define _MOVE_H 1
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** #include <bits/c++config.h>
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** #include <bits/concept_check.h>
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** {
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****   /**
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *  @ingroup utilities
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    */
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****   template<typename _Tp>
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** } // namespace
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** #if __cplusplus >= 201103L
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** {
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****   /**
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *  @addtogroup utilities
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *  @{
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 42


  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    */
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****   /**
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****    */
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****   template<typename _Tp>
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****     constexpr _Tp&&
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 750              		.loc 5 73 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754              		@ link register save eliminated.
 755 0000 80B4     		push	{r7}
 756              		.cfi_def_cfa_offset 4
 757              		.cfi_offset 7, -4
 758 0002 83B0     		sub	sp, sp, #12
 759              		.cfi_def_cfa_offset 16
 760 0004 00AF     		add	r7, sp, #0
 761              		.cfi_def_cfa_register 7
 762 0006 7860     		str	r0, [r7, #4]
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 763              		.loc 5 74 0
 764 0008 7B68     		ldr	r3, [r7, #4]
 765 000a 1846     		mov	r0, r3
 766 000c 0C37     		adds	r7, r7, #12
 767              		.cfi_def_cfa_offset 4
 768 000e BD46     		mov	sp, r7
 769              		.cfi_def_cfa_register 13
 770              		@ sp needed
 771 0010 80BC     		pop	{r7}
 772              		.cfi_restore 7
 773              		.cfi_def_cfa_offset 0
 774 0012 7047     		bx	lr
 775              		.cfi_endproc
 776              	.LFE1796:
 778              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpO
 779              		.align	1
 780              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_:
 787              	.LFB1795:
1105:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1106:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1107:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Add data to the end of the %list.
1108:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Data to be added.
1109:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1110:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This is a typical stack operation.  The function creates an
1111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  element at the end of the %list and assigns the given data to
1112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  it.  Due to the nature of a %list this operation can be done
1113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  in constant time, and does not invalidate iterators and
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 43


1114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  references.
1115:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1117:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       push_back(const value_type& __x)
1118:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_insert(end(), __x); }
1119:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1120:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1121:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1122:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       push_back(value_type&& __x)
1123:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_insert(end(), std::move(__x)); }
1124:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename... _Args>
1126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus > 201402L
1127:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	reference
1128:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	emplace_back(_Args&&... __args)
1132:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
1133:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  this->_M_insert(end(), std::forward<_Args>(__args)...);
1134:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus > 201402L
1135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return back();
1136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1137:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
1138:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1139:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1140:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1141:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Removes last element.
1142:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1143:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This is a typical stack operation.  It shrinks the %list by
1144:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  one.  Due to the nature of a %list this operation can be done
1145:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  in constant time, and only invalidates iterators/references to
1146:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the element being removed.
1147:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1148:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Note that no data is returned, and if the last element's data
1149:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  is needed, it should be retrieved before pop_back() is called.
1150:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1151:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1152:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       pop_back() _GLIBCXX_NOEXCEPT
1153:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_erase(iterator(this->_M_impl._M_node._M_prev)); }
1154:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1155:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1156:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1157:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Constructs object in %list before specified iterator.
1158:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  A const_iterator into the %list.
1159:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __args  Arguments.
1160:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator that points to the inserted data.
1161:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1162:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert an object of type T constructed
1163:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  with T(std::forward<Args>(args)...) before the specified
1164:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  location.  Due to the nature of a %list this operation can
1165:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  be done in constant time, and does not invalidate iterators
1166:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  and references.
1167:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1168:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename... _Args>
1169:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	iterator
1170:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	emplace(const_iterator __position, _Args&&... __args);
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 44


1171:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1172:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1173:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts given value into %list before specified iterator.
1174:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  A const_iterator into the %list.
1175:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Data to be inserted.
1176:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator that points to the inserted data.
1177:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1178:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert a copy of the given value before
1179:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the specified location.  Due to the nature of a %list this
1180:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  operation can be done in constant time, and does not
1181:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  invalidate iterators and references.
1182:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1183:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
1184:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       insert(const_iterator __position, const value_type& __x);
1185:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1186:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1187:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts given value into %list before specified iterator.
1188:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  An iterator into the %list.
1189:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Data to be inserted.
1190:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator that points to the inserted data.
1191:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1192:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert a copy of the given value before
1193:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the specified location.  Due to the nature of a %list this
1194:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  operation can be done in constant time, and does not
1195:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  invalidate iterators and references.
1196:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1197:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
1198:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       insert(iterator __position, const value_type& __x);
1199:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1200:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1201:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1202:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1203:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts given rvalue into %list before specified iterator.
1204:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  A const_iterator into the %list.
1205:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Data to be inserted.
1206:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator that points to the inserted data.
1207:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1208:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert a copy of the given rvalue before
1209:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the specified location.  Due to the nature of a %list this
1210:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  operation can be done in constant time, and does not
1211:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  invalidate iterators and references.
1212:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	*/
1213:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
1214:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       insert(const_iterator __position, value_type&& __x)
1215:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return emplace(__position, std::move(__x)); }
1216:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1217:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1218:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts the contents of an initializer_list into %list
1219:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *          before specified const_iterator.
1220:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __p  A const_iterator into the %list.
1221:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __l  An initializer_list of value_type.
1222:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator pointing to the first element inserted
1223:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *           (or __position).
1224:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1225:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert copies of the data in the
1226:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  initializer_list @a l into the %list before the location
1227:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  specified by @a p.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 45


1228:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1229:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This operation is linear in the number of elements inserted and
1230:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  does not invalidate iterators and references.
1231:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1232:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
1233:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       insert(const_iterator __p, initializer_list<value_type> __l)
1234:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1235:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1236:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1237:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1238:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1239:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts a number of copies of given data into the %list.
1240:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  A const_iterator into the %list.
1241:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __n  Number of elements to be inserted.
1242:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Data to be inserted.
1243:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator pointing to the first element inserted
1244:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *           (or __position).
1245:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1246:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert a specified number of copies of the
1247:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  given data before the location specified by @a position.
1248:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1249:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This operation is linear in the number of elements inserted and
1250:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  does not invalidate iterators and references.
1251:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1252:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
1253:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       insert(const_iterator __position, size_type __n, const value_type& __x);
1254:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1255:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1256:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts a number of copies of given data into the %list.
1257:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  An iterator into the %list.
1258:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __n  Number of elements to be inserted.
1259:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Data to be inserted.
1260:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1261:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert a specified number of copies of the
1262:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  given data before the location specified by @a position.
1263:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1264:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This operation is linear in the number of elements inserted and
1265:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  does not invalidate iterators and references.
1266:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1267:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1268:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1269:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1270:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	list __tmp(__n, __x, get_allocator());
1271:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	splice(__position, __tmp);
1272:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1273:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1274:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1275:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1276:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1277:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts a range into the %list.
1278:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  A const_iterator into the %list.
1279:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  An input iterator.
1280:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last   An input iterator.
1281:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator pointing to the first element inserted
1282:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *           (or __position).
1283:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1284:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert copies of the data in the range [@a
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 46


1285:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  first,@a last) into the %list before the location specified by
1286:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @a position.
1287:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1288:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This operation is linear in the number of elements inserted and
1289:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  does not invalidate iterators and references.
1290:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1291:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator,
1292:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1293:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	iterator
1294:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	insert(const_iterator __position, _InputIterator __first,
1295:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	       _InputIterator __last);
1296:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1297:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1298:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Inserts a range into the %list.
1299:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  An iterator into the %list.
1300:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  An input iterator.
1301:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last   An input iterator.
1302:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1303:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will insert copies of the data in the range [@a
1304:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  first,@a last) into the %list before the location specified by
1305:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @a position.
1306:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1307:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This operation is linear in the number of elements inserted and
1308:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  does not invalidate iterators and references.
1309:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1310:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator>
1311:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1312:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	insert(iterator __position, _InputIterator __first,
1313:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	       _InputIterator __last)
1314:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
1315:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  list __tmp(__first, __last, get_allocator());
1316:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  splice(__position, __tmp);
1317:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
1318:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1319:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1320:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1321:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Remove element at given position.
1322:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Iterator pointing to element to be erased.
1323:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator pointing to the next element (or end()).
1324:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1325:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will erase the element at the given position and thus
1326:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  shorten the %list by one.
1327:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1328:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Due to the nature of a %list this operation can be done in
1329:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  constant time, and only invalidates iterators/references to
1330:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the element being removed.  The user is also cautioned that
1331:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  this function only erases the element, and that if the element
1332:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  is itself a pointer, the pointed-to memory is not touched in
1333:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  any way.  Managing the pointer is the user's responsibility.
1334:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1335:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
1336:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1337:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       erase(const_iterator __position) noexcept;
1338:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1339:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       erase(iterator __position);
1340:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1341:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 47


1342:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1343:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Remove a range of elements.
1344:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1345:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1346:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *                erased.
1347:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @return  An iterator pointing to the element pointed to by @a last
1348:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *           prior to erasing (or end()).
1349:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1350:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This function will erase the elements in the range @a
1351:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  [first,last) and shorten the %list accordingly.
1352:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1353:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This operation is linear time in the size of the range and only
1354:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  invalidates iterators/references to the element being removed.
1355:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  The user is also cautioned that this function only erases the
1356:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  elements, and that if the elements themselves are pointers, the
1357:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer
1358:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  is the user's responsibility.
1359:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1360:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       iterator
1361:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1362:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       erase(const_iterator __first, const_iterator __last) noexcept
1363:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1364:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       erase(iterator __first, iterator __last)
1365:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1366:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1367:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	while (__first != __last)
1368:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  __first = erase(__first);
1369:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	return __last._M_const_cast();
1370:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1371:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1372:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1373:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Swaps data with another %list.
1374:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  A %list of the same element and allocator types.
1375:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1376:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  This exchanges the elements between two lists in constant
1377:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  time.  Note that the global std::swap() function is
1378:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  specialized such that std::swap(l1,l2) will feed to this
1379:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  function.
1380:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1381:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1382:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1383:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1384:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       swap(list& __x) _GLIBCXX_NOEXCEPT
1385:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1386:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__detail::_List_node_base::swap(this->_M_impl._M_node,
1387:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 					__x._M_impl._M_node);
1388:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1389:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	size_t __xsize = __x._M_get_size();
1390:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__x._M_set_size(this->_M_get_size());
1391:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_set_size(__xsize);
1392:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1393:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Node_alloc_traits::_S_on_swap(this->_M_get_Node_allocator(),
1394:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 				       __x._M_get_Node_allocator());
1395:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1396:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1397:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1398:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Erases all the elements.  Note that this function only erases
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 48


1399:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the elements, and that if the elements themselves are
1400:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  pointers, the pointed-to memory is not touched in any way.
1401:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Managing the pointer is the user's responsibility.
1402:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1403:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1404:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       clear() _GLIBCXX_NOEXCEPT
1405:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1406:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Base::_M_clear();
1407:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Base::_M_init();
1408:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1409:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1410:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // [23.2.2.4] list operations
1411:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1412:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Insert contents of another %list.
1413:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Iterator referencing the element to insert before.
1414:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Source list.
1415:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1416:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  The elements of @a __x are inserted in constant time in front of
1417:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the element referenced by @a __position.  @a __x becomes an empty
1418:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  list.
1419:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1420:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Requires this != @a __x.
1421:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1422:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1423:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1424:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(const_iterator __position, list&& __x) noexcept
1425:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1426:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(iterator __position, list& __x)
1427:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1428:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1429:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	if (!__x.empty())
1430:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  {
1431:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    _M_check_equal_allocators(__x);
1432:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1433:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    this->_M_transfer(__position._M_const_cast(),
1434:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			      __x.begin(), __x.end());
1435:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1436:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    this->_M_inc_size(__x._M_get_size());
1437:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __x._M_set_size(0);
1438:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  }
1439:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1440:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1441:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1442:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1443:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(const_iterator __position, list& __x) noexcept
1444:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { splice(__position, std::move(__x)); }
1445:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1446:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1447:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1448:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1449:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Insert element from another %list.
1450:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Const_iterator referencing the element to
1451:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *                      insert before.
1452:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Source list.
1453:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __i  Const_iterator referencing the element to move.
1454:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1455:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes the element in list @a __x referenced by @a __i and
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 49


1456:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  inserts it into the current list before @a __position.
1457:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1458:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1459:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(const_iterator __position, list&& __x, const_iterator __i) noexcept
1460:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1461:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1462:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Insert element from another %list.
1463:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Iterator referencing the element to insert before.
1464:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Source list.
1465:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __i  Iterator referencing the element to move.
1466:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1467:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes the element in list @a __x referenced by @a __i and
1468:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  inserts it into the current list before @a __position.
1469:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1470:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1471:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(iterator __position, list& __x, iterator __i)
1472:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1473:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1474:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	iterator __j = __i._M_const_cast();
1475:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	++__j;
1476:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	if (__position == __i || __position == __j)
1477:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  return;
1478:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1479:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	if (this != std::__addressof(__x))
1480:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _M_check_equal_allocators(__x);
1481:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1482:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_transfer(__position._M_const_cast(),
1483:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			  __i._M_const_cast(), __j);
1484:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1485:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_inc_size(1);
1486:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__x._M_dec_size(1);
1487:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1488:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1489:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1490:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1491:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Insert element from another %list.
1492:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Const_iterator referencing the element to
1493:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *                      insert before.
1494:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Source list.
1495:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __i  Const_iterator referencing the element to move.
1496:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1497:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes the element in list @a __x referenced by @a __i and
1498:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  inserts it into the current list before @a __position.
1499:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1500:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1501:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(const_iterator __position, list& __x, const_iterator __i) noexcept
1502:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { splice(__position, std::move(__x), __i); }
1503:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1504:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1505:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1506:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1507:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Insert range from another %list.
1508:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Const_iterator referencing the element to
1509:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *                      insert before.
1510:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Source list.
1511:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  Const_iterator referencing the start of range in x.
1512:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last  Const_iterator referencing the end of range in x.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 50


1513:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1514:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes elements in the range [__first,__last) and inserts them
1515:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  before @a __position in constant time.
1516:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1517:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Undefined if @a __position is in [__first,__last).
1518:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1519:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1520:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(const_iterator __position, list&& __x, const_iterator __first,
1521:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	     const_iterator __last) noexcept
1522:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1523:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1524:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Insert range from another %list.
1525:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Iterator referencing the element to insert before.
1526:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Source list.
1527:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  Iterator referencing the start of range in x.
1528:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last  Iterator referencing the end of range in x.
1529:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1530:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes elements in the range [__first,__last) and inserts them
1531:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  before @a __position in constant time.
1532:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1533:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Undefined if @a __position is in [__first,__last).
1534:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1535:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1536:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(iterator __position, list& __x, iterator __first,
1537:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	     iterator __last)
1538:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1539:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1540:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	if (__first != __last)
1541:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  {
1542:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    if (this != std::__addressof(__x))
1543:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	      _M_check_equal_allocators(__x);
1544:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1545:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    size_t __n = this->_M_distance(__first._M_node, __last._M_node);
1546:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    this->_M_inc_size(__n);
1547:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    __x._M_dec_size(__n);
1548:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1549:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    this->_M_transfer(__position._M_const_cast(),
1550:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			      __first._M_const_cast(),
1551:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			      __last._M_const_cast());
1552:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  }
1553:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1554:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1555:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1556:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1557:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Insert range from another %list.
1558:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __position  Const_iterator referencing the element to
1559:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *                      insert before.
1560:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Source list.
1561:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __first  Const_iterator referencing the start of range in x.
1562:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __last  Const_iterator referencing the end of range in x.
1563:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1564:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes elements in the range [__first,__last) and inserts them
1565:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  before @a __position in constant time.
1566:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1567:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Undefined if @a __position is in [__first,__last).
1568:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1569:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 51


1570:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       splice(const_iterator __position, list& __x, const_iterator __first,
1571:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	     const_iterator __last) noexcept
1572:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { splice(__position, std::move(__x), __first, __last); }
1573:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1574:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1575:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1576:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Remove all elements equal to value.
1577:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __value  The value to remove.
1578:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1579:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes every element in the list equal to @a value.
1580:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Remaining elements stay in list order.  Note that this
1581:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  function only erases the elements, and that if the elements
1582:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  themselves are pointers, the pointed-to memory is not
1583:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  touched in any way.  Managing the pointer is the user's
1584:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  responsibility.
1585:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1586:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1587:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       remove(const _Tp& __value);
1588:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1589:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1590:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Remove all elements satisfying a predicate.
1591:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @tparam  _Predicate  Unary predicate function or object.
1592:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1593:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Removes every element in the list for which the predicate
1594:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  returns true.  Remaining elements stay in list order.  Note
1595:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  that this function only erases the elements, and that if the
1596:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  elements themselves are pointers, the pointed-to memory is
1597:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  not touched in any way.  Managing the pointer is the user's
1598:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  responsibility.
1599:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1600:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _Predicate>
1601:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1602:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	remove_if(_Predicate);
1603:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1604:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1605:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Remove consecutive duplicate elements.
1606:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1607:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  For each consecutive set of elements with the same value,
1608:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  remove all but the first one.  Remaining elements stay in
1609:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  list order.  Note that this function only erases the
1610:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  elements, and that if the elements themselves are pointers,
1611:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the pointed-to memory is not touched in any way.  Managing
1612:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  the pointer is the user's responsibility.
1613:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1614:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1615:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       unique();
1616:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1617:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1618:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Remove consecutive elements satisfying a predicate.
1619:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @tparam _BinaryPredicate  Binary predicate function or object.
1620:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1621:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  For each consecutive set of elements [first,last) that
1622:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  satisfy predicate(first,i) where i is an iterator in
1623:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  [first,last), remove all but the first one.  Remaining
1624:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  elements stay in list order.  Note that this function only
1625:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  erases the elements, and that if the elements themselves are
1626:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  pointers, the pointed-to memory is not touched in any way.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 52


1627:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Managing the pointer is the user's responsibility.
1628:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1629:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _BinaryPredicate>
1630:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1631:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	unique(_BinaryPredicate);
1632:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1633:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1634:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Merge sorted lists.
1635:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Sorted list to merge.
1636:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1637:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Assumes that both @a __x and this list are sorted according to
1638:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  operator<().  Merges elements of @a __x into this list in
1639:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  sorted order, leaving @a __x empty when complete.  Elements in
1640:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  this list precede elements in @a __x that are equal.
1641:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1642:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1643:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1644:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       merge(list&& __x);
1645:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1646:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1647:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       merge(list& __x)
1648:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { merge(std::move(__x)); }
1649:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1650:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1651:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       merge(list& __x);
1652:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1653:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1654:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1655:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Merge sorted lists according to comparison function.
1656:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @tparam _StrictWeakOrdering Comparison function defining
1657:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  sort order.
1658:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __x  Sorted list to merge.
1659:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @param  __comp  Comparison functor.
1660:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1661:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Assumes that both @a __x and this list are sorted according to
1662:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  StrictWeakOrdering.  Merges elements of @a __x into this list
1663:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  in sorted order, leaving @a __x empty when complete.  Elements
1664:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  in this list precede elements in @a __x that are equivalent
1665:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  according to StrictWeakOrdering().
1666:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1667:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1668:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _StrictWeakOrdering>
1669:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1670:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	merge(list&& __x, _StrictWeakOrdering __comp);
1671:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1672:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _StrictWeakOrdering>
1673:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1674:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	merge(list& __x, _StrictWeakOrdering __comp)
1675:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ merge(std::move(__x), __comp); }
1676:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1677:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _StrictWeakOrdering>
1678:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1679:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	merge(list& __x, _StrictWeakOrdering __comp);
1680:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1681:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1682:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1683:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Reverse the elements in list.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 53


1684:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1685:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Reverse the order of elements in the list in linear time.
1686:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1687:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1688:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       reverse() _GLIBCXX_NOEXCEPT
1689:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { this->_M_impl._M_node._M_reverse(); }
1690:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1691:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1692:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Sort the elements.
1693:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1694:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Sorts the elements of this list in NlogN time.  Equivalent
1695:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  elements remain in list order.
1696:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1697:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1698:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       sort();
1699:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1700:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       /**
1701:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  @brief  Sort the elements according to comparison function.
1702:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *
1703:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  Sorts the elements of this list in NlogN time.  Equivalent
1704:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        *  elements remain in list order.
1705:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        */
1706:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _StrictWeakOrdering>
1707:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1708:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	sort(_StrictWeakOrdering);
1709:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1710:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     protected:
1711:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Internal constructor functions follow.
1712:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1713:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by the range constructor to implement [23.1.1]/9
1714:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1715:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1716:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // 438. Ambiguity in the "do the right thing" clause
1717:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _Integer>
1718:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1719:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
1720:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ _M_fill_initialize(static_cast<size_type>(__n), __x); }
1721:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1722:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by the range constructor to implement [23.1.1]/9
1723:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator>
1724:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1725:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1726:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			       __false_type)
1727:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
1728:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  for (; __first != __last; ++__first)
1729:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1730:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    emplace_back(*__first);
1731:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1732:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	    push_back(*__first);
1733:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1734:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
1735:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1736:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by list(n,v,a), and the range constructor when it turns out
1737:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // to be the same thing.
1738:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1739:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_fill_initialize(size_type __n, const value_type& __x)
1740:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 54


1741:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	for (; __n; --__n)
1742:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  push_back(__x);
1743:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1744:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1745:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1746:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by list(n).
1747:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1748:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_default_initialize(size_type __n)
1749:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1750:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	for (; __n; --__n)
1751:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  emplace_back();
1752:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1753:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1754:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by resize(sz).
1755:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1756:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_default_append(size_type __n);
1757:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1758:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1759:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Internal assign functions follow.
1760:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1761:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by the range assign to implement [23.1.1]/9
1762:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1763:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1764:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // 438. Ambiguity in the "do the right thing" clause
1765:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _Integer>
1766:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1767:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1768:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ _M_fill_assign(__n, __val); }
1769:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1770:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by the range assign to implement [23.1.1]/9
1771:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       template<typename _InputIterator>
1772:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	void
1773:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1774:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 			   __false_type);
1775:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1776:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Called by assign(n,t), and the range assign when it turns out
1777:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // to be the same thing.
1778:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1779:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1780:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1781:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1782:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Moves the elements from [first,last) before position.
1783:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1784:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_transfer(iterator __position, iterator __first, iterator __last)
1785:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { __position._M_node->_M_transfer(__first._M_node, __last._M_node); }
1786:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1787:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Inserts new element at position given and with value given.
1788:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus < 201103L
1789:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1790:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_insert(iterator __position, const value_type& __x)
1791:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1792:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Node* __tmp = _M_create_node(__x);
1793:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__tmp->_M_hook(__position._M_node);
1794:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_inc_size(1);
1795:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
1796:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1797:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****      template<typename... _Args>
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 55


1798:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        void
1799:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        _M_insert(iterator __position, _Args&&... __args)
 788              		.loc 4 1799 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 24
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 80B5     		push	{r7, lr}
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 7, -8
 795              		.cfi_offset 14, -4
 796 0002 86B0     		sub	sp, sp, #24
 797              		.cfi_def_cfa_offset 32
 798 0004 00AF     		add	r7, sp, #0
 799              		.cfi_def_cfa_register 7
 800 0006 F860     		str	r0, [r7, #12]
 801 0008 B960     		str	r1, [r7, #8]
 802 000a 7A60     		str	r2, [r7, #4]
1800:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        {
1801:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	 _Node* __tmp = _M_create_node(std::forward<_Args>(__args)...);
 803              		.loc 4 1801 0
 804 000c 7868     		ldr	r0, [r7, #4]
 805 000e FFF7FEFF 		bl	_ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE
 806 0012 0346     		mov	r3, r0
 807 0014 1946     		mov	r1, r3
 808 0016 F868     		ldr	r0, [r7, #12]
 809 0018 FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_
 810 001c 7861     		str	r0, [r7, #20]
1802:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	 __tmp->_M_hook(__position._M_node);
 811              		.loc 4 1802 0
 812 001e 7B69     		ldr	r3, [r7, #20]
 813 0020 BA68     		ldr	r2, [r7, #8]
 814 0022 1146     		mov	r1, r2
 815 0024 1846     		mov	r0, r3
 816 0026 FFF7FEFF 		bl	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
1803:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	 this->_M_inc_size(1);
 817              		.loc 4 1803 0
 818 002a FB68     		ldr	r3, [r7, #12]
 819 002c 0121     		movs	r1, #1
 820 002e 1846     		mov	r0, r3
 821 0030 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_inc_sizeEj
1804:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****        }
 822              		.loc 4 1804 0
 823 0034 00BF     		nop
 824 0036 1837     		adds	r7, r7, #24
 825              		.cfi_def_cfa_offset 8
 826 0038 BD46     		mov	sp, r7
 827              		.cfi_def_cfa_register 13
 828              		@ sp needed
 829 003a 80BD     		pop	{r7, pc}
 830              		.cfi_endproc
 831              	.LFE1795:
 833              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E,"axG",%progbi
 834              		.align	1
 835              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 56


 839              		.fpu softvfp
 841              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E:
 842              	.LFB1797:
1805:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1806:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1807:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       // Erases element at position given.
1808:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       void
1809:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _M_erase(iterator __position) _GLIBCXX_NOEXCEPT
 843              		.loc 4 1809 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 16
 846              		@ frame_needed = 1, uses_anonymous_args = 0
 847 0000 90B5     		push	{r4, r7, lr}
 848              		.cfi_def_cfa_offset 12
 849              		.cfi_offset 4, -12
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 85B0     		sub	sp, sp, #20
 853              		.cfi_def_cfa_offset 32
 854 0004 00AF     		add	r7, sp, #0
 855              		.cfi_def_cfa_register 7
 856 0006 7860     		str	r0, [r7, #4]
 857 0008 3960     		str	r1, [r7]
1810:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
1811:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_dec_size(1);
 858              		.loc 4 1811 0
 859 000a 7B68     		ldr	r3, [r7, #4]
 860 000c 0121     		movs	r1, #1
 861 000e 1846     		mov	r0, r3
 862 0010 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_dec_sizeEj
1812:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	__position._M_node->_M_unhook();
 863              		.loc 4 1812 0
 864 0014 3B68     		ldr	r3, [r7]
 865 0016 1846     		mov	r0, r3
 866 0018 FFF7FEFF 		bl	_ZNSt8__detail15_List_node_base9_M_unhookEv
1813:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Node* __n = static_cast<_Node*>(__position._M_node);
 867              		.loc 4 1813 0
 868 001c 3B68     		ldr	r3, [r7]
 869 001e FB60     		str	r3, [r7, #12]
1814:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #if __cplusplus >= 201103L
1815:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Node_alloc_traits::destroy(_M_get_Node_allocator(), __n->_M_valptr());
 870              		.loc 4 1815 0
 871 0020 7B68     		ldr	r3, [r7, #4]
 872 0022 1846     		mov	r0, r3
 873 0024 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv
 874 0028 0446     		mov	r4, r0
 875 002a F868     		ldr	r0, [r7, #12]
 876 002c FFF7FEFF 		bl	_ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv
 877 0030 0346     		mov	r3, r0
 878 0032 1946     		mov	r1, r3
 879 0034 2046     		mov	r0, r4
 880 0036 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_
1816:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
1817:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_Tp_alloc_type(_M_get_Node_allocator()).destroy(__n->_M_valptr());
1818:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
1819:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
1820:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_put_node(__n);
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 57


 881              		.loc 4 1820 0
 882 003a 7B68     		ldr	r3, [r7, #4]
 883 003c F968     		ldr	r1, [r7, #12]
 884 003e 1846     		mov	r0, r3
 885 0040 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E
1821:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 886              		.loc 4 1821 0
 887 0044 00BF     		nop
 888 0046 1437     		adds	r7, r7, #20
 889              		.cfi_def_cfa_offset 12
 890 0048 BD46     		mov	sp, r7
 891              		.cfi_def_cfa_register 13
 892              		@ sp needed
 893 004a 90BD     		pop	{r4, r7, pc}
 894              		.cfi_endproc
 895              	.LFE1797:
 897              		.section	.text._ZNKSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE13_M_node_countEv,"axG",%progbits,_ZNKS
 898              		.align	1
 899              		.weak	_ZNKSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE13_M_node_countEv
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu softvfp
 905              	_ZNKSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE13_M_node_countEv:
 906              	.LFB1798:
 364:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 907              		.loc 4 364 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 8
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 82B0     		sub	sp, sp, #8
 916              		.cfi_def_cfa_offset 16
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 7860     		str	r0, [r7, #4]
 364:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 920              		.loc 4 364 0
 921 0008 7B68     		ldr	r3, [r7, #4]
 922 000a 1846     		mov	r0, r3
 923 000c FFF7FEFF 		bl	_ZNKSt10_List_nodeIjE9_M_valptrEv
 924 0010 0346     		mov	r3, r0
 925 0012 1B68     		ldr	r3, [r3]
 926 0014 1846     		mov	r0, r3
 927 0016 0837     		adds	r7, r7, #8
 928              		.cfi_def_cfa_offset 8
 929 0018 BD46     		mov	sp, r7
 930              		.cfi_def_cfa_register 13
 931              		@ sp needed
 932 001a 80BD     		pop	{r7, pc}
 933              		.cfi_endproc
 934              	.LFE1798:
 936              		.section	.text._ZNSt14_List_iteratorIP7IUpdateEC2EPNSt8__detail15_List_node_baseE,"axG",%progbits,
 937              		.align	1
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 58


 938              		.weak	_ZNSt14_List_iteratorIP7IUpdateEC2EPNSt8__detail15_List_node_baseE
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 942              		.fpu softvfp
 944              	_ZNSt14_List_iteratorIP7IUpdateEC2EPNSt8__detail15_List_node_baseE:
 945              	.LFB1800:
 143:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       : _M_node(__x) { }
 946              		.loc 4 143 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 8
 949              		@ frame_needed = 1, uses_anonymous_args = 0
 950              		@ link register save eliminated.
 951 0000 80B4     		push	{r7}
 952              		.cfi_def_cfa_offset 4
 953              		.cfi_offset 7, -4
 954 0002 83B0     		sub	sp, sp, #12
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              		.cfi_def_cfa_register 7
 958 0006 7860     		str	r0, [r7, #4]
 959 0008 3960     		str	r1, [r7]
 960              	.LBB7:
 144:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 961              		.loc 4 144 0
 962 000a 7B68     		ldr	r3, [r7, #4]
 963 000c 3A68     		ldr	r2, [r7]
 964 000e 1A60     		str	r2, [r3]
 965              	.LBE7:
 966 0010 7B68     		ldr	r3, [r7, #4]
 967 0012 1846     		mov	r0, r3
 968 0014 0C37     		adds	r7, r7, #12
 969              		.cfi_def_cfa_offset 4
 970 0016 BD46     		mov	sp, r7
 971              		.cfi_def_cfa_register 13
 972              		@ sp needed
 973 0018 80BC     		pop	{r7}
 974              		.cfi_restore 7
 975              		.cfi_def_cfa_offset 0
 976 001a 7047     		bx	lr
 977              		.cfi_endproc
 978              	.LFE1800:
 980              		.weak	_ZNSt14_List_iteratorIP7IUpdateEC1EPNSt8__detail15_List_node_baseE
 981              		.thumb_set _ZNSt14_List_iteratorIP7IUpdateEC1EPNSt8__detail15_List_node_baseE,_ZNSt14_List_iterato
 982              		.section	.text._ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv,"axG",%progbits,_ZNSt10_List_nodeIP7IUpdat
 983              		.align	1
 984              		.weak	_ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu softvfp
 990              	_ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv:
 991              	.LFB1802:
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp const* _M_valptr() const { return _M_storage._M_ptr(); }
 992              		.loc 4 113 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 59


 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996 0000 80B5     		push	{r7, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 82B0     		sub	sp, sp, #8
 1001              		.cfi_def_cfa_offset 16
 1002 0004 00AF     		add	r7, sp, #0
 1003              		.cfi_def_cfa_register 7
 1004 0006 7860     		str	r0, [r7, #4]
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp const* _M_valptr() const { return _M_storage._M_ptr(); }
 1005              		.loc 4 113 0
 1006 0008 7B68     		ldr	r3, [r7, #4]
 1007 000a 0833     		adds	r3, r3, #8
 1008 000c 1846     		mov	r0, r3
 1009 000e FFF7FEFF 		bl	_ZN9__gnu_cxx16__aligned_membufIP7IUpdateE6_M_ptrEv
 1010 0012 0346     		mov	r3, r0
 1011 0014 1846     		mov	r0, r3
 1012 0016 0837     		adds	r7, r7, #8
 1013              		.cfi_def_cfa_offset 8
 1014 0018 BD46     		mov	sp, r7
 1015              		.cfi_def_cfa_register 13
 1016              		@ sp needed
 1017 001a 80BD     		pop	{r7, pc}
 1018              		.cfi_endproc
 1019              	.LFE1802:
 1021              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC2Ev,"axG",%progbits,_ZNSt7_
 1022              		.align	1
 1023              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC2Ev
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu softvfp
 1029              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC2Ev:
 1030              	.LFB1834:
 332:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	: _Node_alloc_type(), _M_node()
 1031              		.loc 4 332 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 8
 1034              		@ frame_needed = 1, uses_anonymous_args = 0
 1035 0000 80B5     		push	{r7, lr}
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 7, -8
 1038              		.cfi_offset 14, -4
 1039 0002 82B0     		sub	sp, sp, #8
 1040              		.cfi_def_cfa_offset 16
 1041 0004 00AF     		add	r7, sp, #0
 1042              		.cfi_def_cfa_register 7
 1043 0006 7860     		str	r0, [r7, #4]
 1044              	.LBB8:
 333:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{ }
 1045              		.loc 4 333 0
 1046 0008 7868     		ldr	r0, [r7, #4]
 1047 000a FFF7FEFF 		bl	_ZNSaISt10_List_nodeIP7IUpdateEEC2Ev
 1048 000e 7B68     		ldr	r3, [r7, #4]
 1049 0010 1A46     		mov	r2, r3
 1050 0012 0023     		movs	r3, #0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 60


 1051 0014 1360     		str	r3, [r2]
 1052 0016 5360     		str	r3, [r2, #4]
 1053 0018 9360     		str	r3, [r2, #8]
 1054              	.LBE8:
 334:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1055              		.loc 4 334 0
 1056 001a 7B68     		ldr	r3, [r7, #4]
 1057 001c 1846     		mov	r0, r3
 1058 001e 0837     		adds	r7, r7, #8
 1059              		.cfi_def_cfa_offset 8
 1060 0020 BD46     		mov	sp, r7
 1061              		.cfi_def_cfa_register 13
 1062              		@ sp needed
 1063 0022 80BD     		pop	{r7, pc}
 1064              		.cfi_endproc
 1065              	.LFE1834:
 1067              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC1Ev
 1068              		.thumb_set _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC1Ev,_ZNSt7__cxx1110_List_baseIP
 1069              		.section	.text._ZNSaISt10_List_nodeIP7IUpdateEED2Ev,"axG",%progbits,_ZNSaISt10_List_nodeIP7IUpdate
 1070              		.align	1
 1071              		.weak	_ZNSaISt10_List_nodeIP7IUpdateEED2Ev
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu softvfp
 1077              	_ZNSaISt10_List_nodeIP7IUpdateEED2Ev:
 1078              	.LFB1837:
 1079              		.file 6 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\\
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** /*
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  *
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 61


  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  */
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****  */
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #endif
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #endif
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** {
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****   /**
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    *  @addtogroup allocators
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    *  @{
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    */
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****   template<>
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****     class allocator<void>
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****     {
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****     public:
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef size_t      size_type;
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef void*       pointer;
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef void        value_type;
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       template<typename _Tp1>
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	struct rebind
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  86:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 62


  87:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  88:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  89:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	void
  90:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  92:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  93:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       template<typename _Up>
  94:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	void
  95:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	destroy(_Up* __p) { __p->~_Up(); }
  96:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #endif
  97:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****     };
  98:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
  99:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****   /**
 100:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    *
 102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 103:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    *  for further details.
 104:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    *
 105:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 106:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    */
 107:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****   template<typename _Tp>
 108:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****     class allocator: public __allocator_base<_Tp>
 109:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****     {
 110:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****    public:
 111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef size_t     size_type;
 112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 115:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 117:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 118:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 119:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       template<typename _Tp1>
 120:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	struct rebind
 121:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 122:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 123:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 124:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 127:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 128:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** #endif
 130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       allocator() throw() { }
 132:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 133:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       allocator(const allocator& __a) throw()
 134:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       template<typename _Tp1>
 137:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) throw() { }
 138:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 139:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h ****       ~allocator() throw() { }
 1080              		.loc 6 139 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 8
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 63


 1084 0000 80B5     		push	{r7, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 82B0     		sub	sp, sp, #8
 1089              		.cfi_def_cfa_offset 16
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 7860     		str	r0, [r7, #4]
 1093              	.LBB9:
 1094              		.loc 6 139 0
 1095 0008 7868     		ldr	r0, [r7, #4]
 1096 000a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev
 1097              	.LBE9:
 1098 000e 7B68     		ldr	r3, [r7, #4]
 1099 0010 1846     		mov	r0, r3
 1100 0012 0837     		adds	r7, r7, #8
 1101              		.cfi_def_cfa_offset 8
 1102 0014 BD46     		mov	sp, r7
 1103              		.cfi_def_cfa_register 13
 1104              		@ sp needed
 1105 0016 80BD     		pop	{r7, pc}
 1106              		.cfi_endproc
 1107              	.LFE1837:
 1109              		.weak	_ZNSaISt10_List_nodeIP7IUpdateEED1Ev
 1110              		.thumb_set _ZNSaISt10_List_nodeIP7IUpdateEED1Ev,_ZNSaISt10_List_nodeIP7IUpdateEED2Ev
 1111              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE7_M_initEv,"axG",%progbits,_ZNSt7__cxx11
 1112              		.align	1
 1113              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE7_M_initEv
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1117              		.fpu softvfp
 1119              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE7_M_initEv:
 1120              	.LFB1839:
 448:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       {
 1121              		.loc 4 448 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 8
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125 0000 80B5     		push	{r7, lr}
 1126              		.cfi_def_cfa_offset 8
 1127              		.cfi_offset 7, -8
 1128              		.cfi_offset 14, -4
 1129 0002 82B0     		sub	sp, sp, #8
 1130              		.cfi_def_cfa_offset 16
 1131 0004 00AF     		add	r7, sp, #0
 1132              		.cfi_def_cfa_register 7
 1133 0006 7860     		str	r0, [r7, #4]
 450:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	this->_M_impl._M_node._M_prev = &this->_M_impl._M_node;
 1134              		.loc 4 450 0
 1135 0008 7A68     		ldr	r2, [r7, #4]
 1136 000a 7B68     		ldr	r3, [r7, #4]
 1137 000c 1A60     		str	r2, [r3]
 451:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	_M_set_size(0);
 1138              		.loc 4 451 0
 1139 000e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 64


 1140 0010 7B68     		ldr	r3, [r7, #4]
 1141 0012 5A60     		str	r2, [r3, #4]
 452:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       }
 1142              		.loc 4 452 0
 1143 0014 0021     		movs	r1, #0
 1144 0016 7868     		ldr	r0, [r7, #4]
 1145 0018 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_set_sizeEj
 453:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****     };
 1146              		.loc 4 453 0
 1147 001c 00BF     		nop
 1148 001e 0837     		adds	r7, r7, #8
 1149              		.cfi_def_cfa_offset 8
 1150 0020 BD46     		mov	sp, r7
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 0022 80BD     		pop	{r7, pc}
 1154              		.cfi_endproc
 1155              	.LFE1839:
 1157              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE8_M_clearEv,"axG",%progbits,_ZNSt7__cxx1
 1158              		.align	1
 1159              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE8_M_clearEv
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu softvfp
 1165              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE8_M_clearEv:
 1166              	.LFB1840:
 1167              		.file 7 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\\
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // List implementation (out of line) -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** /*
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  *
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * Copyright (c) 1994
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * Hewlett-Packard Company
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  *
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 65


  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * representations about the suitability of this software for any
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  *
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  *
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * Copyright (c) 1996,1997
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  *
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * representations about the suitability of this software for any
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  */
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** /** @file bits/list.tcc
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  *  Do not attempt to use it directly. @headername{list}
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****  */
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** #ifndef _LIST_TCC
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** #define _LIST_TCC 1
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** {
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****   template<typename _Tp, typename _Alloc>
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****     void
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****     _List_base<_Tp, _Alloc>::
 1168              		.loc 7 65 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 24
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172 0000 80B5     		push	{r7, lr}
 1173              		.cfi_def_cfa_offset 8
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 86B0     		sub	sp, sp, #24
 1177              		.cfi_def_cfa_offset 32
 1178 0004 00AF     		add	r7, sp, #0
 1179              		.cfi_def_cfa_register 7
 1180 0006 7860     		str	r0, [r7, #4]
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****     _M_clear() _GLIBCXX_NOEXCEPT
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****     {
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****       typedef _List_node<_Tp>  _Node;
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****       __detail::_List_node_base* __cur = _M_impl._M_node._M_next;
 1181              		.loc 7 69 0
 1182 0008 7B68     		ldr	r3, [r7, #4]
 1183 000a 1B68     		ldr	r3, [r3]
 1184 000c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 66


 1185              	.L56:
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****       while (__cur != &_M_impl._M_node)
 1186              		.loc 7 70 0
 1187 000e 7B68     		ldr	r3, [r7, #4]
 1188 0010 7A69     		ldr	r2, [r7, #20]
 1189 0012 9A42     		cmp	r2, r3
 1190 0014 15D0     		beq	.L57
 1191              	.LBB10:
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	{
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	  _Node* __tmp = static_cast<_Node*>(__cur);
 1192              		.loc 7 72 0
 1193 0016 7B69     		ldr	r3, [r7, #20]
 1194 0018 3B61     		str	r3, [r7, #16]
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	  __cur = __tmp->_M_next;
 1195              		.loc 7 73 0
 1196 001a 3B69     		ldr	r3, [r7, #16]
 1197 001c 1B68     		ldr	r3, [r3]
 1198 001e 7B61     		str	r3, [r7, #20]
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	  _Tp* __val = __tmp->_M_valptr();
 1199              		.loc 7 74 0
 1200 0020 3869     		ldr	r0, [r7, #16]
 1201 0022 FFF7FEFF 		bl	_ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv
 1202 0026 F860     		str	r0, [r7, #12]
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** #if __cplusplus >= 201103L
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	  _Node_alloc_traits::destroy(_M_get_Node_allocator(), __val);
 1203              		.loc 7 76 0
 1204 0028 7868     		ldr	r0, [r7, #4]
 1205 002a FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv
 1206 002e 0346     		mov	r3, r0
 1207 0030 F968     		ldr	r1, [r7, #12]
 1208 0032 1846     		mov	r0, r3
 1209 0034 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** #else
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	  _Tp_alloc_type(_M_get_Node_allocator()).destroy(__val);
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** #endif
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	  _M_put_node(__tmp);
 1210              		.loc 7 80 0
 1211 0038 3969     		ldr	r1, [r7, #16]
 1212 003a 7868     		ldr	r0, [r7, #4]
 1213 003c FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E
 1214              	.LBE10:
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	{
 1215              		.loc 7 70 0
 1216 0040 E5E7     		b	.L56
 1217              	.L57:
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc **** 	}
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\list.tcc ****     }
 1218              		.loc 7 82 0
 1219 0042 00BF     		nop
 1220 0044 1837     		adds	r7, r7, #24
 1221              		.cfi_def_cfa_offset 8
 1222 0046 BD46     		mov	sp, r7
 1223              		.cfi_def_cfa_register 13
 1224              		@ sp needed
 1225 0048 80BD     		pop	{r7, pc}
 1226              		.cfi_endproc
 1227              	.LFE1840:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 67


 1229              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_ED
 1230              		.align	1
 1231              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_
 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1235              		.fpu softvfp
 1237              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_:
 1238              	.LFB1841:
 570:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	{
 1239              		.loc 4 570 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 24
 1242              		@ frame_needed = 1, uses_anonymous_args = 0
 1243 0000 90B5     		push	{r4, r7, lr}
 1244              		.cfi_def_cfa_offset 12
 1245              		.cfi_offset 4, -12
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0002 87B0     		sub	sp, sp, #28
 1249              		.cfi_def_cfa_offset 40
 1250 0004 00AF     		add	r7, sp, #0
 1251              		.cfi_def_cfa_register 7
 1252 0006 7860     		str	r0, [r7, #4]
 1253 0008 3960     		str	r1, [r7]
 572:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  auto& __alloc = _M_get_Node_allocator();
 1254              		.loc 4 572 0
 1255 000a 7B68     		ldr	r3, [r7, #4]
 1256 000c 1846     		mov	r0, r3
 1257 000e FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_get_nodeEv
 1258 0012 7861     		str	r0, [r7, #20]
 573:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  __allocated_ptr<_Node_alloc_type> __guard{__alloc, __p};
 1259              		.loc 4 573 0
 1260 0014 7B68     		ldr	r3, [r7, #4]
 1261 0016 1846     		mov	r0, r3
 1262 0018 FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv
 1263 001c 3861     		str	r0, [r7, #16]
 574:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _Node_alloc_traits::construct(__alloc, __p->_M_valptr(),
 1264              		.loc 4 574 0
 1265 001e 07F10803 		add	r3, r7, #8
 1266 0022 7A69     		ldr	r2, [r7, #20]
 1267 0024 3969     		ldr	r1, [r7, #16]
 1268 0026 1846     		mov	r0, r3
 1269 0028 FFF7FEFF 		bl	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC1ERS4_PS3_
 575:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 					std::forward<_Args>(__args)...);
 1270              		.loc 4 575 0
 1271 002c 7869     		ldr	r0, [r7, #20]
 1272 002e FFF7FEFF 		bl	_ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv
 1273 0032 0446     		mov	r4, r0
 1274 0034 3868     		ldr	r0, [r7]
 1275 0036 FFF7FEFF 		bl	_ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE
 1276 003a 0346     		mov	r3, r0
 1277 003c 1A46     		mov	r2, r3
 1278 003e 2146     		mov	r1, r4
 1279 0040 3869     		ldr	r0, [r7, #16]
 1280 0042 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_
 577:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  return __p;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 68


 1281              		.loc 4 577 0
 1282 0046 07F10803 		add	r3, r7, #8
 1283 004a 0021     		movs	r1, #0
 1284 004c 1846     		mov	r0, r3
 1285 004e FFF7FEFF 		bl	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEaSEDn
 578:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
 1286              		.loc 4 578 0
 1287 0052 7C69     		ldr	r4, [r7, #20]
 574:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	  _Node_alloc_traits::construct(__alloc, __p->_M_valptr(),
 1288              		.loc 4 574 0
 1289 0054 07F10803 		add	r3, r7, #8
 1290 0058 1846     		mov	r0, r3
 1291 005a FFF7FEFF 		bl	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED1Ev
 578:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 	}
 1292              		.loc 4 578 0
 1293 005e 2346     		mov	r3, r4
 579:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 1294              		.loc 4 579 0
 1295 0060 1846     		mov	r0, r3
 1296 0062 1C37     		adds	r7, r7, #28
 1297              		.cfi_def_cfa_offset 12
 1298 0064 BD46     		mov	sp, r7
 1299              		.cfi_def_cfa_register 13
 1300              		@ sp needed
 1301 0066 90BD     		pop	{r4, r7, pc}
 1302              		.cfi_endproc
 1303              	.LFE1841:
 1305              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_inc_sizeEj,"axG",%progbits,_ZNSt7__
 1306              		.align	1
 1307              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_inc_sizeEj
 1308              		.syntax unified
 1309              		.thumb
 1310              		.thumb_func
 1311              		.fpu softvfp
 1313              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_inc_sizeEj:
 1314              	.LFB1842:
 354:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1315              		.loc 4 354 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 8
 1318              		@ frame_needed = 1, uses_anonymous_args = 0
 1319 0000 80B5     		push	{r7, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 7, -8
 1322              		.cfi_offset 14, -4
 1323 0002 82B0     		sub	sp, sp, #8
 1324              		.cfi_def_cfa_offset 16
 1325 0004 00AF     		add	r7, sp, #0
 1326              		.cfi_def_cfa_register 7
 1327 0006 7860     		str	r0, [r7, #4]
 1328 0008 3960     		str	r1, [r7]
 354:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1329              		.loc 4 354 0
 1330 000a 7B68     		ldr	r3, [r7, #4]
 1331 000c 1846     		mov	r0, r3
 1332 000e FFF7FEFF 		bl	_ZNSt10_List_nodeIjE9_M_valptrEv
 1333 0012 0346     		mov	r3, r0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 69


 1334 0014 1968     		ldr	r1, [r3]
 1335 0016 3A68     		ldr	r2, [r7]
 1336 0018 0A44     		add	r2, r2, r1
 1337 001a 1A60     		str	r2, [r3]
 1338 001c 00BF     		nop
 1339 001e 0837     		adds	r7, r7, #8
 1340              		.cfi_def_cfa_offset 8
 1341 0020 BD46     		mov	sp, r7
 1342              		.cfi_def_cfa_register 13
 1343              		@ sp needed
 1344 0022 80BD     		pop	{r7, pc}
 1345              		.cfi_endproc
 1346              	.LFE1842:
 1348              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_dec_sizeEj,"axG",%progbits,_ZNSt7__
 1349              		.align	1
 1350              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_dec_sizeEj
 1351              		.syntax unified
 1352              		.thumb
 1353              		.thumb_func
 1354              		.fpu softvfp
 1356              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_dec_sizeEj:
 1357              	.LFB1843:
 356:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1358              		.loc 4 356 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 8
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362 0000 80B5     		push	{r7, lr}
 1363              		.cfi_def_cfa_offset 8
 1364              		.cfi_offset 7, -8
 1365              		.cfi_offset 14, -4
 1366 0002 82B0     		sub	sp, sp, #8
 1367              		.cfi_def_cfa_offset 16
 1368 0004 00AF     		add	r7, sp, #0
 1369              		.cfi_def_cfa_register 7
 1370 0006 7860     		str	r0, [r7, #4]
 1371 0008 3960     		str	r1, [r7]
 356:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1372              		.loc 4 356 0
 1373 000a 7B68     		ldr	r3, [r7, #4]
 1374 000c 1846     		mov	r0, r3
 1375 000e FFF7FEFF 		bl	_ZNSt10_List_nodeIjE9_M_valptrEv
 1376 0012 0346     		mov	r3, r0
 1377 0014 1968     		ldr	r1, [r3]
 1378 0016 3A68     		ldr	r2, [r7]
 1379 0018 8A1A     		subs	r2, r1, r2
 1380 001a 1A60     		str	r2, [r3]
 1381 001c 00BF     		nop
 1382 001e 0837     		adds	r7, r7, #8
 1383              		.cfi_def_cfa_offset 8
 1384 0020 BD46     		mov	sp, r7
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 0022 80BD     		pop	{r7, pc}
 1388              		.cfi_endproc
 1389              	.LFE1843:
 1391              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv,"axG",%progbit
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 70


 1392              		.align	1
 1393              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv
 1394              		.syntax unified
 1395              		.thumb
 1396              		.thumb_func
 1397              		.fpu softvfp
 1399              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv:
 1400              	.LFB1844:
 393:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _M_impl; }
 1401              		.loc 4 393 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 8
 1404              		@ frame_needed = 1, uses_anonymous_args = 0
 1405              		@ link register save eliminated.
 1406 0000 80B4     		push	{r7}
 1407              		.cfi_def_cfa_offset 4
 1408              		.cfi_offset 7, -4
 1409 0002 83B0     		sub	sp, sp, #12
 1410              		.cfi_def_cfa_offset 16
 1411 0004 00AF     		add	r7, sp, #0
 1412              		.cfi_def_cfa_register 7
 1413 0006 7860     		str	r0, [r7, #4]
 394:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1414              		.loc 4 394 0
 1415 0008 7B68     		ldr	r3, [r7, #4]
 1416 000a 1846     		mov	r0, r3
 1417 000c 0C37     		adds	r7, r7, #12
 1418              		.cfi_def_cfa_offset 4
 1419 000e BD46     		mov	sp, r7
 1420              		.cfi_def_cfa_register 13
 1421              		@ sp needed
 1422 0010 80BC     		pop	{r7}
 1423              		.cfi_restore 7
 1424              		.cfi_def_cfa_offset 0
 1425 0012 7047     		bx	lr
 1426              		.cfi_endproc
 1427              	.LFE1844:
 1429              		.section	.text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_,"axG",
 1430              		.align	1
 1431              		.weak	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu softvfp
 1437              	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_:
 1438              	.LFB1845:
 1439              		.file 8 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\\
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 71


  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****  */
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** #include <bits/ptr_traits.h>
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** #include <ext/numeric_traits.h>
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** {
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   {
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   protected:
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 72


  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   };
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   /**
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   */
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  83:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     {
  85:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator type
  86:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  87:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocated type
  88:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  90:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
  91:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
  93:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
  95:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
  97:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     private:
  98:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	struct _Ptr
 101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{
 102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	};
 104:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 105:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{
 108:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	};
 110:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	struct _Diff
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 120:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 124:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 73


 125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 128:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     public:
 129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 132:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 137:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 138:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 140:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 143:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 145:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 146:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 148:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 151:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 153:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 154:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 155:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 156:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 159:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 161:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 162:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 163:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 164:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 167:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 169:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 170:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 172:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 174:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 175:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 178:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 179:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 181:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 74


 182:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 183:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 184:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 185:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 187:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 188:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 190:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 192:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 193:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 194:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 196:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 197:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 199:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 202:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using is_always_equal
 203:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 205:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 206:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 208:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 210:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     private:
 211:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 212:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static auto
 213:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 217:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 218:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static pointer
 219:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 222:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 224:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{
 225:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 226:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 229:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 230:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  template<typename>
 231:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 232:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 233:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	};
 235:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 236:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	using __has_construct
 238:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 75


 239:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 240:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 244:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 245:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 246:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static
 247:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 248:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 249:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 250:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 251:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 252:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 253:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static auto
 254:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 255:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 256:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 257:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 258:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 259:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static void
 260:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 261:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ __p->~_Tp(); }
 262:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 263:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 264:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static auto
 265:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 266:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 267:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 268:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 269:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 270:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static size_type
 271:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 272:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{
 273:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 274:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 275:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 276:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 277:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	}
 278:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 279:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 280:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static auto
 281:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 282:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 283:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 284:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 285:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 286:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static _Alloc2
 287:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 288:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ return __a; }
 289:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 290:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     public:
 291:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 292:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 293:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 294:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 295:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 76


 296:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 297:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 298:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 299:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static pointer
 300:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 301:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 302:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 303:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 304:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 305:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 306:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 307:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 308:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 309:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 310:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 311:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 312:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 313:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 314:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static pointer
 315:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 316:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 317:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 318:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 319:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 320:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 321:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 322:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 323:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 324:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 325:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 326:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static void
 327:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 328:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 329:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 330:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 331:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 332:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 333:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 334:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 335:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 336:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 337:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 338:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 339:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 340:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 341:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 342:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 343:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 344:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 345:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 346:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 347:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 348:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 349:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 350:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 351:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 352:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 77


 353:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 354:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 355:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 356:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 357:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 358:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 359:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 360:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 361:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 362:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 363:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 364:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 365:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 366:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 367:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 368:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 369:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 370:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 371:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 372:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 373:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 374:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 375:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 376:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 377:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static _Alloc
 378:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 379:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 380:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     };
 381:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 382:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 383:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 384:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 385:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****     {
 386:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator type
 387:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 388:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocated type
 389:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 390:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 391:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 392:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 393:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 394:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 395:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 396:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 397:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 398:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 399:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 400:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 401:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 402:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 403:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 404:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 405:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 406:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 407:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 408:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 409:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 78


 410:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 411:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 412:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 413:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 414:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 415:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 416:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 417:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 418:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 419:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 420:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 421:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Up>
 422:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 423:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 424:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Up>
 425:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 426:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 427:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 428:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 429:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 430:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 431:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 432:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 433:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 434:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static pointer
 435:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 436:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 437:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 438:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 439:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 440:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 441:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 442:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 443:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 444:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 445:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 446:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 447:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 448:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static pointer
 449:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 450:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 451:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 452:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 453:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 454:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 455:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 456:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 457:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 458:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 459:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 460:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       static void
 461:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 462:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 463:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 464:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 465:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Up
 466:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 79


 467:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 468:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 469:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 470:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 471:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 472:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 473:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static void
 474:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 475:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 476:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 477:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       /**
 478:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 479:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 480:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 481:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *
 482:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 483:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       */
 484:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       template<typename _Up>
 485:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	static void
 486:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a, _Up* __p)
 1440              		.loc 8 486 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 8
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444 0000 80B5     		push	{r7, lr}
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 7, -8
 1447              		.cfi_offset 14, -4
 1448 0002 82B0     		sub	sp, sp, #8
 1449              		.cfi_def_cfa_offset 16
 1450 0004 00AF     		add	r7, sp, #0
 1451              		.cfi_def_cfa_register 7
 1452 0006 7860     		str	r0, [r7, #4]
 1453 0008 3960     		str	r1, [r7]
 487:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 1454              		.loc 8 487 0
 1455 000a 3968     		ldr	r1, [r7]
 1456 000c 7868     		ldr	r0, [r7, #4]
 1457 000e FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE7destroyIS3_EEvPT_
 1458 0012 00BF     		nop
 1459 0014 0837     		adds	r7, r7, #8
 1460              		.cfi_def_cfa_offset 8
 1461 0016 BD46     		mov	sp, r7
 1462              		.cfi_def_cfa_register 13
 1463              		@ sp needed
 1464 0018 80BD     		pop	{r7, pc}
 1465              		.cfi_endproc
 1466              	.LFE1845:
 1468              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E,"axG"
 1469              		.align	1
 1470              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1474              		.fpu softvfp
 1476              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E:
 1477              	.LFB1846:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 80


 386:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { _Node_alloc_traits::deallocate(_M_impl, __p, 1); }
 1478              		.loc 4 386 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 8
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482 0000 80B5     		push	{r7, lr}
 1483              		.cfi_def_cfa_offset 8
 1484              		.cfi_offset 7, -8
 1485              		.cfi_offset 14, -4
 1486 0002 82B0     		sub	sp, sp, #8
 1487              		.cfi_def_cfa_offset 16
 1488 0004 00AF     		add	r7, sp, #0
 1489              		.cfi_def_cfa_register 7
 1490 0006 7860     		str	r0, [r7, #4]
 1491 0008 3960     		str	r1, [r7]
 387:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1492              		.loc 4 387 0
 1493 000a 7B68     		ldr	r3, [r7, #4]
 1494 000c 0122     		movs	r2, #1
 1495 000e 3968     		ldr	r1, [r7]
 1496 0010 1846     		mov	r0, r3
 1497 0012 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j
 1498 0016 00BF     		nop
 1499 0018 0837     		adds	r7, r7, #8
 1500              		.cfi_def_cfa_offset 8
 1501 001a BD46     		mov	sp, r7
 1502              		.cfi_def_cfa_register 13
 1503              		@ sp needed
 1504 001c 80BD     		pop	{r7, pc}
 1505              		.cfi_endproc
 1506              	.LFE1846:
 1508              		.section	.text._ZNKSt10_List_nodeIjE9_M_valptrEv,"axG",%progbits,_ZNKSt10_List_nodeIjE9_M_valptrEv
 1509              		.align	1
 1510              		.weak	_ZNKSt10_List_nodeIjE9_M_valptrEv
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu softvfp
 1516              	_ZNKSt10_List_nodeIjE9_M_valptrEv:
 1517              	.LFB1847:
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 1518              		.loc 4 114 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 8
 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522 0000 80B5     		push	{r7, lr}
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 82B0     		sub	sp, sp, #8
 1527              		.cfi_def_cfa_offset 16
 1528 0004 00AF     		add	r7, sp, #0
 1529              		.cfi_def_cfa_register 7
 1530 0006 7860     		str	r0, [r7, #4]
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #else
 1531              		.loc 4 114 0
 1532 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 81


 1533 000a 0833     		adds	r3, r3, #8
 1534 000c 1846     		mov	r0, r3
 1535 000e FFF7FEFF 		bl	_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv
 1536 0012 0346     		mov	r3, r0
 1537 0014 1846     		mov	r0, r3
 1538 0016 0837     		adds	r7, r7, #8
 1539              		.cfi_def_cfa_offset 8
 1540 0018 BD46     		mov	sp, r7
 1541              		.cfi_def_cfa_register 13
 1542              		@ sp needed
 1543 001a 80BD     		pop	{r7, pc}
 1544              		.cfi_endproc
 1545              	.LFE1847:
 1547              		.section	.text._ZN9__gnu_cxx16__aligned_membufIP7IUpdateE6_M_ptrEv,"axG",%progbits,_ZN9__gnu_cxx16
 1548              		.align	1
 1549              		.weak	_ZN9__gnu_cxx16__aligned_membufIP7IUpdateE6_M_ptrEv
 1550              		.syntax unified
 1551              		.thumb
 1552              		.thumb_func
 1553              		.fpu softvfp
 1555              	_ZN9__gnu_cxx16__aligned_membufIP7IUpdateE6_M_ptrEv:
 1556              	.LFB1848:
 1557              		.file 9 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\ext\\a
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // Copyright (C) 2013-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****  */
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** #pragma GCC system_header
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 82


  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** # include <type_traits>
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** #else
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** #endif
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** namespace __gnu_cxx
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** {
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****   // complete objects.
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****   template<typename _Tp>
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****     struct __aligned_membuf
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****     {
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       __aligned_membuf() = default;
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       void*
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       _M_addr() noexcept
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       const void*
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       _M_addr() const noexcept
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       _Tp*
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       _M_ptr() noexcept
 1558              		.loc 9 70 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 8
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 80B5     		push	{r7, lr}
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 7, -8
 1565              		.cfi_offset 14, -4
 1566 0002 82B0     		sub	sp, sp, #8
 1567              		.cfi_def_cfa_offset 16
 1568 0004 00AF     		add	r7, sp, #0
 1569              		.cfi_def_cfa_register 7
 1570 0006 7860     		str	r0, [r7, #4]
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<_Tp*>(_M_addr()); }
 1571              		.loc 9 71 0
 1572 0008 7868     		ldr	r0, [r7, #4]
 1573 000a FFF7FEFF 		bl	_ZN9__gnu_cxx16__aligned_membufIP7IUpdateE7_M_addrEv
 1574 000e 0346     		mov	r3, r0
 1575 0010 1846     		mov	r0, r3
 1576 0012 0837     		adds	r7, r7, #8
 1577              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 83


 1578 0014 BD46     		mov	sp, r7
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 0016 80BD     		pop	{r7, pc}
 1582              		.cfi_endproc
 1583              	.LFE1848:
 1585              		.section	.text._ZNSaISt10_List_nodeIP7IUpdateEEC2Ev,"axG",%progbits,_ZNSaISt10_List_nodeIP7IUpdate
 1586              		.align	1
 1587              		.weak	_ZNSaISt10_List_nodeIP7IUpdateEEC2Ev
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu softvfp
 1593              	_ZNSaISt10_List_nodeIP7IUpdateEEC2Ev:
 1594              	.LFB1880:
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 1595              		.loc 6 131 0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 8
 1598              		@ frame_needed = 1, uses_anonymous_args = 0
 1599 0000 80B5     		push	{r7, lr}
 1600              		.cfi_def_cfa_offset 8
 1601              		.cfi_offset 7, -8
 1602              		.cfi_offset 14, -4
 1603 0002 82B0     		sub	sp, sp, #8
 1604              		.cfi_def_cfa_offset 16
 1605 0004 00AF     		add	r7, sp, #0
 1606              		.cfi_def_cfa_register 7
 1607 0006 7860     		str	r0, [r7, #4]
 1608              	.LBB11:
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocator.h **** 
 1609              		.loc 6 131 0
 1610 0008 7868     		ldr	r0, [r7, #4]
 1611 000a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev
 1612              	.LBE11:
 1613 000e 7B68     		ldr	r3, [r7, #4]
 1614 0010 1846     		mov	r0, r3
 1615 0012 0837     		adds	r7, r7, #8
 1616              		.cfi_def_cfa_offset 8
 1617 0014 BD46     		mov	sp, r7
 1618              		.cfi_def_cfa_register 13
 1619              		@ sp needed
 1620 0016 80BD     		pop	{r7, pc}
 1621              		.cfi_endproc
 1622              	.LFE1880:
 1624              		.weak	_ZNSaISt10_List_nodeIP7IUpdateEEC1Ev
 1625              		.thumb_set _ZNSaISt10_List_nodeIP7IUpdateEEC1Ev,_ZNSaISt10_List_nodeIP7IUpdateEEC2Ev
 1626              		.section	.text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev,"axG",%progbits,_ZN9__g
 1627              		.align	1
 1628              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1632              		.fpu softvfp
 1634              	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev:
 1635              	.LFB1883:
 1636              		.file 10 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\ext\\
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 84


   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****  */
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #include <new>
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #endif
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** {
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****   using std::size_t;
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****   using std::ptrdiff_t;
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****   /**
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****    */
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****   template<typename _Tp>
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 85


  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****     class new_allocator
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****     {
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****     public:
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef size_t     size_type;
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	struct rebind
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #endif
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  83:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  84:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  86:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 1637              		.loc 10 86 0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 8
 1640              		@ frame_needed = 1, uses_anonymous_args = 0
 1641              		@ link register save eliminated.
 1642 0000 80B4     		push	{r7}
 1643              		.cfi_def_cfa_offset 4
 1644              		.cfi_offset 7, -4
 1645 0002 83B0     		sub	sp, sp, #12
 1646              		.cfi_def_cfa_offset 16
 1647 0004 00AF     		add	r7, sp, #0
 1648              		.cfi_def_cfa_register 7
 1649 0006 7860     		str	r0, [r7, #4]
 1650              		.loc 10 86 0
 1651 0008 7B68     		ldr	r3, [r7, #4]
 1652 000a 1846     		mov	r0, r3
 1653 000c 0C37     		adds	r7, r7, #12
 1654              		.cfi_def_cfa_offset 4
 1655 000e BD46     		mov	sp, r7
 1656              		.cfi_def_cfa_register 13
 1657              		@ sp needed
 1658 0010 80BC     		pop	{r7}
 1659              		.cfi_restore 7
 1660              		.cfi_def_cfa_offset 0
 1661 0012 7047     		bx	lr
 1662              		.cfi_endproc
 1663              	.LFE1883:
 1665              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED1Ev
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 86


 1666              		.thumb_set _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED1Ev,_ZN9__gnu_cxx13new_allocato
 1667              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_set_sizeEj,"axG",%progbits,_ZNSt7__
 1668              		.align	1
 1669              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_set_sizeEj
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1673              		.fpu softvfp
 1675              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_set_sizeEj:
 1676              	.LFB1885:
 352:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1677              		.loc 4 352 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 8
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681 0000 80B5     		push	{r7, lr}
 1682              		.cfi_def_cfa_offset 8
 1683              		.cfi_offset 7, -8
 1684              		.cfi_offset 14, -4
 1685 0002 82B0     		sub	sp, sp, #8
 1686              		.cfi_def_cfa_offset 16
 1687 0004 00AF     		add	r7, sp, #0
 1688              		.cfi_def_cfa_register 7
 1689 0006 7860     		str	r0, [r7, #4]
 1690 0008 3960     		str	r1, [r7]
 352:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1691              		.loc 4 352 0
 1692 000a 7B68     		ldr	r3, [r7, #4]
 1693 000c 1846     		mov	r0, r3
 1694 000e FFF7FEFF 		bl	_ZNSt10_List_nodeIjE9_M_valptrEv
 1695 0012 0246     		mov	r2, r0
 1696 0014 3B68     		ldr	r3, [r7]
 1697 0016 1360     		str	r3, [r2]
 1698 0018 00BF     		nop
 1699 001a 0837     		adds	r7, r7, #8
 1700              		.cfi_def_cfa_offset 8
 1701 001c BD46     		mov	sp, r7
 1702              		.cfi_def_cfa_register 13
 1703              		@ sp needed
 1704 001e 80BD     		pop	{r7, pc}
 1705              		.cfi_endproc
 1706              	.LFE1885:
 1708              		.section	.text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_get_nodeEv,"axG",%progbits,_ZNSt7__
 1709              		.align	1
 1710              		.weak	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_get_nodeEv
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1714              		.fpu softvfp
 1716              	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_get_nodeEv:
 1717              	.LFB1886:
 382:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       { return _Node_alloc_traits::allocate(_M_impl, 1); }
 1718              		.loc 4 382 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 8
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 87


 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 82B0     		sub	sp, sp, #8
 1727              		.cfi_def_cfa_offset 16
 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 1730 0006 7860     		str	r0, [r7, #4]
 383:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** 
 1731              		.loc 4 383 0
 1732 0008 7B68     		ldr	r3, [r7, #4]
 1733 000a 0121     		movs	r1, #1
 1734 000c 1846     		mov	r0, r3
 1735 000e FFF7FEFF 		bl	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE8allocateERS4_j
 1736 0012 0346     		mov	r3, r0
 1737 0014 1846     		mov	r0, r3
 1738 0016 0837     		adds	r7, r7, #8
 1739              		.cfi_def_cfa_offset 8
 1740 0018 BD46     		mov	sp, r7
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 001a 80BD     		pop	{r7, pc}
 1744              		.cfi_endproc
 1745              	.LFE1886:
 1747              		.section	.text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC2ERS4_PS3_,"axG",%progbits,_Z
 1748              		.align	1
 1749              		.weak	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC2ERS4_PS3_
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1753              		.fpu softvfp
 1755              	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC2ERS4_PS3_:
 1756              	.LFB1888:
 1757              		.file 11 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\
   1:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // Guarded Allocation -*- C++ -*-
   2:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
   3:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // Copyright (C) 2014-2017 Free Software Foundation, Inc.
   4:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** //
   5:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // software; you can redistribute it and/or modify it under the
   7:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // terms of the GNU General Public License as published by the
   8:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // any later version.
  10:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  11:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // This library is distributed in the hope that it will be useful,
  12:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // GNU General Public License for more details.
  15:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  16:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  20:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // You should have received a copy of the GNU General Public License and
  21:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 88


  24:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  25:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** /** @file bits/allocated_ptr.h
  26:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****  *  This is an internal header file, included by other library headers.
  27:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****  */
  29:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  30:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** #ifndef _ALLOCATED_PTR_H
  31:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** #define _ALLOCATED_PTR_H 1
  32:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  33:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** #if __cplusplus < 201103L
  34:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** # include <bits/c++0xwarning.h>
  35:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** #else
  36:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** # include <type_traits>
  37:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** # include <bits/ptr_traits.h>
  38:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** # include <bits/alloc_traits.h>
  39:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  40:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** namespace std _GLIBCXX_VISIBILITY(default)
  41:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** {
  42:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  44:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****   /// Non-standard RAII type for managing pointers obtained from allocators.
  45:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****   template<typename _Alloc>
  46:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****     struct __allocated_ptr
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****     {
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       using pointer = typename allocator_traits<_Alloc>::pointer;
  49:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       using value_type = typename allocator_traits<_Alloc>::value_type;
  50:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  51:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       /// Take ownership of __ptr
  52:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       __allocated_ptr(_Alloc& __a, pointer __ptr) noexcept
 1758              		.loc 11 52 0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 16
 1761              		@ frame_needed = 1, uses_anonymous_args = 0
 1762 0000 80B5     		push	{r7, lr}
 1763              		.cfi_def_cfa_offset 8
 1764              		.cfi_offset 7, -8
 1765              		.cfi_offset 14, -4
 1766 0002 84B0     		sub	sp, sp, #16
 1767              		.cfi_def_cfa_offset 24
 1768 0004 00AF     		add	r7, sp, #0
 1769              		.cfi_def_cfa_register 7
 1770 0006 F860     		str	r0, [r7, #12]
 1771 0008 B960     		str	r1, [r7, #8]
 1772 000a 7A60     		str	r2, [r7, #4]
 1773              	.LBB12:
  53:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       : _M_alloc(std::__addressof(__a)), _M_ptr(__ptr)
 1774              		.loc 11 53 0
 1775 000c B868     		ldr	r0, [r7, #8]
 1776 000e FFF7FEFF 		bl	_ZSt11__addressofISaISt10_List_nodeIP7IUpdateEEEPT_RS5_
 1777 0012 0246     		mov	r2, r0
 1778 0014 FB68     		ldr	r3, [r7, #12]
 1779 0016 1A60     		str	r2, [r3]
 1780 0018 FB68     		ldr	r3, [r7, #12]
 1781 001a 7A68     		ldr	r2, [r7, #4]
 1782 001c 5A60     		str	r2, [r3, #4]
 1783              	.LBE12:
  54:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       { }
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 89


 1784              		.loc 11 54 0
 1785 001e FB68     		ldr	r3, [r7, #12]
 1786 0020 1846     		mov	r0, r3
 1787 0022 1037     		adds	r7, r7, #16
 1788              		.cfi_def_cfa_offset 8
 1789 0024 BD46     		mov	sp, r7
 1790              		.cfi_def_cfa_register 13
 1791              		@ sp needed
 1792 0026 80BD     		pop	{r7, pc}
 1793              		.cfi_endproc
 1794              	.LFE1888:
 1796              		.weak	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC1ERS4_PS3_
 1797              		.thumb_set _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC1ERS4_PS3_,_ZNSt15__allocated_ptr
 1798              		.section	.text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED2Ev,"axG",%progbits,_ZNSt15__
 1799              		.align	1
 1800              		.weak	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED2Ev
 1801              		.syntax unified
 1802              		.thumb
 1803              		.thumb_func
 1804              		.fpu softvfp
 1806              	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED2Ev:
 1807              	.LFB1891:
  55:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  56:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       /// Convert __ptr to allocator's pointer type and take ownership of it
  57:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       template<typename _Ptr,
  58:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 	       typename _Req = _Require<is_same<_Ptr, value_type*>>>
  59:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       __allocated_ptr(_Alloc& __a, _Ptr __ptr)
  60:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       : _M_alloc(std::__addressof(__a)),
  61:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 	_M_ptr(pointer_traits<pointer>::pointer_to(*__ptr))
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       { }
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  64:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       /// Transfer ownership of the owned pointer
  65:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       __allocated_ptr(__allocated_ptr&& __gd) noexcept
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       : _M_alloc(__gd._M_alloc), _M_ptr(__gd._M_ptr)
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       { __gd._M_ptr = nullptr; }
  68:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  69:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       /// Deallocate the owned pointer
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       ~__allocated_ptr()
 1808              		.loc 11 70 0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 8
 1811              		@ frame_needed = 1, uses_anonymous_args = 0
 1812 0000 80B5     		push	{r7, lr}
 1813              		.cfi_def_cfa_offset 8
 1814              		.cfi_offset 7, -8
 1815              		.cfi_offset 14, -4
 1816 0002 82B0     		sub	sp, sp, #8
 1817              		.cfi_def_cfa_offset 16
 1818 0004 00AF     		add	r7, sp, #0
 1819              		.cfi_def_cfa_register 7
 1820 0006 7860     		str	r0, [r7, #4]
 1821              	.LBB13:
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       {
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 	if (_M_ptr != nullptr)
 1822              		.loc 11 72 0
 1823 0008 7B68     		ldr	r3, [r7, #4]
 1824 000a 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 90


 1825 000c 002B     		cmp	r3, #0
 1826 000e 07D0     		beq	.L80
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 	  std::allocator_traits<_Alloc>::deallocate(*_M_alloc, _M_ptr, 1);
 1827              		.loc 11 73 0
 1828 0010 7B68     		ldr	r3, [r7, #4]
 1829 0012 1868     		ldr	r0, [r3]
 1830 0014 7B68     		ldr	r3, [r7, #4]
 1831 0016 5B68     		ldr	r3, [r3, #4]
 1832 0018 0122     		movs	r2, #1
 1833 001a 1946     		mov	r1, r3
 1834 001c FFF7FEFF 		bl	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j
 1835              	.L80:
 1836              	.LBE13:
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       }
 1837              		.loc 11 74 0
 1838 0020 7B68     		ldr	r3, [r7, #4]
 1839 0022 1846     		mov	r0, r3
 1840 0024 0837     		adds	r7, r7, #8
 1841              		.cfi_def_cfa_offset 8
 1842 0026 BD46     		mov	sp, r7
 1843              		.cfi_def_cfa_register 13
 1844              		@ sp needed
 1845 0028 80BD     		pop	{r7, pc}
 1846              		.cfi_endproc
 1847              	.LFE1891:
 1849              		.weak	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED1Ev
 1850              		.thumb_set _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED1Ev,_ZNSt15__allocated_ptrISaISt1
 1851              		.section	.text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE9constructIS2_JRKS2_EEEvRS4_P
 1852              		.align	1
 1853              		.weak	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_
 1854              		.syntax unified
 1855              		.thumb
 1856              		.thumb_func
 1857              		.fpu softvfp
 1859              	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_:
 1860              	.LFB1893:
 474:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 1861              		.loc 8 474 0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 16
 1864              		@ frame_needed = 1, uses_anonymous_args = 0
 1865 0000 80B5     		push	{r7, lr}
 1866              		.cfi_def_cfa_offset 8
 1867              		.cfi_offset 7, -8
 1868              		.cfi_offset 14, -4
 1869 0002 84B0     		sub	sp, sp, #16
 1870              		.cfi_def_cfa_offset 24
 1871 0004 00AF     		add	r7, sp, #0
 1872              		.cfi_def_cfa_register 7
 1873 0006 F860     		str	r0, [r7, #12]
 1874 0008 B960     		str	r1, [r7, #8]
 1875 000a 7A60     		str	r2, [r7, #4]
 475:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 1876              		.loc 8 475 0
 1877 000c 7868     		ldr	r0, [r7, #4]
 1878 000e FFF7FEFF 		bl	_ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE
 1879 0012 0346     		mov	r3, r0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 91


 1880 0014 1A46     		mov	r2, r3
 1881 0016 B968     		ldr	r1, [r7, #8]
 1882 0018 F868     		ldr	r0, [r7, #12]
 1883 001a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE9constructIS3_JRKS3_EEEvPT_DpOT0_
 1884 001e 00BF     		nop
 1885 0020 1037     		adds	r7, r7, #16
 1886              		.cfi_def_cfa_offset 8
 1887 0022 BD46     		mov	sp, r7
 1888              		.cfi_def_cfa_register 13
 1889              		@ sp needed
 1890 0024 80BD     		pop	{r7, pc}
 1891              		.cfi_endproc
 1892              	.LFE1893:
 1894              		.section	.text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEaSEDn,"axG",%progbits,_ZNSt15_
 1895              		.align	1
 1896              		.weak	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEaSEDn
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu softvfp
 1902              	_ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEaSEDn:
 1903              	.LFB1894:
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 
  76:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       /// Release ownership of the owned pointer
  77:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       __allocated_ptr&
  78:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       operator=(std::nullptr_t) noexcept
 1904              		.loc 11 78 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 8
 1907              		@ frame_needed = 1, uses_anonymous_args = 0
 1908              		@ link register save eliminated.
 1909 0000 80B4     		push	{r7}
 1910              		.cfi_def_cfa_offset 4
 1911              		.cfi_offset 7, -4
 1912 0002 83B0     		sub	sp, sp, #12
 1913              		.cfi_def_cfa_offset 16
 1914 0004 00AF     		add	r7, sp, #0
 1915              		.cfi_def_cfa_register 7
 1916 0006 7860     		str	r0, [r7, #4]
 1917 0008 3960     		str	r1, [r7]
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       {
  80:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 	_M_ptr = nullptr;
 1918              		.loc 11 80 0
 1919 000a 7B68     		ldr	r3, [r7, #4]
 1920 000c 0022     		movs	r2, #0
 1921 000e 5A60     		str	r2, [r3, #4]
  81:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h **** 	return *this;
 1922              		.loc 11 81 0
 1923 0010 7B68     		ldr	r3, [r7, #4]
  82:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\allocated_ptr.h ****       }
 1924              		.loc 11 82 0
 1925 0012 1846     		mov	r0, r3
 1926 0014 0C37     		adds	r7, r7, #12
 1927              		.cfi_def_cfa_offset 4
 1928 0016 BD46     		mov	sp, r7
 1929              		.cfi_def_cfa_register 13
 1930              		@ sp needed
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 92


 1931 0018 80BC     		pop	{r7}
 1932              		.cfi_restore 7
 1933              		.cfi_def_cfa_offset 0
 1934 001a 7047     		bx	lr
 1935              		.cfi_endproc
 1936              	.LFE1894:
 1938              		.section	.text._ZNSt10_List_nodeIjE9_M_valptrEv,"axG",%progbits,_ZNSt10_List_nodeIjE9_M_valptrEv,c
 1939              		.align	1
 1940              		.weak	_ZNSt10_List_nodeIjE9_M_valptrEv
 1941              		.syntax unified
 1942              		.thumb
 1943              		.thumb_func
 1944              		.fpu softvfp
 1946              	_ZNSt10_List_nodeIjE9_M_valptrEv:
 1947              	.LFB1895:
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp const* _M_valptr() const { return _M_storage._M_ptr(); }
 1948              		.loc 4 113 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 8
 1951              		@ frame_needed = 1, uses_anonymous_args = 0
 1952 0000 80B5     		push	{r7, lr}
 1953              		.cfi_def_cfa_offset 8
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
 1956 0002 82B0     		sub	sp, sp, #8
 1957              		.cfi_def_cfa_offset 16
 1958 0004 00AF     		add	r7, sp, #0
 1959              		.cfi_def_cfa_register 7
 1960 0006 7860     		str	r0, [r7, #4]
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h ****       _Tp const* _M_valptr() const { return _M_storage._M_ptr(); }
 1961              		.loc 4 113 0
 1962 0008 7B68     		ldr	r3, [r7, #4]
 1963 000a 0833     		adds	r3, r3, #8
 1964 000c 1846     		mov	r0, r3
 1965 000e FFF7FEFF 		bl	_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv
 1966 0012 0346     		mov	r3, r0
 1967 0014 1846     		mov	r0, r3
 1968 0016 0837     		adds	r7, r7, #8
 1969              		.cfi_def_cfa_offset 8
 1970 0018 BD46     		mov	sp, r7
 1971              		.cfi_def_cfa_register 13
 1972              		@ sp needed
 1973 001a 80BD     		pop	{r7, pc}
 1974              		.cfi_endproc
 1975              	.LFE1895:
 1977              		.section	.text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE7destroyIS3_EEvPT_,"axG",%pr
 1978              		.align	1
 1979              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE7destroyIS3_EEvPT_
 1980              		.syntax unified
 1981              		.thumb
 1982              		.thumb_func
 1983              		.fpu softvfp
 1985              	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE7destroyIS3_EEvPT_:
 1986              	.LFB1896:
  87:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  88:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       pointer
  89:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 93


  90:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  91:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  92:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       const_pointer
  93:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  95:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
  96:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
  98:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       pointer
  99:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       {
 101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	if (__n > this->max_size())
 102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 103:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 104:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 105:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 106:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	  {
 107:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 108:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 109:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	  }
 110:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #endif
 111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       }
 113:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 114:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 115:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       void
 116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       deallocate(pointer __p, size_type)
 117:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       {
 118:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 119:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 120:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	  {
 121:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 122:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	    return;
 123:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	  }
 124:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #endif
 125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	::operator delete(__p);
 126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       }
 127:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 128:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       size_type
 129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 131:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 132:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 133:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 134:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	void
 135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 137:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 138:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       template<typename _Up>
 139:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	void
 140:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	destroy(_Up* __p) { __p->~_Up(); }
 1987              		.loc 10 140 0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 8
 1990              		@ frame_needed = 1, uses_anonymous_args = 0
 1991              		@ link register save eliminated.
 1992 0000 80B4     		push	{r7}
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 94


 1993              		.cfi_def_cfa_offset 4
 1994              		.cfi_offset 7, -4
 1995 0002 83B0     		sub	sp, sp, #12
 1996              		.cfi_def_cfa_offset 16
 1997 0004 00AF     		add	r7, sp, #0
 1998              		.cfi_def_cfa_register 7
 1999 0006 7860     		str	r0, [r7, #4]
 2000 0008 3960     		str	r1, [r7]
 2001              		.loc 10 140 0
 2002 000a 00BF     		nop
 2003 000c 0C37     		adds	r7, r7, #12
 2004              		.cfi_def_cfa_offset 4
 2005 000e BD46     		mov	sp, r7
 2006              		.cfi_def_cfa_register 13
 2007              		@ sp needed
 2008 0010 80BC     		pop	{r7}
 2009              		.cfi_restore 7
 2010              		.cfi_def_cfa_offset 0
 2011 0012 7047     		bx	lr
 2012              		.cfi_endproc
 2013              	.LFE1896:
 2015              		.section	.text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j,"axG",
 2016              		.align	1
 2017              		.weak	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j
 2018              		.syntax unified
 2019              		.thumb
 2020              		.thumb_func
 2021              		.fpu softvfp
 2023              	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j:
 2024              	.LFB1897:
 461:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2025              		.loc 8 461 0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 16
 2028              		@ frame_needed = 1, uses_anonymous_args = 0
 2029 0000 80B5     		push	{r7, lr}
 2030              		.cfi_def_cfa_offset 8
 2031              		.cfi_offset 7, -8
 2032              		.cfi_offset 14, -4
 2033 0002 84B0     		sub	sp, sp, #16
 2034              		.cfi_def_cfa_offset 24
 2035 0004 00AF     		add	r7, sp, #0
 2036              		.cfi_def_cfa_register 7
 2037 0006 F860     		str	r0, [r7, #12]
 2038 0008 B960     		str	r1, [r7, #8]
 2039 000a 7A60     		str	r2, [r7, #4]
 462:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 2040              		.loc 8 462 0
 2041 000c 7A68     		ldr	r2, [r7, #4]
 2042 000e B968     		ldr	r1, [r7, #8]
 2043 0010 F868     		ldr	r0, [r7, #12]
 2044 0012 FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE10deallocateEPS4_j
 2045 0016 00BF     		nop
 2046 0018 1037     		adds	r7, r7, #16
 2047              		.cfi_def_cfa_offset 8
 2048 001a BD46     		mov	sp, r7
 2049              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 95


 2050              		@ sp needed
 2051 001c 80BD     		pop	{r7, pc}
 2052              		.cfi_endproc
 2053              	.LFE1897:
 2055              		.section	.text._ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv,"axG",%progbits,_ZNK9__gnu_cxx16__alig
 2056              		.align	1
 2057              		.weak	_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv
 2058              		.syntax unified
 2059              		.thumb
 2060              		.thumb_func
 2061              		.fpu softvfp
 2063              	_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv:
 2064              	.LFB1898:
  72:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
  73:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       const _Tp*
  74:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       _M_ptr() const noexcept
 2065              		.loc 9 74 0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 8
 2068              		@ frame_needed = 1, uses_anonymous_args = 0
 2069 0000 80B5     		push	{r7, lr}
 2070              		.cfi_def_cfa_offset 8
 2071              		.cfi_offset 7, -8
 2072              		.cfi_offset 14, -4
 2073 0002 82B0     		sub	sp, sp, #8
 2074              		.cfi_def_cfa_offset 16
 2075 0004 00AF     		add	r7, sp, #0
 2076              		.cfi_def_cfa_register 7
 2077 0006 7860     		str	r0, [r7, #4]
  75:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<const _Tp*>(_M_addr()); }
 2078              		.loc 9 75 0
 2079 0008 7868     		ldr	r0, [r7, #4]
 2080 000a FFF7FEFF 		bl	_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv
 2081 000e 0346     		mov	r3, r0
 2082 0010 1846     		mov	r0, r3
 2083 0012 0837     		adds	r7, r7, #8
 2084              		.cfi_def_cfa_offset 8
 2085 0014 BD46     		mov	sp, r7
 2086              		.cfi_def_cfa_register 13
 2087              		@ sp needed
 2088 0016 80BD     		pop	{r7, pc}
 2089              		.cfi_endproc
 2090              	.LFE1898:
 2092              		.section	.text._ZN9__gnu_cxx16__aligned_membufIP7IUpdateE7_M_addrEv,"axG",%progbits,_ZN9__gnu_cxx1
 2093              		.align	1
 2094              		.weak	_ZN9__gnu_cxx16__aligned_membufIP7IUpdateE7_M_addrEv
 2095              		.syntax unified
 2096              		.thumb
 2097              		.thumb_func
 2098              		.fpu softvfp
 2100              	_ZN9__gnu_cxx16__aligned_membufIP7IUpdateE7_M_addrEv:
 2101              	.LFB1899:
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 2102              		.loc 9 62 0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 8
 2105              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 96


 2106              		@ link register save eliminated.
 2107 0000 80B4     		push	{r7}
 2108              		.cfi_def_cfa_offset 4
 2109              		.cfi_offset 7, -4
 2110 0002 83B0     		sub	sp, sp, #12
 2111              		.cfi_def_cfa_offset 16
 2112 0004 00AF     		add	r7, sp, #0
 2113              		.cfi_def_cfa_register 7
 2114 0006 7860     		str	r0, [r7, #4]
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
 2115              		.loc 9 63 0
 2116 0008 7B68     		ldr	r3, [r7, #4]
 2117 000a 1846     		mov	r0, r3
 2118 000c 0C37     		adds	r7, r7, #12
 2119              		.cfi_def_cfa_offset 4
 2120 000e BD46     		mov	sp, r7
 2121              		.cfi_def_cfa_register 13
 2122              		@ sp needed
 2123 0010 80BC     		pop	{r7}
 2124              		.cfi_restore 7
 2125              		.cfi_def_cfa_offset 0
 2126 0012 7047     		bx	lr
 2127              		.cfi_endproc
 2128              	.LFE1899:
 2130              		.section	.text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev,"axG",%progbits,_ZN9__g
 2131              		.align	1
 2132              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2136              		.fpu softvfp
 2138              	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev:
 2139              	.LFB1929:
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2140              		.loc 10 79 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 8
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144              		@ link register save eliminated.
 2145 0000 80B4     		push	{r7}
 2146              		.cfi_def_cfa_offset 4
 2147              		.cfi_offset 7, -4
 2148 0002 83B0     		sub	sp, sp, #12
 2149              		.cfi_def_cfa_offset 16
 2150 0004 00AF     		add	r7, sp, #0
 2151              		.cfi_def_cfa_register 7
 2152 0006 7860     		str	r0, [r7, #4]
  79:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2153              		.loc 10 79 0
 2154 0008 7B68     		ldr	r3, [r7, #4]
 2155 000a 1846     		mov	r0, r3
 2156 000c 0C37     		adds	r7, r7, #12
 2157              		.cfi_def_cfa_offset 4
 2158 000e BD46     		mov	sp, r7
 2159              		.cfi_def_cfa_register 13
 2160              		@ sp needed
 2161 0010 80BC     		pop	{r7}
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 97


 2162              		.cfi_restore 7
 2163              		.cfi_def_cfa_offset 0
 2164 0012 7047     		bx	lr
 2165              		.cfi_endproc
 2166              	.LFE1929:
 2168              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC1Ev
 2169              		.thumb_set _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC1Ev,_ZN9__gnu_cxx13new_allocato
 2170              		.section	.text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE8allocateERS4_j,"axG",%progbi
 2171              		.align	1
 2172              		.weak	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE8allocateERS4_j
 2173              		.syntax unified
 2174              		.thumb
 2175              		.thumb_func
 2176              		.fpu softvfp
 2178              	_ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE8allocateERS4_j:
 2179              	.LFB1931:
 435:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2180              		.loc 8 435 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 8
 2183              		@ frame_needed = 1, uses_anonymous_args = 0
 2184 0000 80B5     		push	{r7, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 7, -8
 2187              		.cfi_offset 14, -4
 2188 0002 82B0     		sub	sp, sp, #8
 2189              		.cfi_def_cfa_offset 16
 2190 0004 00AF     		add	r7, sp, #0
 2191              		.cfi_def_cfa_register 7
 2192 0006 7860     		str	r0, [r7, #4]
 2193 0008 3960     		str	r1, [r7]
 436:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\alloc_traits.h **** 
 2194              		.loc 8 436 0
 2195 000a 0022     		movs	r2, #0
 2196 000c 3968     		ldr	r1, [r7]
 2197 000e 7868     		ldr	r0, [r7, #4]
 2198 0010 FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8allocateEjPKv
 2199 0014 0346     		mov	r3, r0
 2200 0016 1846     		mov	r0, r3
 2201 0018 0837     		adds	r7, r7, #8
 2202              		.cfi_def_cfa_offset 8
 2203 001a BD46     		mov	sp, r7
 2204              		.cfi_def_cfa_register 13
 2205              		@ sp needed
 2206 001c 80BD     		pop	{r7, pc}
 2207              		.cfi_endproc
 2208              	.LFE1931:
 2210              		.section	.text._ZSt11__addressofISaISt10_List_nodeIP7IUpdateEEEPT_RS5_,"axG",%progbits,_ZSt11__add
 2211              		.align	1
 2212              		.weak	_ZSt11__addressofISaISt10_List_nodeIP7IUpdateEEEPT_RS5_
 2213              		.syntax unified
 2214              		.thumb
 2215              		.thumb_func
 2216              		.fpu softvfp
 2218              	_ZSt11__addressofISaISt10_List_nodeIP7IUpdateEEEPT_RS5_:
 2219              	.LFB1932:
  47:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 98


 2220              		.loc 5 47 0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 8
 2223              		@ frame_needed = 1, uses_anonymous_args = 0
 2224              		@ link register save eliminated.
 2225 0000 80B4     		push	{r7}
 2226              		.cfi_def_cfa_offset 4
 2227              		.cfi_offset 7, -4
 2228 0002 83B0     		sub	sp, sp, #12
 2229              		.cfi_def_cfa_offset 16
 2230 0004 00AF     		add	r7, sp, #0
 2231              		.cfi_def_cfa_register 7
 2232 0006 7860     		str	r0, [r7, #4]
  48:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\move.h **** 
 2233              		.loc 5 48 0
 2234 0008 7B68     		ldr	r3, [r7, #4]
 2235 000a 1846     		mov	r0, r3
 2236 000c 0C37     		adds	r7, r7, #12
 2237              		.cfi_def_cfa_offset 4
 2238 000e BD46     		mov	sp, r7
 2239              		.cfi_def_cfa_register 13
 2240              		@ sp needed
 2241 0010 80BC     		pop	{r7}
 2242              		.cfi_restore 7
 2243              		.cfi_def_cfa_offset 0
 2244 0012 7047     		bx	lr
 2245              		.cfi_endproc
 2246              	.LFE1932:
 2248              		.section	.text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE9constructIS3_JRKS3_EEEvPT_D
 2249              		.align	1
 2250              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE9constructIS3_JRKS3_EEEvPT_DpOT0_
 2251              		.syntax unified
 2252              		.thumb
 2253              		.thumb_func
 2254              		.fpu softvfp
 2256              	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
 2257              	.LFB1933:
 135:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 2258              		.loc 10 135 0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 16
 2261              		@ frame_needed = 1, uses_anonymous_args = 0
 2262 0000 90B5     		push	{r4, r7, lr}
 2263              		.cfi_def_cfa_offset 12
 2264              		.cfi_offset 4, -12
 2265              		.cfi_offset 7, -8
 2266              		.cfi_offset 14, -4
 2267 0002 85B0     		sub	sp, sp, #20
 2268              		.cfi_def_cfa_offset 32
 2269 0004 00AF     		add	r7, sp, #0
 2270              		.cfi_def_cfa_register 7
 2271 0006 F860     		str	r0, [r7, #12]
 2272 0008 B960     		str	r1, [r7, #8]
 2273 000a 7A60     		str	r2, [r7, #4]
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2274              		.loc 10 136 0
 2275 000c 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 99


 2276 000e FFF7FEFF 		bl	_ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE
 2277 0012 0346     		mov	r3, r0
 2278 0014 1C68     		ldr	r4, [r3]
 2279 0016 BB68     		ldr	r3, [r7, #8]
 2280 0018 1946     		mov	r1, r3
 2281 001a 0420     		movs	r0, #4
 2282 001c FFF7FEFF 		bl	_ZnwjPv
 2283 0020 0346     		mov	r3, r0
 2284 0022 002B     		cmp	r3, #0
 2285 0024 00D0     		beq	.L102
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2286              		.loc 10 136 0 is_stmt 0 discriminator 1
 2287 0026 1C60     		str	r4, [r3]
 2288              	.L102:
 136:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2289              		.loc 10 136 0
 2290 0028 00BF     		nop
 2291 002a 1437     		adds	r7, r7, #20
 2292              		.cfi_def_cfa_offset 12
 2293 002c BD46     		mov	sp, r7
 2294              		.cfi_def_cfa_register 13
 2295              		@ sp needed
 2296 002e 90BD     		pop	{r4, r7, pc}
 2297              		.cfi_endproc
 2298              	.LFE1933:
 2300              		.section	.text._ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv,"axG",%progbits,_ZN9__gnu_cxx16__aligne
 2301              		.align	1
 2302              		.weak	_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv
 2303              		.syntax unified
 2304              		.thumb
 2305              		.thumb_func
 2306              		.fpu softvfp
 2308              	_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv:
 2309              	.LFB1934:
  70:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<_Tp*>(_M_addr()); }
 2310              		.loc 9 70 0 is_stmt 1
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 8
 2313              		@ frame_needed = 1, uses_anonymous_args = 0
 2314 0000 80B5     		push	{r7, lr}
 2315              		.cfi_def_cfa_offset 8
 2316              		.cfi_offset 7, -8
 2317              		.cfi_offset 14, -4
 2318 0002 82B0     		sub	sp, sp, #8
 2319              		.cfi_def_cfa_offset 16
 2320 0004 00AF     		add	r7, sp, #0
 2321              		.cfi_def_cfa_register 7
 2322 0006 7860     		str	r0, [r7, #4]
  71:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
 2323              		.loc 9 71 0
 2324 0008 7868     		ldr	r0, [r7, #4]
 2325 000a FFF7FEFF 		bl	_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv
 2326 000e 0346     		mov	r3, r0
 2327 0010 1846     		mov	r0, r3
 2328 0012 0837     		adds	r7, r7, #8
 2329              		.cfi_def_cfa_offset 8
 2330 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 100


 2331              		.cfi_def_cfa_register 13
 2332              		@ sp needed
 2333 0016 80BD     		pop	{r7, pc}
 2334              		.cfi_endproc
 2335              	.LFE1934:
 2337              		.section	.text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE10deallocateEPS4_j,"axG",%pr
 2338              		.align	1
 2339              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE10deallocateEPS4_j
 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2343              		.fpu softvfp
 2345              	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE10deallocateEPS4_j:
 2346              	.LFB1935:
 116:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       {
 2347              		.loc 10 116 0
 2348              		.cfi_startproc
 2349              		@ args = 0, pretend = 0, frame = 16
 2350              		@ frame_needed = 1, uses_anonymous_args = 0
 2351 0000 80B5     		push	{r7, lr}
 2352              		.cfi_def_cfa_offset 8
 2353              		.cfi_offset 7, -8
 2354              		.cfi_offset 14, -4
 2355 0002 84B0     		sub	sp, sp, #16
 2356              		.cfi_def_cfa_offset 24
 2357 0004 00AF     		add	r7, sp, #0
 2358              		.cfi_def_cfa_register 7
 2359 0006 F860     		str	r0, [r7, #12]
 2360 0008 B960     		str	r1, [r7, #8]
 2361 000a 7A60     		str	r2, [r7, #4]
 125:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       }
 2362              		.loc 10 125 0
 2363 000c B868     		ldr	r0, [r7, #8]
 2364 000e FFF7FEFF 		bl	_ZdlPv
 126:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2365              		.loc 10 126 0
 2366 0012 00BF     		nop
 2367 0014 1037     		adds	r7, r7, #16
 2368              		.cfi_def_cfa_offset 8
 2369 0016 BD46     		mov	sp, r7
 2370              		.cfi_def_cfa_register 13
 2371              		@ sp needed
 2372 0018 80BD     		pop	{r7, pc}
 2373              		.cfi_endproc
 2374              	.LFE1935:
 2376              		.section	.text._ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv,"axG",%progbits,_ZNK9__gnu_cxx16__ali
 2377              		.align	1
 2378              		.weak	_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv
 2379              		.syntax unified
 2380              		.thumb
 2381              		.thumb_func
 2382              		.fpu softvfp
 2384              	_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv:
 2385              	.LFB1936:
  66:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
 2386              		.loc 9 66 0
 2387              		.cfi_startproc
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 101


 2388              		@ args = 0, pretend = 0, frame = 8
 2389              		@ frame_needed = 1, uses_anonymous_args = 0
 2390              		@ link register save eliminated.
 2391 0000 80B4     		push	{r7}
 2392              		.cfi_def_cfa_offset 4
 2393              		.cfi_offset 7, -4
 2394 0002 83B0     		sub	sp, sp, #12
 2395              		.cfi_def_cfa_offset 16
 2396 0004 00AF     		add	r7, sp, #0
 2397              		.cfi_def_cfa_register 7
 2398 0006 7860     		str	r0, [r7, #4]
  67:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
 2399              		.loc 9 67 0
 2400 0008 7B68     		ldr	r3, [r7, #4]
 2401 000a 1846     		mov	r0, r3
 2402 000c 0C37     		adds	r7, r7, #12
 2403              		.cfi_def_cfa_offset 4
 2404 000e BD46     		mov	sp, r7
 2405              		.cfi_def_cfa_register 13
 2406              		@ sp needed
 2407 0010 80BC     		pop	{r7}
 2408              		.cfi_restore 7
 2409              		.cfi_def_cfa_offset 0
 2410 0012 7047     		bx	lr
 2411              		.cfi_endproc
 2412              	.LFE1936:
 2414              		.section	.text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8allocateEjPKv,"axG",%progbi
 2415              		.align	1
 2416              		.weak	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8allocateEjPKv
 2417              		.syntax unified
 2418              		.thumb
 2419              		.thumb_func
 2420              		.fpu softvfp
 2422              	_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8allocateEjPKv:
 2423              	.LFB1963:
  99:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       {
 2424              		.loc 10 99 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 16
 2427              		@ frame_needed = 1, uses_anonymous_args = 0
 2428 0000 80B5     		push	{r7, lr}
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 7, -8
 2431              		.cfi_offset 14, -4
 2432 0002 84B0     		sub	sp, sp, #16
 2433              		.cfi_def_cfa_offset 24
 2434 0004 00AF     		add	r7, sp, #0
 2435              		.cfi_def_cfa_register 7
 2436 0006 F860     		str	r0, [r7, #12]
 2437 0008 B960     		str	r1, [r7, #8]
 2438 000a 7A60     		str	r2, [r7, #4]
 101:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 2439              		.loc 10 101 0
 2440 000c F868     		ldr	r0, [r7, #12]
 2441 000e FFF7FEFF 		bl	_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv
 2442 0012 0246     		mov	r2, r0
 2443 0014 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 102


 2444 0016 9342     		cmp	r3, r2
 2445 0018 8CBF     		ite	hi
 2446 001a 0123     		movhi	r3, #1
 2447 001c 0023     		movls	r3, #0
 2448 001e DBB2     		uxtb	r3, r3
 2449 0020 002B     		cmp	r3, #0
 2450 0022 01D0     		beq	.L109
 102:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2451              		.loc 10 102 0
 2452 0024 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 2453              	.L109:
 111:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       }
 2454              		.loc 10 111 0
 2455 0028 BA68     		ldr	r2, [r7, #8]
 2456 002a 1346     		mov	r3, r2
 2457 002c 5B00     		lsls	r3, r3, #1
 2458 002e 1344     		add	r3, r3, r2
 2459 0030 9B00     		lsls	r3, r3, #2
 2460 0032 1846     		mov	r0, r3
 2461 0034 FFF7FEFF 		bl	_Znwj
 2462 0038 0346     		mov	r3, r0
 112:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2463              		.loc 10 112 0
 2464 003a 1846     		mov	r0, r3
 2465 003c 1037     		adds	r7, r7, #16
 2466              		.cfi_def_cfa_offset 8
 2467 003e BD46     		mov	sp, r7
 2468              		.cfi_def_cfa_register 13
 2469              		@ sp needed
 2470 0040 80BD     		pop	{r7, pc}
 2471              		.cfi_endproc
 2472              	.LFE1963:
 2474              		.section	.text._ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv,"axG",%progbits,_ZN9__gnu_cxx16__align
 2475              		.align	1
 2476              		.weak	_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv
 2477              		.syntax unified
 2478              		.thumb
 2479              		.thumb_func
 2480              		.fpu softvfp
 2482              	_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv:
 2483              	.LFB1964:
  62:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 2484              		.loc 9 62 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 8
 2487              		@ frame_needed = 1, uses_anonymous_args = 0
 2488              		@ link register save eliminated.
 2489 0000 80B4     		push	{r7}
 2490              		.cfi_def_cfa_offset 4
 2491              		.cfi_offset 7, -4
 2492 0002 83B0     		sub	sp, sp, #12
 2493              		.cfi_def_cfa_offset 16
 2494 0004 00AF     		add	r7, sp, #0
 2495              		.cfi_def_cfa_register 7
 2496 0006 7860     		str	r0, [r7, #4]
  63:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\aligned_buffer.h **** 
 2497              		.loc 9 63 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 103


 2498 0008 7B68     		ldr	r3, [r7, #4]
 2499 000a 1846     		mov	r0, r3
 2500 000c 0C37     		adds	r7, r7, #12
 2501              		.cfi_def_cfa_offset 4
 2502 000e BD46     		mov	sp, r7
 2503              		.cfi_def_cfa_register 13
 2504              		@ sp needed
 2505 0010 80BC     		pop	{r7}
 2506              		.cfi_restore 7
 2507              		.cfi_def_cfa_offset 0
 2508 0012 7047     		bx	lr
 2509              		.cfi_endproc
 2510              	.LFE1964:
 2512              		.section	.text._ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv,"axG",%progbits
 2513              		.align	1
 2514              		.weak	_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv
 2515              		.syntax unified
 2516              		.thumb
 2517              		.thumb_func
 2518              		.fpu softvfp
 2520              	_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv:
 2521              	.LFB1975:
 129:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 2522              		.loc 10 129 0
 2523              		.cfi_startproc
 2524              		@ args = 0, pretend = 0, frame = 8
 2525              		@ frame_needed = 1, uses_anonymous_args = 0
 2526              		@ link register save eliminated.
 2527 0000 80B4     		push	{r7}
 2528              		.cfi_def_cfa_offset 4
 2529              		.cfi_offset 7, -4
 2530 0002 83B0     		sub	sp, sp, #12
 2531              		.cfi_def_cfa_offset 16
 2532 0004 00AF     		add	r7, sp, #0
 2533              		.cfi_def_cfa_register 7
 2534 0006 7860     		str	r0, [r7, #4]
 130:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\ext\new_allocator.h **** 
 2535              		.loc 10 130 0
 2536 0008 024B     		ldr	r3, .L115
 2537 000a 1846     		mov	r0, r3
 2538 000c 0C37     		adds	r7, r7, #12
 2539              		.cfi_def_cfa_offset 4
 2540 000e BD46     		mov	sp, r7
 2541              		.cfi_def_cfa_register 13
 2542              		@ sp needed
 2543 0010 80BC     		pop	{r7}
 2544              		.cfi_restore 7
 2545              		.cfi_def_cfa_offset 0
 2546 0012 7047     		bx	lr
 2547              	.L116:
 2548              		.align	2
 2549              	.L115:
 2550 0014 55555515 		.word	357913941
 2551              		.cfi_endproc
 2552              	.LFE1975:
 2554              		.section	.text._ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev,"axG",%progbits,_ZNSt7__cxx114listIP7IUpda
 2555              		.align	1
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 104


 2556              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev
 2557              		.syntax unified
 2558              		.thumb
 2559              		.thumb_func
 2560              		.fpu softvfp
 2562              	_ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev:
 2563              	.LFB1980:
 733:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 2564              		.loc 4 733 0
 2565              		.cfi_startproc
 2566              		@ args = 0, pretend = 0, frame = 8
 2567              		@ frame_needed = 1, uses_anonymous_args = 0
 2568 0000 80B5     		push	{r7, lr}
 2569              		.cfi_def_cfa_offset 8
 2570              		.cfi_offset 7, -8
 2571              		.cfi_offset 14, -4
 2572 0002 82B0     		sub	sp, sp, #8
 2573              		.cfi_def_cfa_offset 16
 2574 0004 00AF     		add	r7, sp, #0
 2575              		.cfi_def_cfa_register 7
 2576 0006 7860     		str	r0, [r7, #4]
 2577              	.LBB14:
 733:c:\nxp\mcuxpressoide_10.2.1_795\ide\tools\arm-none-eabi\include\c++\7.2.1\bits\stl_list.h **** #endif
 2578              		.loc 4 733 0
 2579 0008 7B68     		ldr	r3, [r7, #4]
 2580 000a 1846     		mov	r0, r3
 2581 000c FFF7FEFF 		bl	_ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev
 2582              	.LBE14:
 2583 0010 7B68     		ldr	r3, [r7, #4]
 2584 0012 1846     		mov	r0, r3
 2585 0014 0837     		adds	r7, r7, #8
 2586              		.cfi_def_cfa_offset 8
 2587 0016 BD46     		mov	sp, r7
 2588              		.cfi_def_cfa_register 13
 2589              		@ sp needed
 2590 0018 80BD     		pop	{r7, pc}
 2591              		.cfi_endproc
 2592              	.LFE1980:
 2594              		.weak	_ZNSt7__cxx114listIP7IUpdateSaIS2_EED1Ev
 2595              		.thumb_set _ZNSt7__cxx114listIP7IUpdateSaIS2_EED1Ev,_ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev
 2596              		.section	.text.__tcf_0,"ax",%progbits
 2597              		.align	1
 2598              		.syntax unified
 2599              		.thumb
 2600              		.thumb_func
 2601              		.fpu softvfp
 2603              	__tcf_0:
 2604              	.LFB1982:
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2605              		.loc 3 7 0
 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 8
 2608              		@ frame_needed = 1, uses_anonymous_args = 0
 2609 0000 90B5     		push	{r4, r7, lr}
 2610              		.cfi_def_cfa_offset 12
 2611              		.cfi_offset 4, -12
 2612              		.cfi_offset 7, -8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 105


 2613              		.cfi_offset 14, -4
 2614 0002 83B0     		sub	sp, sp, #12
 2615              		.cfi_def_cfa_offset 24
 2616 0004 00AF     		add	r7, sp, #0
 2617              		.cfi_def_cfa_register 7
 2618 0006 7860     		str	r0, [r7, #4]
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2619              		.loc 3 7 0
 2620 0008 054C     		ldr	r4, .L122
 2621              	.L121:
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2622              		.loc 3 7 0 is_stmt 0 discriminator 5
 2623 000a 064B     		ldr	r3, .L122+4
 2624 000c 9C42     		cmp	r4, r3
 2625 000e 04D0     		beq	.L119
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2626              		.loc 3 7 0 discriminator 4
 2627 0010 0C3C     		subs	r4, r4, #12
 2628 0012 2046     		mov	r0, r4
 2629 0014 FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EED1Ev
 2630 0018 F7E7     		b	.L121
 2631              	.L119:
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2632              		.loc 3 7 0
 2633 001a 0C37     		adds	r7, r7, #12
 2634              		.cfi_def_cfa_offset 12
 2635 001c BD46     		mov	sp, r7
 2636              		.cfi_def_cfa_register 13
 2637              		@ sp needed
 2638 001e 90BD     		pop	{r4, r7, pc}
 2639              	.L123:
 2640              		.align	2
 2641              	.L122:
 2642 0020 3C000000 		.word	_Z13PriorityQueueB5cxx11+60
 2643 0024 00000000 		.word	_Z13PriorityQueueB5cxx11
 2644              		.cfi_endproc
 2645              	.LFE1982:
 2647              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 2648              		.align	1
 2649              		.syntax unified
 2650              		.thumb
 2651              		.thumb_func
 2652              		.fpu softvfp
 2654              	_Z41__static_initialization_and_destruction_0ii:
 2655              	.LFB1978:
 2656              		.loc 3 38 0 is_stmt 1
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 8
 2659              		@ frame_needed = 1, uses_anonymous_args = 0
 2660 0000 B0B5     		push	{r4, r5, r7, lr}
 2661              		.cfi_def_cfa_offset 16
 2662              		.cfi_offset 4, -16
 2663              		.cfi_offset 5, -12
 2664              		.cfi_offset 7, -8
 2665              		.cfi_offset 14, -4
 2666 0002 82B0     		sub	sp, sp, #8
 2667              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 106


 2668 0004 00AF     		add	r7, sp, #0
 2669              		.cfi_def_cfa_register 7
 2670 0006 7860     		str	r0, [r7, #4]
 2671 0008 3960     		str	r1, [r7]
 2672              		.loc 3 38 0
 2673 000a 7B68     		ldr	r3, [r7, #4]
 2674 000c 012B     		cmp	r3, #1
 2675 000e 14D1     		bne	.L128
 2676              		.loc 3 38 0 is_stmt 0 discriminator 1
 2677 0010 3B68     		ldr	r3, [r7]
 2678 0012 4FF6FF72 		movw	r2, #65535
 2679 0016 9342     		cmp	r3, r2
 2680 0018 0FD1     		bne	.L128
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2681              		.loc 3 7 0 is_stmt 1
 2682 001a 0A4B     		ldr	r3, .L129
 2683 001c 0424     		movs	r4, #4
 2684 001e 1D46     		mov	r5, r3
 2685              	.L127:
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2686              		.loc 3 7 0 is_stmt 0 discriminator 4
 2687 0020 002C     		cmp	r4, #0
 2688 0022 05DB     		blt	.L126
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2689              		.loc 3 7 0 discriminator 3
 2690 0024 2846     		mov	r0, r5
 2691 0026 FFF7FEFF 		bl	_ZNSt7__cxx114listIP7IUpdateSaIS2_EEC1Ev
 2692 002a 0C35     		adds	r5, r5, #12
 2693 002c 013C     		subs	r4, r4, #1
 2694 002e F7E7     		b	.L127
 2695              	.L126:
   7:../src/engine.cpp **** Stack stackDepth = Stack::L1;
 2696              		.loc 3 7 0 discriminator 2
 2697 0030 054A     		ldr	r2, .L129+4
 2698 0032 0649     		ldr	r1, .L129+8
 2699 0034 0020     		movs	r0, #0
 2700 0036 FFF7FEFF 		bl	__aeabi_atexit
 2701              	.L128:
 2702              		.loc 3 38 0 is_stmt 1
 2703 003a 00BF     		nop
 2704 003c 0837     		adds	r7, r7, #8
 2705              		.cfi_def_cfa_offset 16
 2706 003e BD46     		mov	sp, r7
 2707              		.cfi_def_cfa_register 13
 2708              		@ sp needed
 2709 0040 B0BD     		pop	{r4, r5, r7, pc}
 2710              	.L130:
 2711 0042 00BF     		.align	2
 2712              	.L129:
 2713 0044 00000000 		.word	_Z13PriorityQueueB5cxx11
 2714 0048 00000000 		.word	__dso_handle
 2715 004c 00000000 		.word	__tcf_0
 2716              		.cfi_endproc
 2717              	.LFE1978:
 2719              		.section	.text._GLOBAL__sub_I__Z13PriorityQueueB5cxx11,"ax",%progbits
 2720              		.align	1
 2721              		.syntax unified
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 107


 2722              		.thumb
 2723              		.thumb_func
 2724              		.fpu softvfp
 2726              	_GLOBAL__sub_I__Z13PriorityQueueB5cxx11:
 2727              	.LFB1983:
 2728              		.loc 3 38 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 00AF     		add	r7, sp, #0
 2737              		.cfi_def_cfa_register 7
 2738              		.loc 3 38 0
 2739 0004 4FF6FF71 		movw	r1, #65535
 2740 0008 0120     		movs	r0, #1
 2741 000a FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 2742 000e 80BD     		pop	{r7, pc}
 2743              		.cfi_endproc
 2744              	.LFE1983:
 2746              		.section	.init_array,"aw",%init_array
 2747              		.align	2
 2748 0000 00000000 		.word	_GLOBAL__sub_I__Z13PriorityQueueB5cxx11(target1)
 2749              		.text
 2750              	.Letext0:
 2751              		.file 12 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\machine\\_default
 2752              		.file 13 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\_stdint.h"
 2753              		.file 14 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\stdint.h"
 2754              		.file 15 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/core_cm3.h"
 2755              		.file 16 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/chip.h"
 2756              		.file 17 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\
 2757              		.file 18 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\
 2758              		.file 19 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\lock.h"
 2759              		.file 20 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\_types.h"
 2760              		.file 21 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\reent.h"
 2761              		.file 22 "<built-in>"
 2762              		.file 23 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\stdio.h"
 2763              		.file 24 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\type_
 2764              		.file 25 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\
 2765              		.file 26 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\debug
 2766              		.file 27 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\cwcha
 2767              		.file 28 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\arm-n
 2768              		.file 29 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\cstdi
 2769              		.file 30 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\
 2770              		.file 31 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\cloca
 2771              		.file 32 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\cctyp
 2772              		.file 33 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\
 2773              		.file 34 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\cstdl
 2774              		.file 35 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\cstdi
 2775              		.file 36 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\
 2776              		.file 37 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\bits\
 2777              		.file 38 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\ext\\
 2778              		.file 39 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\c++\\7.2.1\\ext\\
 2779              		.file 40 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\wchar.h"
 2780              		.file 41 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\locale.h"
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 108


 2781              		.file 42 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\ctype.h"
 2782              		.file 43 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\stdlib.h"
 2783              		.file 44 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\errno.h"
 2784              		.file 45 "C:\\Users\\xavie\\Cegep\\Processeurs\\HeroOrZero\\inc/engine.h"
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 109


DEFINED SYMBOLS
                            *ABS*:00000000 engine.cpp
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:16     .rodata._ZStL19piecewise_construct:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:19     .rodata._ZStL19piecewise_construct:00000000 _ZStL19piecewise_construct
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:22     .text._ZnwjPv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:29     .text._ZnwjPv:00000000 _ZnwjPv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:62     .text._ZL20__gthread_key_deletei:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:68     .text._ZL20__gthread_key_deletei:00000000 _ZL20__gthread_key_deletei
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:105    .bss._Z13PriorityQueueB5cxx11:00000000 _Z13PriorityQueueB5cxx11
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:102    .bss._Z13PriorityQueueB5cxx11:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:112    .bss.stackDepth:00000000 stackDepth
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:109    .bss.stackDepth:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:115    .text._ZN10TickEngine9PushStackEP7IUpdate5Stack:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:122    .text._ZN10TickEngine9PushStackEP7IUpdate5Stack:00000000 _ZN10TickEngine9PushStackEP7IUpdate5Stack
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:417    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE10push_frontERKS2_:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EE10push_frontERKS2_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:176    .text._ZN10TickEngine9PushStackEP7IUpdate5Stack:00000040 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:182    .text._ZN10TickEngine8PopStackE5Stack:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:189    .text._ZN10TickEngine8PopStackE5Stack:00000000 _ZN10TickEngine8PopStackE5Stack
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:459    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE9pop_frontEv:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EE9pop_frontEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:499    .text._ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv:00000000 _ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:263    .text._ZN10TickEngine8PopStackE5Stack:00000060 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:269    .text._ZN10TickEngine4TickEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:276    .text._ZN10TickEngine4TickEv:00000000 _ZN10TickEngine4TickEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:537    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:578    .text._ZNKSt14_List_iteratorIP7IUpdateEdeEv:00000000 _ZNKSt14_List_iteratorIP7IUpdateEdeEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:361    .text._ZN10TickEngine4TickEv:00000078 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:367    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:374    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:658    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:374    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EEC2Ev:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EEC1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:410    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE10push_frontERKS2_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:786    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:452    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE9pop_frontEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:841    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:492    .text._ZNKSt7__cxx114listIP7IUpdateSaIS2_EE4sizeEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:905    .text._ZNKSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE13_M_node_countEv:00000000 _ZNKSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE13_M_node_countEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:530    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE5beginEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:944    .text._ZNSt14_List_iteratorIP7IUpdateEC2EPNSt8__detail15_List_node_baseE:00000000 _ZNSt14_List_iteratorIP7IUpdateEC1EPNSt8__detail15_List_node_baseE
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:571    .text._ZNKSt14_List_iteratorIP7IUpdateEdeEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:990    .text._ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv:00000000 _ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:610    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:617    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1077   .text._ZNSaISt10_List_nodeIP7IUpdateEED2Ev:00000000 _ZNSaISt10_List_nodeIP7IUpdateEED2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:617    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:651    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1029   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1119   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE7_M_initEv:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE7_M_initEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:658    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:696    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:703    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1165   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE8_M_clearEv:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE8_M_clearEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:703    .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:740    .text._ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:747    .text._ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE:00000000 _ZSt7forwardIRKP7IUpdateEOT_RNSt16remove_referenceIS4_E4typeE
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:779    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1237   .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1313   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_inc_sizeEj:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_inc_sizeEj
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 110


C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:834    .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1356   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_dec_sizeEj:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_dec_sizeEj
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1399   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1437   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_:00000000 _ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1476   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:898    .text._ZNKSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE13_M_node_countEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1516   .text._ZNKSt10_List_nodeIjE9_M_valptrEv:00000000 _ZNKSt10_List_nodeIjE9_M_valptrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:937    .text._ZNSt14_List_iteratorIP7IUpdateEC2EPNSt8__detail15_List_node_baseE:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:944    .text._ZNSt14_List_iteratorIP7IUpdateEC2EPNSt8__detail15_List_node_baseE:00000000 _ZNSt14_List_iteratorIP7IUpdateEC2EPNSt8__detail15_List_node_baseE
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:983    .text._ZNSt10_List_nodeIP7IUpdateE9_M_valptrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1555   .text._ZN9__gnu_cxx16__aligned_membufIP7IUpdateE6_M_ptrEv:00000000 _ZN9__gnu_cxx16__aligned_membufIP7IUpdateE6_M_ptrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1022   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1029   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC2Ev:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1593   .text._ZNSaISt10_List_nodeIP7IUpdateEEC2Ev:00000000 _ZNSaISt10_List_nodeIP7IUpdateEEC2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1070   .text._ZNSaISt10_List_nodeIP7IUpdateEED2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1634   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1077   .text._ZNSaISt10_List_nodeIP7IUpdateEED2Ev:00000000 _ZNSaISt10_List_nodeIP7IUpdateEED1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1112   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE7_M_initEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1675   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_set_sizeEj:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_set_sizeEj
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1158   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE8_M_clearEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1230   .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1716   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_get_nodeEv:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_get_nodeEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1755   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC2ERS4_PS3_:00000000 _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC1ERS4_PS3_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1859   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_:00000000 _ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1902   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEaSEDn:00000000 _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEaSEDn
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1806   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED2Ev:00000000 _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1306   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_inc_sizeEj:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1946   .text._ZNSt10_List_nodeIjE9_M_valptrEv:00000000 _ZNSt10_List_nodeIjE9_M_valptrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1349   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_dec_sizeEj:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1392   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE21_M_get_Node_allocatorEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1430   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE7destroyIS2_EEvRS4_PT_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1985   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE7destroyIS3_EEvPT_:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE7destroyIS3_EEvPT_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1469   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2023   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j:00000000 _ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1509   .text._ZNKSt10_List_nodeIjE9_M_valptrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2063   .text._ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv:00000000 _ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1548   .text._ZN9__gnu_cxx16__aligned_membufIP7IUpdateE6_M_ptrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2100   .text._ZN9__gnu_cxx16__aligned_membufIP7IUpdateE7_M_addrEv:00000000 _ZN9__gnu_cxx16__aligned_membufIP7IUpdateE7_M_addrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1586   .text._ZNSaISt10_List_nodeIP7IUpdateEEC2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2138   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1593   .text._ZNSaISt10_List_nodeIP7IUpdateEEC2Ev:00000000 _ZNSaISt10_List_nodeIP7IUpdateEEC1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1627   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1634   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1668   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_set_sizeEj:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1709   .text._ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE11_M_get_nodeEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2178   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE8allocateERS4_j:00000000 _ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE8allocateERS4_j
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1748   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC2ERS4_PS3_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1755   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC2ERS4_PS3_:00000000 _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC2ERS4_PS3_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2218   .text._ZSt11__addressofISaISt10_List_nodeIP7IUpdateEEEPT_RS5_:00000000 _ZSt11__addressofISaISt10_List_nodeIP7IUpdateEEEPT_RS5_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1799   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1806   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED2Ev:00000000 _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1852   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2256   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE9constructIS3_JRKS3_EEEvPT_DpOT0_:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE9constructIS3_JRKS3_EEEvPT_DpOT0_
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1895   .text._ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEaSEDn:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1939   .text._ZNSt10_List_nodeIjE9_M_valptrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2308   .text._ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv:00000000 _ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:1978   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE7destroyIS3_EEvPT_:00000000 $t
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 111


C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2016   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE10deallocateERS4_PS3_j:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2345   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE10deallocateEPS4_j:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE10deallocateEPS4_j
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2056   .text._ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2384   .text._ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv:00000000 _ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2093   .text._ZN9__gnu_cxx16__aligned_membufIP7IUpdateE7_M_addrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2131   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2138   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2171   .text._ZNSt16allocator_traitsISaISt10_List_nodeIP7IUpdateEEE8allocateERS4_j:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2422   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8allocateEjPKv:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8allocateEjPKv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2211   .text._ZSt11__addressofISaISt10_List_nodeIP7IUpdateEEEPT_RS5_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2249   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE9constructIS3_JRKS3_EEEvPT_DpOT0_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2301   .text._ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2482   .text._ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv:00000000 _ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2338   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE10deallocateEPS4_j:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2377   .text._ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2415   .text._ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8allocateEjPKv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2520   .text._ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv:00000000 _ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2475   .text._ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2513   .text._ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2550   .text._ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEE8max_sizeEv:00000014 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2555   .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2562   .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2562   .text._ZNSt7__cxx114listIP7IUpdateSaIS2_EED2Ev:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EED1Ev
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2597   .text.__tcf_0:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2603   .text.__tcf_0:00000000 __tcf_0
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2642   .text.__tcf_0:00000020 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2648   .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2654   .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2713   .text._Z41__static_initialization_and_destruction_0ii:00000044 $d
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2720   .text._GLOBAL__sub_I__Z13PriorityQueueB5cxx11:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2726   .text._GLOBAL__sub_I__Z13PriorityQueueB5cxx11:00000000 _GLOBAL__sub_I__Z13PriorityQueueB5cxx11
C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s:2747   .init_array:00000000 $d
                           .group:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EEC5Ev
                           .group:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implD5Ev
                           .group:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EEC5Ev
                           .group:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EED5Ev
                           .group:00000000 _ZNSt14_List_iteratorIP7IUpdateEC5EPNSt8__detail15_List_node_baseE
                           .group:00000000 _ZNSt7__cxx1110_List_baseIP7IUpdateSaIS2_EE10_List_implC5Ev
                           .group:00000000 _ZNSaISt10_List_nodeIP7IUpdateEED5Ev
                           .group:00000000 _ZNSaISt10_List_nodeIP7IUpdateEEC5Ev
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEED5Ev
                           .group:00000000 _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEEC5ERS4_PS3_
                           .group:00000000 _ZNSt15__allocated_ptrISaISt10_List_nodeIP7IUpdateEEED5Ev
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP7IUpdateEEC5Ev
                           .group:00000000 _ZNSt7__cxx114listIP7IUpdateSaIS2_EED5Ev
                           .group:00000000 wm4.0.0474d032b6805b4a3671280691a3da50
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.lpc_types.h.63.c4e7eaf7330236ae510314a23d74e6ca
                           .group:00000000 wm4.sys_config.h.31.f8c315d4b1b74f49c8745dcf1114f978
                           .group:00000000 wm4.cmsis_175x_6x.h.33.75b091e3b445a2d3d6fff2c163abfea4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 112


                           .group:00000000 wm4.core_cm3.h.47.c45d264953076019d6b3b1c20e8ad771
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm3.h.144.13c1820b08b053ff2afcbecd6c121769
                           .group:00000000 wm4.chip_lpc175x_6x.h.33.eb00dd5e876bba2d92e5365aaa2adcc9
                           .group:00000000 wm4.sysctl_17xx_40xx.h.33.60ea2b0c038b570d16b743be456c0a3c
                           .group:00000000 wm4.clock_17xx_40xx.h.33.ac1c09ba10bd275fd518dc893f69b719
                           .group:00000000 wm4.iocon_17xx_40xx.h.33.30efb695138835ce45b969a383622df1
                           .group:00000000 wm4.adc_17xx_40xx.h.33.4ccfb2b64a214dfbd42dcc57b951adea
                           .group:00000000 wm4.can_17xx_40xx.h.33.998a7ac704f1a68b2cd5e0b56d8d5982
                           .group:00000000 wm4.dac_17xx_40xx.h.33.c6b24d203fe35c404313549726e8b471
                           .group:00000000 wm4.enet_17xx_40xx.h.33.7cbc246ead5985e9ded0581894620518
                           .group:00000000 wm4.gpdma_17xx_40xx.h.33.48ff5e223f8561d024da95b445b6412f
                           .group:00000000 wm4.gpio_17xx_40xx.h.33.ccf33f35e6ec854f4c17216560fb0e2d
                           .group:00000000 wm4.i2c_17xx_40xx.h.33.251f9e2630fa2e1c5f956a841fad976e
                           .group:00000000 wm4.i2s_17xx_40xx.h.33.c4dac649f14353e74f7ad13206e59212
                           .group:00000000 wm4.pmu_17xx_40xx.h.33.6df98f4a15b545c975b3d7e285b1914a
                           .group:00000000 wm4.ritimer_17xx_40xx.h.33.2353edabf0d761fc5545c38574ab0483
                           .group:00000000 wm4.rtc_17xx_40xx.h.33.1b92c4cdbb0e30811f9b658793f1692a
                           .group:00000000 wm4.spi_17xx_40xx.h.33.29890397a2d0d2f7c45c9629c75ce288
                           .group:00000000 wm4.ssp_17xx_40xx.h.33.2caafe5625dd4e0c436aadef2d04967e
                           .group:00000000 wm4.timer_17xx_40xx.h.33.cf1ff612c99670767f5f971c7f8e9fde
                           .group:00000000 wm4.ring_buffer.h.33.ffd8153954783612f9c626df1ed9e770
                           .group:00000000 wm4.uart_17xx_40xx.h.98.24bad698225619af11e644944c69bb64
                           .group:00000000 wm4.wwdt_17xx_40xx.h.33.c6b9b47b39d0af231ccdbbe61f2e586a
                           .group:00000000 wm4.fmc_17xx_40xx.h.33.50d936806f8521fe9e7b0b5d644ffe41
                           .group:00000000 wm4.iap.h.33.bfa6a5070920deda981787d64c9b1d6d
                           .group:00000000 wm4.error.h.38.139632325ccc020d697d2fcf83ee170f
                           .group:00000000 wm4.board.h.58.43e2a020e238f3a03713d0d4b05aa2db
                           .group:00000000 wm4.newlib.h.8.e0fd068ed40a600f7426443f865dd469
                           .group:00000000 wm4.ieeefp.h.77.49bcce8a603f3d93a95080d6a3573782
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.187.422da5f95ac1285e95faf42258f23242
                           .group:00000000 wm4.cdefs.h.47.ef8413a24f515b2210954be82adc67e2
                           .group:00000000 wm4.stddef.h.39.101367dade8a53b166775e1434b00616
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.184.7120b8bb2e0149e2359704f4e2251b68
                           .group:00000000 wm4.reent.h.17.87376802c2b370b32a762f0a30482d9e
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.f9d7979a479d57685780efa849031ac4
                           .group:00000000 wm4.board_api.h.166.63aa07b58758871d5b14e460a43bd11e
                           .group:00000000 wm4.lpc_phy.h.56.88cb0dd4e85f8d7768db24fbc73d4911
                           .group:00000000 wm4.cconfig.h.31.8d62951b41c03e8177558db1118caeba
                           .group:00000000 wm4.cpu_defines.h.31.bf53b50a3b7882b34c717ebded187478
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccUw5nyp.s 			page 113


                           .group:00000000 wm4.cconfig.h.541.3e7122a26aab9f5a5399e0379cd75f44
                           .group:00000000 wm4.exception_defines.h.31.b944334bb23842f2d39bb0d8b467613a
                           .group:00000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:00000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:00000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:00000000 wm4.type_traits.30.32b820b957e206cbc57b9805350afbca
                           .group:00000000 wm4.move.h.159.368bac456bc1dfb8448d51bb65764956
                           .group:00000000 wm4.assertions.h.30.f3970bbdad8b12088edf616ddeecdc90
                           .group:00000000 wm4.stl_iterator.h.409.7a84ee40267bb1222b7cd9a74055edfb
                           .group:00000000 wm4.debug.h.30.70fe957e8e7c7ceba3caf19b0959f126
                           .group:00000000 wm4.stl_algobase.h.491.ec4060988bfff82dc579decdb75c72d6
                           .group:00000000 wm4.wchar.h.2.f837619576d797e948eb58c44fac4678
                           .group:00000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:00000000 wm4.wchar.h.85.2dade3bd756ac8674ed46ca1e448082a
                           .group:00000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:00000000 wm4.cxxabi_init_exception.h.42.029852b0f286014c9c193b74ad22df55
                           .group:00000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:00000000 wm4.locale.h.8.27d0fe4c0abbb6f8893a1fa7c1799fd9
                           .group:00000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:00000000 wm4.locale.h.16.90d16f662e7119f5b192650a45179c6c
                           .group:00000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:00000000 wm4.ctype.h.2.cf64fe4c5e8c0ac0f52f1143312d4909
                           .group:00000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:00000000 wm4.stl_function.h.57.6639ab8e57d2230b4b27118173a32750
                           .group:00000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:00000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:00000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:00000000 wm4.alloc_traits.h.31.c41c7c4789404962122a4e991dfa3abf
                           .group:00000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.std_abs.h.31.4587ba001d85390d152353c24c92c0c8
                           .group:00000000 wm4.cstdlib.80.9130cf66e68370da17fd25eb61f97205
                           .group:00000000 wm4.cstdio.45.1ffaea3e7c26dce1e03f5847a7439edb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.functional_hash.h.31.d995554db01f631b375a95ecfc605ca0
                           .group:00000000 wm4.cr_section_macros.h.33.9e7c9c82e85b060f15a6d1b56a42fef2
                           .group:00000000 wm4.map.h.9.a59b4e1233d5777952b9a6cfa331d012

UNDEFINED SYMBOLS
_ZNSt8__detail15_List_node_base7_M_hookEPS0_
_ZNSt8__detail15_List_node_base9_M_unhookEv
_ZdlPv
_ZSt17__throw_bad_allocv
_Znwj
__aeabi_atexit
__dso_handle
