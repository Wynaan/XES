ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"lpc_xav.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.bss._ZL2P0,"aw",%nobits
  16              		.align	2
  19              	_ZL2P0:
  20 0000 00000000 		.space	12
  20      00000000 
  20      00000000 
  21              		.section	.bss._ZL2P1,"aw",%nobits
  22              		.align	2
  25              	_ZL2P1:
  26 0000 00000000 		.space	12
  26      00000000 
  26      00000000 
  27              		.section	.bss._ZL2P2,"aw",%nobits
  28              		.align	2
  31              	_ZL2P2:
  32 0000 00000000 		.space	12
  32      00000000 
  32      00000000 
  33              		.section	.bss._ZL2P3,"aw",%nobits
  34              		.align	2
  37              	_ZL2P3:
  38 0000 00000000 		.space	12
  38      00000000 
  38      00000000 
  39              		.section	.bss._ZL2P4,"aw",%nobits
  40              		.align	2
  43              	_ZL2P4:
  44 0000 00000000 		.space	12
  44      00000000 
  44      00000000 
  45              		.section	.bss._ZL4TMR0,"aw",%nobits
  46              		.align	2
  49              	_ZL4TMR0:
  50 0000 00000000 		.space	12
  50      00000000 
  50      00000000 
  51              		.section	.bss._ZL4TMR1,"aw",%nobits
  52              		.align	2
  55              	_ZL4TMR1:
  56 0000 00000000 		.space	12
  56      00000000 
  56      00000000 
  57              		.section	.bss._ZL4TMR2,"aw",%nobits
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 2


  58              		.align	2
  61              	_ZL4TMR2:
  62 0000 00000000 		.space	12
  62      00000000 
  62      00000000 
  63              		.section	.bss._ZL4TMR3,"aw",%nobits
  64              		.align	2
  67              	_ZL4TMR3:
  68 0000 00000000 		.space	12
  68      00000000 
  68      00000000 
  69              		.section	.bss._ZL5UART0,"aw",%nobits
  70              		.align	2
  73              	_ZL5UART0:
  74 0000 00000000 		.space	8
  74      00000000 
  75              		.section	.bss._ZL8Keyboard,"aw",%nobits
  76              		.align	2
  79              	_ZL8Keyboard:
  80 0000 00000000 		.space	8
  80      00000000 
  81              		.section	.bss._ZL7Console,"aw",%nobits
  82              		.align	2
  85              	_ZL7Console:
  86 0000 00000000 		.space	8
  86      00000000 
  87              		.section	.rodata._ZL19PtrRI_TIMER_COMPVAL,"a",%progbits
  88              		.align	2
  91              	_ZL19PtrRI_TIMER_COMPVAL:
  92 0000 00000B40 		.word	1074462720
  93              		.section	.rodata._ZL16PtrRI_TIMER_MASK,"a",%progbits
  94              		.align	2
  97              	_ZL16PtrRI_TIMER_MASK:
  98 0000 04000B40 		.word	1074462724
  99              		.section	.rodata._ZL16PtrRI_TIMER_CTRL,"a",%progbits
 100              		.align	2
 103              	_ZL16PtrRI_TIMER_CTRL:
 104 0000 08000B40 		.word	1074462728
 105              		.section	.rodata._ZL17PtrRI_TIMER_COUNT,"a",%progbits
 106              		.align	2
 109              	_ZL17PtrRI_TIMER_COUNT:
 110 0000 0C000B40 		.word	1074462732
 111              		.section	.text._Z9EnableIRQh,"ax",%progbits
 112              		.align	1
 113              		.global	_Z9EnableIRQh
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	_Z9EnableIRQh:
 120              	.LFB319:
 121              		.file 1 "../src/lpc_xav.cpp"
   1:../src/lpc_xav.cpp **** #include "lpc_xav.h"
   2:../src/lpc_xav.cpp **** #include "segdisplay.h"
   3:../src/lpc_xav.cpp **** 
   4:../src/lpc_xav.cpp **** extern bool Transfer_Done;
   5:../src/lpc_xav.cpp **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 3


   6:../src/lpc_xav.cpp **** void EnableIRQ(uint8_t Int_bit)
   7:../src/lpc_xav.cpp **** {
 122              		.loc 1 7 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127 0000 80B4     		push	{r7}
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 83B0     		sub	sp, sp, #12
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 134 0006 0346     		mov	r3, r0
 135 0008 FB71     		strb	r3, [r7, #7]
   8:../src/lpc_xav.cpp **** 	*((uint32_t *) 0xE000E280) |= (1 << Int_bit); // Clear pending interrupt
 136              		.loc 1 8 0
 137 000a 0C4B     		ldr	r3, .L2
 138 000c 1B68     		ldr	r3, [r3]
 139 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 140 0010 0121     		movs	r1, #1
 141 0012 01FA02F2 		lsl	r2, r1, r2
 142 0016 1146     		mov	r1, r2
 143 0018 084A     		ldr	r2, .L2
 144 001a 0B43     		orrs	r3, r3, r1
 145 001c 1360     		str	r3, [r2]
   9:../src/lpc_xav.cpp **** 	*((uint32_t *) 0xE000E100) |= (1 << Int_bit); // Enable interrupt
 146              		.loc 1 9 0
 147 001e 084B     		ldr	r3, .L2+4
 148 0020 1B68     		ldr	r3, [r3]
 149 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 150 0024 0121     		movs	r1, #1
 151 0026 01FA02F2 		lsl	r2, r1, r2
 152 002a 1146     		mov	r1, r2
 153 002c 044A     		ldr	r2, .L2+4
 154 002e 0B43     		orrs	r3, r3, r1
 155 0030 1360     		str	r3, [r2]
  10:../src/lpc_xav.cpp **** }
 156              		.loc 1 10 0
 157 0032 00BF     		nop
 158 0034 0C37     		adds	r7, r7, #12
 159              		.cfi_def_cfa_offset 4
 160 0036 BD46     		mov	sp, r7
 161              		.cfi_def_cfa_register 13
 162              		@ sp needed
 163 0038 80BC     		pop	{r7}
 164              		.cfi_restore 7
 165              		.cfi_def_cfa_offset 0
 166 003a 7047     		bx	lr
 167              	.L3:
 168              		.align	2
 169              	.L2:
 170 003c 80E200E0 		.word	-536812928
 171 0040 00E100E0 		.word	-536813312
 172              		.cfi_endproc
 173              	.LFE319:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 4


 175              		.section	.text._Z15GPIO_Enable_Inthhh,"ax",%progbits
 176              		.align	1
 177              		.global	_Z15GPIO_Enable_Inthhh
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	_Z15GPIO_Enable_Inthhh:
 184              	.LFB320:
  11:../src/lpc_xav.cpp **** 
  12:../src/lpc_xav.cpp **** void GPIO_Enable_Int(uint8_t PortNo, uint8_t PinNo, uint8_t Edge_Select)
  13:../src/lpc_xav.cpp **** {
 185              		.loc 1 13 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 8
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 82B0     		sub	sp, sp, #8
 194              		.cfi_def_cfa_offset 16
 195 0004 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 197 0006 0346     		mov	r3, r0
 198 0008 FB71     		strb	r3, [r7, #7]
 199 000a 0B46     		mov	r3, r1
 200 000c BB71     		strb	r3, [r7, #6]
 201 000e 1346     		mov	r3, r2
 202 0010 7B71     		strb	r3, [r7, #5]
  14:../src/lpc_xav.cpp **** 	if(PortNo == 0)
 203              		.loc 1 14 0
 204 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 205 0014 002B     		cmp	r3, #0
 206 0016 11D1     		bne	.L5
  15:../src/lpc_xav.cpp **** 		*((uint32_t *)0x40028090 + Edge_Select - 1) |= (1 << PinNo);
 207              		.loc 1 15 0
 208 0018 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 209 001a 164B     		ldr	r3, .L7
 210 001c 1344     		add	r3, r3, r2
 211 001e 9B00     		lsls	r3, r3, #2
 212 0020 1A68     		ldr	r2, [r3]
 213 0022 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 214 0024 0121     		movs	r1, #1
 215 0026 01FA03F3 		lsl	r3, r1, r3
 216 002a 1846     		mov	r0, r3
 217 002c 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 218 002e 114B     		ldr	r3, .L7
 219 0030 0B44     		add	r3, r3, r1
 220 0032 9B00     		lsls	r3, r3, #2
 221 0034 1946     		mov	r1, r3
 222 0036 42EA0003 		orr	r3, r2, r0
 223 003a 0B60     		str	r3, [r1]
 224              	.L5:
  16:../src/lpc_xav.cpp **** 	if(PortNo == 2)
 225              		.loc 1 16 0
 226 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 5


 227 003e 022B     		cmp	r3, #2
 228 0040 11D1     		bne	.L6
  17:../src/lpc_xav.cpp **** 		*((uint32_t *)0x400280B4 + Edge_Select - 1) |= (1 << PinNo);
 229              		.loc 1 17 0
 230 0042 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 231 0044 0C4B     		ldr	r3, .L7+4
 232 0046 1344     		add	r3, r3, r2
 233 0048 9B00     		lsls	r3, r3, #2
 234 004a 1A68     		ldr	r2, [r3]
 235 004c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 236 004e 0121     		movs	r1, #1
 237 0050 01FA03F3 		lsl	r3, r1, r3
 238 0054 1846     		mov	r0, r3
 239 0056 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 240 0058 074B     		ldr	r3, .L7+4
 241 005a 0B44     		add	r3, r3, r1
 242 005c 9B00     		lsls	r3, r3, #2
 243 005e 1946     		mov	r1, r3
 244 0060 42EA0003 		orr	r3, r2, r0
 245 0064 0B60     		str	r3, [r1]
 246              	.L6:
  18:../src/lpc_xav.cpp **** 
  19:../src/lpc_xav.cpp **** 	EnableIRQ(21);
 247              		.loc 1 19 0
 248 0066 1520     		movs	r0, #21
 249 0068 FFF7FEFF 		bl	_Z9EnableIRQh
  20:../src/lpc_xav.cpp **** }
 250              		.loc 1 20 0
 251 006c 00BF     		nop
 252 006e 0837     		adds	r7, r7, #8
 253              		.cfi_def_cfa_offset 8
 254 0070 BD46     		mov	sp, r7
 255              		.cfi_def_cfa_register 13
 256              		@ sp needed
 257 0072 80BD     		pop	{r7, pc}
 258              	.L8:
 259              		.align	2
 260              	.L7:
 261 0074 23A00010 		.word	268476451
 262 0078 2CA00010 		.word	268476460
 263              		.cfi_endproc
 264              	.LFE320:
 266              		.section	.text._Z14Enable_EXT_Inthh,"ax",%progbits
 267              		.align	1
 268              		.global	_Z14Enable_EXT_Inthh
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu softvfp
 274              	_Z14Enable_EXT_Inthh:
 275              	.LFB321:
  21:../src/lpc_xav.cpp **** 
  22:../src/lpc_xav.cpp **** void Enable_EXT_Int(uint8_t ExtIntNo, uint8_t ExtMode) // Enable EXT[0..3] interrupts
  23:../src/lpc_xav.cpp **** {
 276              		.loc 1 23 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 6


 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 288 0006 0346     		mov	r3, r0
 289 0008 0A46     		mov	r2, r1
 290 000a FB71     		strb	r3, [r7, #7]
 291 000c 1346     		mov	r3, r2
 292 000e BB71     		strb	r3, [r7, #6]
  24:../src/lpc_xav.cpp **** 	EnableIRQ(ExtIntNo + 18);
 293              		.loc 1 24 0
 294 0010 FB79     		ldrb	r3, [r7, #7]
 295 0012 1233     		adds	r3, r3, #18
 296 0014 DBB2     		uxtb	r3, r3
 297 0016 1846     		mov	r0, r3
 298 0018 FFF7FEFF 		bl	_Z9EnableIRQh
  25:../src/lpc_xav.cpp **** 
  26:../src/lpc_xav.cpp **** 	*(uint32_t*)0x400FC148 &= ~(1 << ExtIntNo);
 299              		.loc 1 26 0
 300 001c 0C4B     		ldr	r3, .L10
 301 001e 1B68     		ldr	r3, [r3]
 302 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 303 0022 0121     		movs	r1, #1
 304 0024 01FA02F2 		lsl	r2, r1, r2
 305 0028 D243     		mvns	r2, r2
 306 002a 1146     		mov	r1, r2
 307 002c 084A     		ldr	r2, .L10
 308 002e 0B40     		ands	r3, r3, r1
 309 0030 1360     		str	r3, [r2]
  27:../src/lpc_xav.cpp **** 	*(uint32_t*)0x400FC148 |= (ExtMode << ExtIntNo);
 310              		.loc 1 27 0
 311 0032 074B     		ldr	r3, .L10
 312 0034 1B68     		ldr	r3, [r3]
 313 0036 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 314 0038 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 315 003a 01FA02F2 		lsl	r2, r1, r2
 316 003e 1146     		mov	r1, r2
 317 0040 034A     		ldr	r2, .L10
 318 0042 0B43     		orrs	r3, r3, r1
 319 0044 1360     		str	r3, [r2]
  28:../src/lpc_xav.cpp **** }
 320              		.loc 1 28 0
 321 0046 00BF     		nop
 322 0048 0837     		adds	r7, r7, #8
 323              		.cfi_def_cfa_offset 8
 324 004a BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 004c 80BD     		pop	{r7, pc}
 328              	.L11:
 329 004e 00BF     		.align	2
 330              	.L10:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 7


 331 0050 48C10F40 		.word	1074774344
 332              		.cfi_endproc
 333              	.LFE321:
 335              		.section	.text._ZN4Port6SetFctEhh,"ax",%progbits
 336              		.align	1
 337              		.global	_ZN4Port6SetFctEhh
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu softvfp
 343              	_ZN4Port6SetFctEhh:
 344              	.LFB322:
  29:../src/lpc_xav.cpp **** /**************************************************************************************************
  30:../src/lpc_xav.cpp **** void Port::SetFct(uint8_t PinNo, uint8_t Fct) // Set function for pin (GPIO, periph, etc)
  31:../src/lpc_xav.cpp **** {
 345              		.loc 1 31 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 80B4     		push	{r7}
 351              		.cfi_def_cfa_offset 4
 352              		.cfi_offset 7, -4
 353 0002 83B0     		sub	sp, sp, #12
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 7860     		str	r0, [r7, #4]
 358 0008 0B46     		mov	r3, r1
 359 000a FB70     		strb	r3, [r7, #3]
 360 000c 1346     		mov	r3, r2
 361 000e BB70     		strb	r3, [r7, #2]
  32:../src/lpc_xav.cpp **** 	if(PinNo > 15){
 362              		.loc 1 32 0
 363 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 364 0012 0F2B     		cmp	r3, #15
 365 0014 21D9     		bls	.L13
  33:../src/lpc_xav.cpp **** 		*(_PINCB + 1) &= ~(3 << ((PinNo-16)*2));
 366              		.loc 1 33 0
 367 0016 7B68     		ldr	r3, [r7, #4]
 368 0018 1B68     		ldr	r3, [r3]
 369 001a 0433     		adds	r3, r3, #4
 370 001c 1A68     		ldr	r2, [r3]
 371 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 372 0020 103B     		subs	r3, r3, #16
 373 0022 5B00     		lsls	r3, r3, #1
 374 0024 0321     		movs	r1, #3
 375 0026 01FA03F3 		lsl	r3, r1, r3
 376 002a DB43     		mvns	r3, r3
 377 002c 1946     		mov	r1, r3
 378 002e 7B68     		ldr	r3, [r7, #4]
 379 0030 1B68     		ldr	r3, [r3]
 380 0032 0433     		adds	r3, r3, #4
 381 0034 0A40     		ands	r2, r2, r1
 382 0036 1A60     		str	r2, [r3]
  34:../src/lpc_xav.cpp **** 		*(_PINCB + 1) |= (Fct << ((PinNo-16)*2));
 383              		.loc 1 34 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 8


 384 0038 7B68     		ldr	r3, [r7, #4]
 385 003a 1B68     		ldr	r3, [r3]
 386 003c 0433     		adds	r3, r3, #4
 387 003e 1A68     		ldr	r2, [r3]
 388 0040 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 389 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 390 0044 103B     		subs	r3, r3, #16
 391 0046 5B00     		lsls	r3, r3, #1
 392 0048 01FA03F3 		lsl	r3, r1, r3
 393 004c 1946     		mov	r1, r3
 394 004e 7B68     		ldr	r3, [r7, #4]
 395 0050 1B68     		ldr	r3, [r3]
 396 0052 0433     		adds	r3, r3, #4
 397 0054 0A43     		orrs	r2, r2, r1
 398 0056 1A60     		str	r2, [r3]
  35:../src/lpc_xav.cpp **** 	}
  36:../src/lpc_xav.cpp **** 	else{
  37:../src/lpc_xav.cpp **** 		*_PINCB &= ~(3 << (PinNo*2));
  38:../src/lpc_xav.cpp **** 		*_PINCB |= (Fct << (PinNo*2));
  39:../src/lpc_xav.cpp **** 	}
  40:../src/lpc_xav.cpp **** }
 399              		.loc 1 40 0
 400 0058 1AE0     		b	.L15
 401              	.L13:
  37:../src/lpc_xav.cpp **** 		*_PINCB |= (Fct << (PinNo*2));
 402              		.loc 1 37 0
 403 005a 7B68     		ldr	r3, [r7, #4]
 404 005c 1B68     		ldr	r3, [r3]
 405 005e 1A68     		ldr	r2, [r3]
 406 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 407 0062 5B00     		lsls	r3, r3, #1
 408 0064 0321     		movs	r1, #3
 409 0066 01FA03F3 		lsl	r3, r1, r3
 410 006a DB43     		mvns	r3, r3
 411 006c 1946     		mov	r1, r3
 412 006e 7B68     		ldr	r3, [r7, #4]
 413 0070 1B68     		ldr	r3, [r3]
 414 0072 0A40     		ands	r2, r2, r1
 415 0074 1A60     		str	r2, [r3]
  38:../src/lpc_xav.cpp **** 	}
 416              		.loc 1 38 0
 417 0076 7B68     		ldr	r3, [r7, #4]
 418 0078 1B68     		ldr	r3, [r3]
 419 007a 1A68     		ldr	r2, [r3]
 420 007c B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 421 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 422 0080 5B00     		lsls	r3, r3, #1
 423 0082 01FA03F3 		lsl	r3, r1, r3
 424 0086 1946     		mov	r1, r3
 425 0088 7B68     		ldr	r3, [r7, #4]
 426 008a 1B68     		ldr	r3, [r3]
 427 008c 0A43     		orrs	r2, r2, r1
 428 008e 1A60     		str	r2, [r3]
 429              	.L15:
 430              		.loc 1 40 0
 431 0090 00BF     		nop
 432 0092 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 9


 433              		.cfi_def_cfa_offset 4
 434 0094 BD46     		mov	sp, r7
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 0096 80BC     		pop	{r7}
 438              		.cfi_restore 7
 439              		.cfi_def_cfa_offset 0
 440 0098 7047     		bx	lr
 441              		.cfi_endproc
 442              	.LFE322:
 444              		.section	.text._ZN4Port6SetDirEhh,"ax",%progbits
 445              		.align	1
 446              		.global	_ZN4Port6SetDirEhh
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu softvfp
 452              	_ZN4Port6SetDirEhh:
 453              	.LFB323:
  41:../src/lpc_xav.cpp **** 
  42:../src/lpc_xav.cpp **** void Port::SetDir(uint8_t PinNo, uint8_t Dir) // Set pin in input/ouput
  43:../src/lpc_xav.cpp **** {
 454              		.loc 1 43 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 8
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 7, -4
 462 0002 83B0     		sub	sp, sp, #12
 463              		.cfi_def_cfa_offset 16
 464 0004 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 466 0006 7860     		str	r0, [r7, #4]
 467 0008 0B46     		mov	r3, r1
 468 000a FB70     		strb	r3, [r7, #3]
 469 000c 1346     		mov	r3, r2
 470 000e BB70     		strb	r3, [r7, #2]
  44:../src/lpc_xav.cpp **** 	*_FIO &= ~(1 << PinNo);
 471              		.loc 1 44 0
 472 0010 7B68     		ldr	r3, [r7, #4]
 473 0012 5B68     		ldr	r3, [r3, #4]
 474 0014 1A68     		ldr	r2, [r3]
 475 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 476 0018 0121     		movs	r1, #1
 477 001a 01FA03F3 		lsl	r3, r1, r3
 478 001e DB43     		mvns	r3, r3
 479 0020 1946     		mov	r1, r3
 480 0022 7B68     		ldr	r3, [r7, #4]
 481 0024 5B68     		ldr	r3, [r3, #4]
 482 0026 0A40     		ands	r2, r2, r1
 483 0028 1A60     		str	r2, [r3]
  45:../src/lpc_xav.cpp **** 	*_FIO |= (Dir << PinNo);
 484              		.loc 1 45 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 10


 487 002e 1A68     		ldr	r2, [r3]
 488 0030 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 489 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 490 0034 01FA03F3 		lsl	r3, r1, r3
 491 0038 1946     		mov	r1, r3
 492 003a 7B68     		ldr	r3, [r7, #4]
 493 003c 5B68     		ldr	r3, [r3, #4]
 494 003e 0A43     		orrs	r2, r2, r1
 495 0040 1A60     		str	r2, [r3]
  46:../src/lpc_xav.cpp **** }
 496              		.loc 1 46 0
 497 0042 00BF     		nop
 498 0044 0C37     		adds	r7, r7, #12
 499              		.cfi_def_cfa_offset 4
 500 0046 BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 0048 80BC     		pop	{r7}
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 004a 7047     		bx	lr
 507              		.cfi_endproc
 508              	.LFE323:
 510              		.section	.text._ZN4Port7SetModeEhh,"ax",%progbits
 511              		.align	1
 512              		.global	_ZN4Port7SetModeEhh
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.fpu softvfp
 518              	_ZN4Port7SetModeEhh:
 519              	.LFB324:
  47:../src/lpc_xav.cpp **** 
  48:../src/lpc_xav.cpp **** void Port::SetMode(uint8_t PinNo, uint8_t Mode) // Set mode (float, p-up, p-down)
  49:../src/lpc_xav.cpp **** {
 520              		.loc 1 49 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 8
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 83B0     		sub	sp, sp, #12
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 533 0008 0B46     		mov	r3, r1
 534 000a FB70     		strb	r3, [r7, #3]
 535 000c 1346     		mov	r3, r2
 536 000e BB70     		strb	r3, [r7, #2]
  50:../src/lpc_xav.cpp **** 	if(PinNo > 15){
 537              		.loc 1 50 0
 538 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 539 0012 0F2B     		cmp	r3, #15
 540 0014 21D9     		bls	.L18
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 11


  51:../src/lpc_xav.cpp **** 		*(_PINCB + 17) &= ~(3 << ((PinNo-16)*2));
 541              		.loc 1 51 0
 542 0016 7B68     		ldr	r3, [r7, #4]
 543 0018 1B68     		ldr	r3, [r3]
 544 001a 4433     		adds	r3, r3, #68
 545 001c 1A68     		ldr	r2, [r3]
 546 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 547 0020 103B     		subs	r3, r3, #16
 548 0022 5B00     		lsls	r3, r3, #1
 549 0024 0321     		movs	r1, #3
 550 0026 01FA03F3 		lsl	r3, r1, r3
 551 002a DB43     		mvns	r3, r3
 552 002c 1946     		mov	r1, r3
 553 002e 7B68     		ldr	r3, [r7, #4]
 554 0030 1B68     		ldr	r3, [r3]
 555 0032 4433     		adds	r3, r3, #68
 556 0034 0A40     		ands	r2, r2, r1
 557 0036 1A60     		str	r2, [r3]
  52:../src/lpc_xav.cpp **** 		*(_PINCB + 17) |= (Mode << ((PinNo-16)*2));
 558              		.loc 1 52 0
 559 0038 7B68     		ldr	r3, [r7, #4]
 560 003a 1B68     		ldr	r3, [r3]
 561 003c 4433     		adds	r3, r3, #68
 562 003e 1A68     		ldr	r2, [r3]
 563 0040 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 564 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 565 0044 103B     		subs	r3, r3, #16
 566 0046 5B00     		lsls	r3, r3, #1
 567 0048 01FA03F3 		lsl	r3, r1, r3
 568 004c 1946     		mov	r1, r3
 569 004e 7B68     		ldr	r3, [r7, #4]
 570 0050 1B68     		ldr	r3, [r3]
 571 0052 4433     		adds	r3, r3, #68
 572 0054 0A43     		orrs	r2, r2, r1
 573 0056 1A60     		str	r2, [r3]
  53:../src/lpc_xav.cpp **** 	}
  54:../src/lpc_xav.cpp **** 	else{
  55:../src/lpc_xav.cpp **** 	*(_PINCB + 16) &= ~(3 << PinNo*2);
  56:../src/lpc_xav.cpp **** 	*(_PINCB + 16) |= (Mode << (PinNo*2));
  57:../src/lpc_xav.cpp **** 	}
  58:../src/lpc_xav.cpp **** }
 574              		.loc 1 58 0
 575 0058 1EE0     		b	.L20
 576              	.L18:
  55:../src/lpc_xav.cpp **** 	*(_PINCB + 16) |= (Mode << (PinNo*2));
 577              		.loc 1 55 0
 578 005a 7B68     		ldr	r3, [r7, #4]
 579 005c 1B68     		ldr	r3, [r3]
 580 005e 4033     		adds	r3, r3, #64
 581 0060 1A68     		ldr	r2, [r3]
 582 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 583 0064 5B00     		lsls	r3, r3, #1
 584 0066 0321     		movs	r1, #3
 585 0068 01FA03F3 		lsl	r3, r1, r3
 586 006c DB43     		mvns	r3, r3
 587 006e 1946     		mov	r1, r3
 588 0070 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 12


 589 0072 1B68     		ldr	r3, [r3]
 590 0074 4033     		adds	r3, r3, #64
 591 0076 0A40     		ands	r2, r2, r1
 592 0078 1A60     		str	r2, [r3]
  56:../src/lpc_xav.cpp **** 	}
 593              		.loc 1 56 0
 594 007a 7B68     		ldr	r3, [r7, #4]
 595 007c 1B68     		ldr	r3, [r3]
 596 007e 4033     		adds	r3, r3, #64
 597 0080 1A68     		ldr	r2, [r3]
 598 0082 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 599 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 600 0086 5B00     		lsls	r3, r3, #1
 601 0088 01FA03F3 		lsl	r3, r1, r3
 602 008c 1946     		mov	r1, r3
 603 008e 7B68     		ldr	r3, [r7, #4]
 604 0090 1B68     		ldr	r3, [r3]
 605 0092 4033     		adds	r3, r3, #64
 606 0094 0A43     		orrs	r2, r2, r1
 607 0096 1A60     		str	r2, [r3]
 608              	.L20:
 609              		.loc 1 58 0
 610 0098 00BF     		nop
 611 009a 0C37     		adds	r7, r7, #12
 612              		.cfi_def_cfa_offset 4
 613 009c BD46     		mov	sp, r7
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 009e 80BC     		pop	{r7}
 617              		.cfi_restore 7
 618              		.cfi_def_cfa_offset 0
 619 00a0 7047     		bx	lr
 620              		.cfi_endproc
 621              	.LFE324:
 623              		.section	.text._ZN4Port12SetOpenDrainEhh,"ax",%progbits
 624              		.align	1
 625              		.global	_ZN4Port12SetOpenDrainEhh
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu softvfp
 631              	_ZN4Port12SetOpenDrainEhh:
 632              	.LFB325:
  59:../src/lpc_xav.cpp **** 
  60:../src/lpc_xav.cpp **** void Port::SetOpenDrain(uint8_t PinNo, uint8_t Mode) // Enable open drain for pin
  61:../src/lpc_xav.cpp **** {
 633              		.loc 1 61 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 8
 636              		@ frame_needed = 1, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 638 0000 80B4     		push	{r7}
 639              		.cfi_def_cfa_offset 4
 640              		.cfi_offset 7, -4
 641 0002 83B0     		sub	sp, sp, #12
 642              		.cfi_def_cfa_offset 16
 643 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 13


 644              		.cfi_def_cfa_register 7
 645 0006 7860     		str	r0, [r7, #4]
 646 0008 0B46     		mov	r3, r1
 647 000a FB70     		strb	r3, [r7, #3]
 648 000c 1346     		mov	r3, r2
 649 000e BB70     		strb	r3, [r7, #2]
  62:../src/lpc_xav.cpp **** 	*_OD &= ~(1 << PinNo);
 650              		.loc 1 62 0
 651 0010 7B68     		ldr	r3, [r7, #4]
 652 0012 9B68     		ldr	r3, [r3, #8]
 653 0014 1A68     		ldr	r2, [r3]
 654 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 655 0018 0121     		movs	r1, #1
 656 001a 01FA03F3 		lsl	r3, r1, r3
 657 001e DB43     		mvns	r3, r3
 658 0020 1946     		mov	r1, r3
 659 0022 7B68     		ldr	r3, [r7, #4]
 660 0024 9B68     		ldr	r3, [r3, #8]
 661 0026 0A40     		ands	r2, r2, r1
 662 0028 1A60     		str	r2, [r3]
  63:../src/lpc_xav.cpp **** 	if(Mode == Open_Drain)
 663              		.loc 1 63 0
 664 002a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 665 002c 012B     		cmp	r3, #1
 666 002e 0BD1     		bne	.L23
  64:../src/lpc_xav.cpp **** 		*_OD |= (Mode << PinNo);
 667              		.loc 1 64 0
 668 0030 7B68     		ldr	r3, [r7, #4]
 669 0032 9B68     		ldr	r3, [r3, #8]
 670 0034 1A68     		ldr	r2, [r3]
 671 0036 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 672 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 673 003a 01FA03F3 		lsl	r3, r1, r3
 674 003e 1946     		mov	r1, r3
 675 0040 7B68     		ldr	r3, [r7, #4]
 676 0042 9B68     		ldr	r3, [r3, #8]
 677 0044 0A43     		orrs	r2, r2, r1
 678 0046 1A60     		str	r2, [r3]
 679              	.L23:
  65:../src/lpc_xav.cpp **** }
 680              		.loc 1 65 0
 681 0048 00BF     		nop
 682 004a 0C37     		adds	r7, r7, #12
 683              		.cfi_def_cfa_offset 4
 684 004c BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 004e 80BC     		pop	{r7}
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0050 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE325:
 694              		.section	.text._ZN4PortC2EPmS0_S0_,"ax",%progbits
 695              		.align	1
 696              		.global	_ZN4PortC2EPmS0_S0_
 697              		.syntax unified
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 14


 698              		.thumb
 699              		.thumb_func
 700              		.fpu softvfp
 702              	_ZN4PortC2EPmS0_S0_:
 703              	.LFB327:
  66:../src/lpc_xav.cpp **** 
  67:../src/lpc_xav.cpp **** Port::Port(	uint32_t* Pinsel_Add, // Constructor for LPC Port handles
 704              		.loc 1 67 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 16
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709 0000 80B4     		push	{r7}
 710              		.cfi_def_cfa_offset 4
 711              		.cfi_offset 7, -4
 712 0002 85B0     		sub	sp, sp, #20
 713              		.cfi_def_cfa_offset 24
 714 0004 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 716 0006 F860     		str	r0, [r7, #12]
 717 0008 B960     		str	r1, [r7, #8]
 718 000a 7A60     		str	r2, [r7, #4]
 719 000c 3B60     		str	r3, [r7]
 720              	.LBB2:
  68:../src/lpc_xav.cpp **** 		 	uint32_t* FastIO_Add,
  69:../src/lpc_xav.cpp **** 			uint32_t* OpenDrain_Add)
  70:../src/lpc_xav.cpp **** 		 :_PINCB(Pinsel_Add),
  71:../src/lpc_xav.cpp **** 		 _FIO(FastIO_Add),
  72:../src/lpc_xav.cpp **** 		 _OD(OpenDrain_Add)
 721              		.loc 1 72 0
 722 000e FB68     		ldr	r3, [r7, #12]
 723 0010 BA68     		ldr	r2, [r7, #8]
 724 0012 1A60     		str	r2, [r3]
 725 0014 FB68     		ldr	r3, [r7, #12]
 726 0016 7A68     		ldr	r2, [r7, #4]
 727 0018 5A60     		str	r2, [r3, #4]
 728 001a FB68     		ldr	r3, [r7, #12]
 729 001c 3A68     		ldr	r2, [r7]
 730 001e 9A60     		str	r2, [r3, #8]
 731              	.LBE2:
  73:../src/lpc_xav.cpp **** 	{}
 732              		.loc 1 73 0
 733 0020 FB68     		ldr	r3, [r7, #12]
 734 0022 1846     		mov	r0, r3
 735 0024 1437     		adds	r7, r7, #20
 736              		.cfi_def_cfa_offset 4
 737 0026 BD46     		mov	sp, r7
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0028 80BC     		pop	{r7}
 741              		.cfi_restore 7
 742              		.cfi_def_cfa_offset 0
 743 002a 7047     		bx	lr
 744              		.cfi_endproc
 745              	.LFE327:
 747              		.global	_ZN4PortC1EPmS0_S0_
 748              		.thumb_set _ZN4PortC1EPmS0_S0_,_ZN4PortC2EPmS0_S0_
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 15


 749              		.section	.text._ZN6LPC_IO3OutEb,"ax",%progbits
 750              		.align	1
 751              		.global	_ZN6LPC_IO3OutEb
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu softvfp
 757              	_ZN6LPC_IO3OutEb:
 758              	.LFB329:
  74:../src/lpc_xav.cpp **** /**************************************************************************************************
  75:../src/lpc_xav.cpp **** void LPC_IO::Out(bool State)
  76:../src/lpc_xav.cpp **** {
 759              		.loc 1 76 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 8
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 764 0000 80B4     		push	{r7}
 765              		.cfi_def_cfa_offset 4
 766              		.cfi_offset 7, -4
 767 0002 83B0     		sub	sp, sp, #12
 768              		.cfi_def_cfa_offset 16
 769 0004 00AF     		add	r7, sp, #0
 770              		.cfi_def_cfa_register 7
 771 0006 7860     		str	r0, [r7, #4]
 772 0008 0B46     		mov	r3, r1
 773 000a FB70     		strb	r3, [r7, #3]
  77:../src/lpc_xav.cpp **** 	if (State == 0)
 774              		.loc 1 77 0
 775 000c FB78     		ldrb	r3, [r7, #3]
 776 000e 83F00103 		eor	r3, r3, #1
 777 0012 DBB2     		uxtb	r3, r3
 778 0014 002B     		cmp	r3, #0
 779 0016 12D0     		beq	.L27
  78:../src/lpc_xav.cpp **** 		*(_Port._FIO + 5) &= ~(1 << Pin);
 780              		.loc 1 78 0
 781 0018 7B68     		ldr	r3, [r7, #4]
 782 001a 1B68     		ldr	r3, [r3]
 783 001c 5B68     		ldr	r3, [r3, #4]
 784 001e 1433     		adds	r3, r3, #20
 785 0020 1A68     		ldr	r2, [r3]
 786 0022 7B68     		ldr	r3, [r7, #4]
 787 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 788 0026 1946     		mov	r1, r3
 789 0028 0123     		movs	r3, #1
 790 002a 8B40     		lsls	r3, r3, r1
 791 002c DB43     		mvns	r3, r3
 792 002e 1946     		mov	r1, r3
 793 0030 7B68     		ldr	r3, [r7, #4]
 794 0032 1B68     		ldr	r3, [r3]
 795 0034 5B68     		ldr	r3, [r3, #4]
 796 0036 1433     		adds	r3, r3, #20
 797 0038 0A40     		ands	r2, r2, r1
 798 003a 1A60     		str	r2, [r3]
  79:../src/lpc_xav.cpp **** 	else
  80:../src/lpc_xav.cpp **** 		*(_Port._FIO + 5) |= (1 << Pin);
  81:../src/lpc_xav.cpp **** }
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 16


 799              		.loc 1 81 0
 800 003c 10E0     		b	.L29
 801              	.L27:
  80:../src/lpc_xav.cpp **** }
 802              		.loc 1 80 0
 803 003e 7B68     		ldr	r3, [r7, #4]
 804 0040 1B68     		ldr	r3, [r3]
 805 0042 5B68     		ldr	r3, [r3, #4]
 806 0044 1433     		adds	r3, r3, #20
 807 0046 1A68     		ldr	r2, [r3]
 808 0048 7B68     		ldr	r3, [r7, #4]
 809 004a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 810 004c 1946     		mov	r1, r3
 811 004e 0123     		movs	r3, #1
 812 0050 8B40     		lsls	r3, r3, r1
 813 0052 1946     		mov	r1, r3
 814 0054 7B68     		ldr	r3, [r7, #4]
 815 0056 1B68     		ldr	r3, [r3]
 816 0058 5B68     		ldr	r3, [r3, #4]
 817 005a 1433     		adds	r3, r3, #20
 818 005c 0A43     		orrs	r2, r2, r1
 819 005e 1A60     		str	r2, [r3]
 820              	.L29:
 821              		.loc 1 81 0
 822 0060 00BF     		nop
 823 0062 0C37     		adds	r7, r7, #12
 824              		.cfi_def_cfa_offset 4
 825 0064 BD46     		mov	sp, r7
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 0066 80BC     		pop	{r7}
 829              		.cfi_restore 7
 830              		.cfi_def_cfa_offset 0
 831 0068 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE329:
 835              		.section	.text._ZN6LPC_IO3SetEv,"ax",%progbits
 836              		.align	1
 837              		.global	_ZN6LPC_IO3SetEv
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 841              		.fpu softvfp
 843              	_ZN6LPC_IO3SetEv:
 844              	.LFB330:
  82:../src/lpc_xav.cpp **** 
  83:../src/lpc_xav.cpp **** void LPC_IO::Set()
  84:../src/lpc_xav.cpp **** {
 845              		.loc 1 84 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 8
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850 0000 80B4     		push	{r7}
 851              		.cfi_def_cfa_offset 4
 852              		.cfi_offset 7, -4
 853 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 17


 854              		.cfi_def_cfa_offset 16
 855 0004 00AF     		add	r7, sp, #0
 856              		.cfi_def_cfa_register 7
 857 0006 7860     		str	r0, [r7, #4]
  85:../src/lpc_xav.cpp **** 	*(_Port._FIO + 6) |= (1 << Pin);
 858              		.loc 1 85 0
 859 0008 7B68     		ldr	r3, [r7, #4]
 860 000a 1B68     		ldr	r3, [r3]
 861 000c 5B68     		ldr	r3, [r3, #4]
 862 000e 1833     		adds	r3, r3, #24
 863 0010 1A68     		ldr	r2, [r3]
 864 0012 7B68     		ldr	r3, [r7, #4]
 865 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 866 0016 1946     		mov	r1, r3
 867 0018 0123     		movs	r3, #1
 868 001a 8B40     		lsls	r3, r3, r1
 869 001c 1946     		mov	r1, r3
 870 001e 7B68     		ldr	r3, [r7, #4]
 871 0020 1B68     		ldr	r3, [r3]
 872 0022 5B68     		ldr	r3, [r3, #4]
 873 0024 1833     		adds	r3, r3, #24
 874 0026 0A43     		orrs	r2, r2, r1
 875 0028 1A60     		str	r2, [r3]
  86:../src/lpc_xav.cpp **** }
 876              		.loc 1 86 0
 877 002a 00BF     		nop
 878 002c 0C37     		adds	r7, r7, #12
 879              		.cfi_def_cfa_offset 4
 880 002e BD46     		mov	sp, r7
 881              		.cfi_def_cfa_register 13
 882              		@ sp needed
 883 0030 80BC     		pop	{r7}
 884              		.cfi_restore 7
 885              		.cfi_def_cfa_offset 0
 886 0032 7047     		bx	lr
 887              		.cfi_endproc
 888              	.LFE330:
 890              		.section	.text._ZN6LPC_IO5ClearEv,"ax",%progbits
 891              		.align	1
 892              		.global	_ZN6LPC_IO5ClearEv
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu softvfp
 898              	_ZN6LPC_IO5ClearEv:
 899              	.LFB331:
  87:../src/lpc_xav.cpp **** 
  88:../src/lpc_xav.cpp **** void LPC_IO::Clear()
  89:../src/lpc_xav.cpp **** {
 900              		.loc 1 89 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 8
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905 0000 80B4     		push	{r7}
 906              		.cfi_def_cfa_offset 4
 907              		.cfi_offset 7, -4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 18


 908 0002 83B0     		sub	sp, sp, #12
 909              		.cfi_def_cfa_offset 16
 910 0004 00AF     		add	r7, sp, #0
 911              		.cfi_def_cfa_register 7
 912 0006 7860     		str	r0, [r7, #4]
  90:../src/lpc_xav.cpp **** 	*(_Port._FIO + 7) |= (1 << Pin);
 913              		.loc 1 90 0
 914 0008 7B68     		ldr	r3, [r7, #4]
 915 000a 1B68     		ldr	r3, [r3]
 916 000c 5B68     		ldr	r3, [r3, #4]
 917 000e 1C33     		adds	r3, r3, #28
 918 0010 1A68     		ldr	r2, [r3]
 919 0012 7B68     		ldr	r3, [r7, #4]
 920 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 921 0016 1946     		mov	r1, r3
 922 0018 0123     		movs	r3, #1
 923 001a 8B40     		lsls	r3, r3, r1
 924 001c 1946     		mov	r1, r3
 925 001e 7B68     		ldr	r3, [r7, #4]
 926 0020 1B68     		ldr	r3, [r3]
 927 0022 5B68     		ldr	r3, [r3, #4]
 928 0024 1C33     		adds	r3, r3, #28
 929 0026 0A43     		orrs	r2, r2, r1
 930 0028 1A60     		str	r2, [r3]
  91:../src/lpc_xav.cpp **** }
 931              		.loc 1 91 0
 932 002a 00BF     		nop
 933 002c 0C37     		adds	r7, r7, #12
 934              		.cfi_def_cfa_offset 4
 935 002e BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 0030 80BC     		pop	{r7}
 939              		.cfi_restore 7
 940              		.cfi_def_cfa_offset 0
 941 0032 7047     		bx	lr
 942              		.cfi_endproc
 943              	.LFE331:
 945              		.section	.text._ZN6LPC_IOC2ER4Porthhhhh,"ax",%progbits
 946              		.align	1
 947              		.global	_ZN6LPC_IOC2ER4Porthhhhh
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 951              		.fpu softvfp
 953              	_ZN6LPC_IOC2ER4Porthhhhh:
 954              	.LFB333:
  92:../src/lpc_xav.cpp **** 
  93:../src/lpc_xav.cpp **** LPC_IO::LPC_IO(	Port& RefPort,
 955              		.loc 1 93 0
 956              		.cfi_startproc
 957              		@ args = 12, pretend = 0, frame = 16
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 19


 963 0002 84B0     		sub	sp, sp, #16
 964              		.cfi_def_cfa_offset 24
 965 0004 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 967 0006 F860     		str	r0, [r7, #12]
 968 0008 B960     		str	r1, [r7, #8]
 969 000a 1146     		mov	r1, r2
 970 000c 1A46     		mov	r2, r3
 971 000e 0B46     		mov	r3, r1
 972 0010 FB71     		strb	r3, [r7, #7]
 973 0012 1346     		mov	r3, r2
 974 0014 BB71     		strb	r3, [r7, #6]
 975              	.LBB3:
  94:../src/lpc_xav.cpp **** 				uint8_t PinNo,
  95:../src/lpc_xav.cpp **** 				uint8_t Fct,
  96:../src/lpc_xav.cpp **** 				uint8_t Dir,
  97:../src/lpc_xav.cpp **** 				uint8_t Md,
  98:../src/lpc_xav.cpp **** 				uint8_t OD)
  99:../src/lpc_xav.cpp **** 	:_Port(RefPort),
 100:../src/lpc_xav.cpp **** 	 Pin(PinNo),
 101:../src/lpc_xav.cpp **** 	 Function(Fct),
 102:../src/lpc_xav.cpp **** 	 Direction(Dir),
 103:../src/lpc_xav.cpp **** 	 Mode(Md),
 104:../src/lpc_xav.cpp **** 	 OD_Mode(OD)
 976              		.loc 1 104 0
 977 0016 FB68     		ldr	r3, [r7, #12]
 978 0018 BA68     		ldr	r2, [r7, #8]
 979 001a 1A60     		str	r2, [r3]
 980 001c FB68     		ldr	r3, [r7, #12]
 981 001e FA79     		ldrb	r2, [r7, #7]
 982 0020 1A71     		strb	r2, [r3, #4]
 983 0022 FB68     		ldr	r3, [r7, #12]
 984 0024 BA79     		ldrb	r2, [r7, #6]
 985 0026 5A71     		strb	r2, [r3, #5]
 986 0028 FB68     		ldr	r3, [r7, #12]
 987 002a 3A7E     		ldrb	r2, [r7, #24]
 988 002c 9A71     		strb	r2, [r3, #6]
 989 002e FB68     		ldr	r3, [r7, #12]
 990 0030 3A7F     		ldrb	r2, [r7, #28]
 991 0032 DA71     		strb	r2, [r3, #7]
 992 0034 FB68     		ldr	r3, [r7, #12]
 993 0036 97F82020 		ldrb	r2, [r7, #32]
 994 003a 1A72     		strb	r2, [r3, #8]
 105:../src/lpc_xav.cpp **** {
 106:../src/lpc_xav.cpp **** 	_Port.SetFct(Pin, Function);
 995              		.loc 1 106 0
 996 003c FB68     		ldr	r3, [r7, #12]
 997 003e 1868     		ldr	r0, [r3]
 998 0040 FB68     		ldr	r3, [r7, #12]
 999 0042 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1000 0044 FB68     		ldr	r3, [r7, #12]
 1001 0046 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1002 0048 1A46     		mov	r2, r3
 1003 004a FFF7FEFF 		bl	_ZN4Port6SetFctEhh
 107:../src/lpc_xav.cpp **** 
 108:../src/lpc_xav.cpp **** 	if(Function == GPIO)
 1004              		.loc 1 108 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 20


 1005 004e FB68     		ldr	r3, [r7, #12]
 1006 0050 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1007 0052 002B     		cmp	r3, #0
 1008 0054 08D1     		bne	.L33
 109:../src/lpc_xav.cpp **** 		_Port.SetDir(Pin, Direction);
 1009              		.loc 1 109 0
 1010 0056 FB68     		ldr	r3, [r7, #12]
 1011 0058 1868     		ldr	r0, [r3]
 1012 005a FB68     		ldr	r3, [r7, #12]
 1013 005c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1014 005e FB68     		ldr	r3, [r7, #12]
 1015 0060 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1016 0062 1A46     		mov	r2, r3
 1017 0064 FFF7FEFF 		bl	_ZN4Port6SetDirEhh
 1018              	.L33:
 110:../src/lpc_xav.cpp **** 
 111:../src/lpc_xav.cpp **** 	if(Direction == IN)
 1019              		.loc 1 111 0
 1020 0068 FB68     		ldr	r3, [r7, #12]
 1021 006a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1022 006c 002B     		cmp	r3, #0
 1023 006e 08D1     		bne	.L34
 112:../src/lpc_xav.cpp **** 		_Port.SetMode(Pin, Mode);
 1024              		.loc 1 112 0
 1025 0070 FB68     		ldr	r3, [r7, #12]
 1026 0072 1868     		ldr	r0, [r3]
 1027 0074 FB68     		ldr	r3, [r7, #12]
 1028 0076 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1029 0078 FB68     		ldr	r3, [r7, #12]
 1030 007a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1031 007c 1A46     		mov	r2, r3
 1032 007e FFF7FEFF 		bl	_ZN4Port7SetModeEhh
 1033              	.L34:
 113:../src/lpc_xav.cpp **** 
 114:../src/lpc_xav.cpp **** 	_Port.SetOpenDrain(Pin, OD);
 1034              		.loc 1 114 0
 1035 0082 FB68     		ldr	r3, [r7, #12]
 1036 0084 1868     		ldr	r0, [r3]
 1037 0086 FB68     		ldr	r3, [r7, #12]
 1038 0088 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1039 008a 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1040 008e 1946     		mov	r1, r3
 1041 0090 FFF7FEFF 		bl	_ZN4Port12SetOpenDrainEhh
 1042              	.LBE3:
 115:../src/lpc_xav.cpp **** 
 116:../src/lpc_xav.cpp **** }
 1043              		.loc 1 116 0
 1044 0094 FB68     		ldr	r3, [r7, #12]
 1045 0096 1846     		mov	r0, r3
 1046 0098 1037     		adds	r7, r7, #16
 1047              		.cfi_def_cfa_offset 8
 1048 009a BD46     		mov	sp, r7
 1049              		.cfi_def_cfa_register 13
 1050              		@ sp needed
 1051 009c 80BD     		pop	{r7, pc}
 1052              		.cfi_endproc
 1053              	.LFE333:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 21


 1055              		.global	_ZN6LPC_IOC1ER4Porthhhhh
 1056              		.thumb_set _ZN6LPC_IOC1ER4Porthhhhh,_ZN6LPC_IOC2ER4Porthhhhh
 1057              		.section	.text._ZN3Bus12Change_ValueEh,"ax",%progbits
 1058              		.align	1
 1059              		.global	_ZN3Bus12Change_ValueEh
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	_ZN3Bus12Change_ValueEh:
 1066              	.LFB335:
 117:../src/lpc_xav.cpp **** /**************************************************************************************************
 118:../src/lpc_xav.cpp **** void Bus::Change_Value(uint8_t bus_value)
 119:../src/lpc_xav.cpp **** {
 1067              		.loc 1 119 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 16
 1070              		@ frame_needed = 1, uses_anonymous_args = 0
 1071 0000 80B5     		push	{r7, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 84B0     		sub	sp, sp, #16
 1076              		.cfi_def_cfa_offset 24
 1077 0004 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
 1080 0008 0B46     		mov	r3, r1
 1081 000a FB70     		strb	r3, [r7, #3]
 120:../src/lpc_xav.cpp **** 	Value = bus_value;
 1082              		.loc 1 120 0
 1083 000c 7B68     		ldr	r3, [r7, #4]
 1084 000e FA78     		ldrb	r2, [r7, #3]
 1085 0010 83F82020 		strb	r2, [r3, #32]
 1086              	.LBB4:
 121:../src/lpc_xav.cpp **** 	for(int i = 0; Bits[i] != nullptr && i < 8; i++)
 1087              		.loc 1 121 0
 1088 0014 0023     		movs	r3, #0
 1089 0016 FB60     		str	r3, [r7, #12]
 1090              	.L38:
 1091              		.loc 1 121 0 is_stmt 0 discriminator 4
 1092 0018 7B68     		ldr	r3, [r7, #4]
 1093 001a FA68     		ldr	r2, [r7, #12]
 1094 001c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1095 0020 002B     		cmp	r3, #0
 1096 0022 18D0     		beq	.L39
 1097              		.loc 1 121 0 discriminator 2
 1098 0024 FB68     		ldr	r3, [r7, #12]
 1099 0026 072B     		cmp	r3, #7
 1100 0028 15DC     		bgt	.L39
 122:../src/lpc_xav.cpp **** 		Bits[i]->Out((bus_value >> i) & 0x1);
 1101              		.loc 1 122 0 is_stmt 1 discriminator 3
 1102 002a 7B68     		ldr	r3, [r7, #4]
 1103 002c FA68     		ldr	r2, [r7, #12]
 1104 002e 53F82200 		ldr	r0, [r3, r2, lsl #2]
 1105 0032 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1106 0034 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 22


 1107 0036 42FA03F3 		asr	r3, r2, r3
 1108 003a 03F00103 		and	r3, r3, #1
 1109 003e 002B     		cmp	r3, #0
 1110 0040 14BF     		ite	ne
 1111 0042 0123     		movne	r3, #1
 1112 0044 0023     		moveq	r3, #0
 1113 0046 DBB2     		uxtb	r3, r3
 1114 0048 1946     		mov	r1, r3
 1115 004a FFF7FEFF 		bl	_ZN6LPC_IO3OutEb
 121:../src/lpc_xav.cpp **** 	for(int i = 0; Bits[i] != nullptr && i < 8; i++)
 1116              		.loc 1 121 0 discriminator 3
 1117 004e FB68     		ldr	r3, [r7, #12]
 1118 0050 0133     		adds	r3, r3, #1
 1119 0052 FB60     		str	r3, [r7, #12]
 1120 0054 E0E7     		b	.L38
 1121              	.L39:
 1122              	.LBE4:
 123:../src/lpc_xav.cpp **** }
 1123              		.loc 1 123 0
 1124 0056 00BF     		nop
 1125 0058 1037     		adds	r7, r7, #16
 1126              		.cfi_def_cfa_offset 8
 1127 005a BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 005c 80BD     		pop	{r7, pc}
 1131              		.cfi_endproc
 1132              	.LFE335:
 1134              		.section	.text._ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_,"ax",%progbits
 1135              		.align	1
 1136              		.global	_ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1140              		.fpu softvfp
 1142              	_ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_:
 1143              	.LFB337:
 124:../src/lpc_xav.cpp **** 
 125:../src/lpc_xav.cpp **** Bus::Bus(LPC_IO* LSB, LPC_IO* B1, LPC_IO* B2, LPC_IO* B3,
 1144              		.loc 1 125 0
 1145              		.cfi_startproc
 1146              		@ args = 20, pretend = 0, frame = 16
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 1149 0000 80B4     		push	{r7}
 1150              		.cfi_def_cfa_offset 4
 1151              		.cfi_offset 7, -4
 1152 0002 85B0     		sub	sp, sp, #20
 1153              		.cfi_def_cfa_offset 24
 1154 0004 00AF     		add	r7, sp, #0
 1155              		.cfi_def_cfa_register 7
 1156 0006 F860     		str	r0, [r7, #12]
 1157 0008 B960     		str	r1, [r7, #8]
 1158 000a 7A60     		str	r2, [r7, #4]
 1159 000c 3B60     		str	r3, [r7]
 1160              	.LBB5:
 126:../src/lpc_xav.cpp **** 		LPC_IO* B4, LPC_IO* B5, LPC_IO* B6, LPC_IO* MSB)
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 23


 127:../src/lpc_xav.cpp **** {
 128:../src/lpc_xav.cpp **** 	Bits[0] = LSB;
 1161              		.loc 1 128 0
 1162 000e FB68     		ldr	r3, [r7, #12]
 1163 0010 BA68     		ldr	r2, [r7, #8]
 1164 0012 1A60     		str	r2, [r3]
 129:../src/lpc_xav.cpp **** 	Bits[1] = B1;
 1165              		.loc 1 129 0
 1166 0014 FB68     		ldr	r3, [r7, #12]
 1167 0016 7A68     		ldr	r2, [r7, #4]
 1168 0018 5A60     		str	r2, [r3, #4]
 130:../src/lpc_xav.cpp **** 	Bits[2] = B2;
 1169              		.loc 1 130 0
 1170 001a FB68     		ldr	r3, [r7, #12]
 1171 001c 3A68     		ldr	r2, [r7]
 1172 001e 9A60     		str	r2, [r3, #8]
 131:../src/lpc_xav.cpp **** 	Bits[3] = B3;
 1173              		.loc 1 131 0
 1174 0020 FB68     		ldr	r3, [r7, #12]
 1175 0022 BA69     		ldr	r2, [r7, #24]
 1176 0024 DA60     		str	r2, [r3, #12]
 132:../src/lpc_xav.cpp **** 	Bits[4] = B4;
 1177              		.loc 1 132 0
 1178 0026 FB68     		ldr	r3, [r7, #12]
 1179 0028 FA69     		ldr	r2, [r7, #28]
 1180 002a 1A61     		str	r2, [r3, #16]
 133:../src/lpc_xav.cpp **** 	Bits[5] = B5;
 1181              		.loc 1 133 0
 1182 002c FB68     		ldr	r3, [r7, #12]
 1183 002e 3A6A     		ldr	r2, [r7, #32]
 1184 0030 5A61     		str	r2, [r3, #20]
 134:../src/lpc_xav.cpp **** 	Bits[6] = B6;
 1185              		.loc 1 134 0
 1186 0032 FB68     		ldr	r3, [r7, #12]
 1187 0034 7A6A     		ldr	r2, [r7, #36]
 1188 0036 9A61     		str	r2, [r3, #24]
 135:../src/lpc_xav.cpp **** 	Bits[7] = MSB;
 1189              		.loc 1 135 0
 1190 0038 FB68     		ldr	r3, [r7, #12]
 1191 003a BA6A     		ldr	r2, [r7, #40]
 1192 003c DA61     		str	r2, [r3, #28]
 136:../src/lpc_xav.cpp **** 
 137:../src/lpc_xav.cpp **** 	Value = 0;
 1193              		.loc 1 137 0
 1194 003e FB68     		ldr	r3, [r7, #12]
 1195 0040 0022     		movs	r2, #0
 1196 0042 83F82020 		strb	r2, [r3, #32]
 1197              	.LBE5:
 138:../src/lpc_xav.cpp **** }
 1198              		.loc 1 138 0
 1199 0046 FB68     		ldr	r3, [r7, #12]
 1200 0048 1846     		mov	r0, r3
 1201 004a 1437     		adds	r7, r7, #20
 1202              		.cfi_def_cfa_offset 4
 1203 004c BD46     		mov	sp, r7
 1204              		.cfi_def_cfa_register 13
 1205              		@ sp needed
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 24


 1206 004e 80BC     		pop	{r7}
 1207              		.cfi_restore 7
 1208              		.cfi_def_cfa_offset 0
 1209 0050 7047     		bx	lr
 1210              		.cfi_endproc
 1211              	.LFE337:
 1213              		.global	_ZN3BusC1EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_
 1214              		.thumb_set _ZN3BusC1EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_,_ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_
 1215              		.section	.text._ZN5Timer4InitEh,"ax",%progbits
 1216              		.align	1
 1217              		.global	_ZN5Timer4InitEh
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1221              		.fpu softvfp
 1223              	_ZN5Timer4InitEh:
 1224              	.LFB339:
 139:../src/lpc_xav.cpp **** /**************************************************************************************************
 140:../src/lpc_xav.cpp **** void Timer::Init(uint8_t Clk_Speed)
 141:../src/lpc_xav.cpp **** {
 1225              		.loc 1 141 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 8
 1228              		@ frame_needed = 1, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 1230 0000 80B4     		push	{r7}
 1231              		.cfi_def_cfa_offset 4
 1232              		.cfi_offset 7, -4
 1233 0002 83B0     		sub	sp, sp, #12
 1234              		.cfi_def_cfa_offset 16
 1235 0004 00AF     		add	r7, sp, #0
 1236              		.cfi_def_cfa_register 7
 1237 0006 7860     		str	r0, [r7, #4]
 1238 0008 0B46     		mov	r3, r1
 1239 000a FB70     		strb	r3, [r7, #3]
 142:../src/lpc_xav.cpp **** 	PCONP |= (1 << Pwr_bit);
 1240              		.loc 1 142 0
 1241 000c 224B     		ldr	r3, .L46
 1242 000e 1B68     		ldr	r3, [r3]
 1243 0010 7A68     		ldr	r2, [r7, #4]
 1244 0012 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 1245 0014 1146     		mov	r1, r2
 1246 0016 0122     		movs	r2, #1
 1247 0018 8A40     		lsls	r2, r2, r1
 1248 001a 1146     		mov	r1, r2
 1249 001c 1E4A     		ldr	r2, .L46
 1250 001e 0B43     		orrs	r3, r3, r1
 1251 0020 1360     		str	r3, [r2]
 143:../src/lpc_xav.cpp **** 
 144:../src/lpc_xav.cpp **** 	*(_Periph + 1) = 1; // Set counter enable bit in TCR
 1252              		.loc 1 144 0
 1253 0022 7B68     		ldr	r3, [r7, #4]
 1254 0024 1B68     		ldr	r3, [r3]
 1255 0026 0433     		adds	r3, r3, #4
 1256 0028 0122     		movs	r2, #1
 1257 002a 1A60     		str	r2, [r3]
 145:../src/lpc_xav.cpp **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 25


 146:../src/lpc_xav.cpp **** 	if(IRQ_bit < 3){ // Set clock speed for corresponding timer
 1258              		.loc 1 146 0
 1259 002c 7B68     		ldr	r3, [r7, #4]
 1260 002e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1261 0030 022B     		cmp	r3, #2
 1262 0032 16D8     		bhi	.L43
 147:../src/lpc_xav.cpp **** 		PCLKSEL0 &= ~(3 << Clk_bit);
 1263              		.loc 1 147 0
 1264 0034 194B     		ldr	r3, .L46+4
 1265 0036 1B68     		ldr	r3, [r3]
 1266 0038 7A68     		ldr	r2, [r7, #4]
 1267 003a 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 1268 003c 1146     		mov	r1, r2
 1269 003e 0322     		movs	r2, #3
 1270 0040 8A40     		lsls	r2, r2, r1
 1271 0042 D243     		mvns	r2, r2
 1272 0044 1146     		mov	r1, r2
 1273 0046 154A     		ldr	r2, .L46+4
 1274 0048 0B40     		ands	r3, r3, r1
 1275 004a 1360     		str	r3, [r2]
 148:../src/lpc_xav.cpp **** 		PCLKSEL0 |= (Clk_Speed << Clk_bit);
 1276              		.loc 1 148 0
 1277 004c 134B     		ldr	r3, .L46+4
 1278 004e 1B68     		ldr	r3, [r3]
 1279 0050 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1280 0052 7968     		ldr	r1, [r7, #4]
 1281 0054 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1282 0056 8A40     		lsls	r2, r2, r1
 1283 0058 1146     		mov	r1, r2
 1284 005a 104A     		ldr	r2, .L46+4
 1285 005c 0B43     		orrs	r3, r3, r1
 1286 005e 1360     		str	r3, [r2]
 149:../src/lpc_xav.cpp **** 	}
 150:../src/lpc_xav.cpp **** 	else{
 151:../src/lpc_xav.cpp **** 		PCLKSEL1 &= ~(3 << Clk_bit);
 152:../src/lpc_xav.cpp **** 		PCLKSEL1 |= (Clk_Speed << Clk_bit);
 153:../src/lpc_xav.cpp **** 	}
 154:../src/lpc_xav.cpp **** }
 1287              		.loc 1 154 0
 1288 0060 15E0     		b	.L45
 1289              	.L43:
 151:../src/lpc_xav.cpp **** 		PCLKSEL1 |= (Clk_Speed << Clk_bit);
 1290              		.loc 1 151 0
 1291 0062 0F4B     		ldr	r3, .L46+8
 1292 0064 1B68     		ldr	r3, [r3]
 1293 0066 7A68     		ldr	r2, [r7, #4]
 1294 0068 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 1295 006a 1146     		mov	r1, r2
 1296 006c 0322     		movs	r2, #3
 1297 006e 8A40     		lsls	r2, r2, r1
 1298 0070 D243     		mvns	r2, r2
 1299 0072 1146     		mov	r1, r2
 1300 0074 0A4A     		ldr	r2, .L46+8
 1301 0076 0B40     		ands	r3, r3, r1
 1302 0078 1360     		str	r3, [r2]
 152:../src/lpc_xav.cpp **** 	}
 1303              		.loc 1 152 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 26


 1304 007a 094B     		ldr	r3, .L46+8
 1305 007c 1B68     		ldr	r3, [r3]
 1306 007e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1307 0080 7968     		ldr	r1, [r7, #4]
 1308 0082 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1309 0084 8A40     		lsls	r2, r2, r1
 1310 0086 1146     		mov	r1, r2
 1311 0088 054A     		ldr	r2, .L46+8
 1312 008a 0B43     		orrs	r3, r3, r1
 1313 008c 1360     		str	r3, [r2]
 1314              	.L45:
 1315              		.loc 1 154 0
 1316 008e 00BF     		nop
 1317 0090 0C37     		adds	r7, r7, #12
 1318              		.cfi_def_cfa_offset 4
 1319 0092 BD46     		mov	sp, r7
 1320              		.cfi_def_cfa_register 13
 1321              		@ sp needed
 1322 0094 80BC     		pop	{r7}
 1323              		.cfi_restore 7
 1324              		.cfi_def_cfa_offset 0
 1325 0096 7047     		bx	lr
 1326              	.L47:
 1327              		.align	2
 1328              	.L46:
 1329 0098 C4C00F40 		.word	1074774212
 1330 009c A8C10F40 		.word	1074774440
 1331 00a0 ACC10F40 		.word	1074774444
 1332              		.cfi_endproc
 1333              	.LFE339:
 1335              		.section	.text._ZN5Timer14Enable_CounterEhh,"ax",%progbits
 1336              		.align	1
 1337              		.global	_ZN5Timer14Enable_CounterEhh
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu softvfp
 1343              	_ZN5Timer14Enable_CounterEhh:
 1344              	.LFB340:
 155:../src/lpc_xav.cpp **** 
 156:../src/lpc_xav.cpp **** void Timer::Enable_Counter(uint8_t Channel, uint8_t Edge_Mode)
 157:../src/lpc_xav.cpp **** {
 1345              		.loc 1 157 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 8
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
 1349              		@ link register save eliminated.
 1350 0000 80B4     		push	{r7}
 1351              		.cfi_def_cfa_offset 4
 1352              		.cfi_offset 7, -4
 1353 0002 83B0     		sub	sp, sp, #12
 1354              		.cfi_def_cfa_offset 16
 1355 0004 00AF     		add	r7, sp, #0
 1356              		.cfi_def_cfa_register 7
 1357 0006 7860     		str	r0, [r7, #4]
 1358 0008 0B46     		mov	r3, r1
 1359 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 27


 1360 000c 1346     		mov	r3, r2
 1361 000e BB70     		strb	r3, [r7, #2]
 158:../src/lpc_xav.cpp **** 	*(_Periph + 14) = (Edge_Mode + 1); // Enable counter mode (incremented on CAP pin
 1362              		.loc 1 158 0
 1363 0010 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1364 0012 5A1C     		adds	r2, r3, #1
 1365 0014 7B68     		ldr	r3, [r7, #4]
 1366 0016 1B68     		ldr	r3, [r3]
 1367 0018 3833     		adds	r3, r3, #56
 1368 001a 1A60     		str	r2, [r3]
 159:../src/lpc_xav.cpp **** 	*(_Periph + 14) |= (Channel << 2); // edges)
 1369              		.loc 1 159 0
 1370 001c 7B68     		ldr	r3, [r7, #4]
 1371 001e 1B68     		ldr	r3, [r3]
 1372 0020 3833     		adds	r3, r3, #56
 1373 0022 1A68     		ldr	r2, [r3]
 1374 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1375 0026 9B00     		lsls	r3, r3, #2
 1376 0028 1946     		mov	r1, r3
 1377 002a 7B68     		ldr	r3, [r7, #4]
 1378 002c 1B68     		ldr	r3, [r3]
 1379 002e 3833     		adds	r3, r3, #56
 1380 0030 0A43     		orrs	r2, r2, r1
 1381 0032 1A60     		str	r2, [r3]
 160:../src/lpc_xav.cpp **** }
 1382              		.loc 1 160 0
 1383 0034 00BF     		nop
 1384 0036 0C37     		adds	r7, r7, #12
 1385              		.cfi_def_cfa_offset 4
 1386 0038 BD46     		mov	sp, r7
 1387              		.cfi_def_cfa_register 13
 1388              		@ sp needed
 1389 003a 80BC     		pop	{r7}
 1390              		.cfi_restore 7
 1391              		.cfi_def_cfa_offset 0
 1392 003c 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE340:
 1396              		.section	.text._ZN5Timer14Enable_CaptureEhh,"ax",%progbits
 1397              		.align	1
 1398              		.global	_ZN5Timer14Enable_CaptureEhh
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1402              		.fpu softvfp
 1404              	_ZN5Timer14Enable_CaptureEhh:
 1405              	.LFB341:
 161:../src/lpc_xav.cpp **** 
 162:../src/lpc_xav.cpp **** void Timer::Enable_Capture(uint8_t Channel, uint8_t Edge_Mode)
 163:../src/lpc_xav.cpp **** {
 1406              		.loc 1 163 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 8
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
 1411 0000 80B4     		push	{r7}
 1412              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 28


 1413              		.cfi_offset 7, -4
 1414 0002 83B0     		sub	sp, sp, #12
 1415              		.cfi_def_cfa_offset 16
 1416 0004 00AF     		add	r7, sp, #0
 1417              		.cfi_def_cfa_register 7
 1418 0006 7860     		str	r0, [r7, #4]
 1419 0008 0B46     		mov	r3, r1
 1420 000a FB70     		strb	r3, [r7, #3]
 1421 000c 1346     		mov	r3, r2
 1422 000e BB70     		strb	r3, [r7, #2]
 164:../src/lpc_xav.cpp **** 	*(_Periph + 10) &= ~(0x3 << (Channel * 3)); // Set CAPxRE or CAPxFE in CCR
 1423              		.loc 1 164 0
 1424 0010 7B68     		ldr	r3, [r7, #4]
 1425 0012 1B68     		ldr	r3, [r3]
 1426 0014 2833     		adds	r3, r3, #40
 1427 0016 1968     		ldr	r1, [r3]
 1428 0018 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1429 001a 1346     		mov	r3, r2
 1430 001c 5B00     		lsls	r3, r3, #1
 1431 001e 1344     		add	r3, r3, r2
 1432 0020 0322     		movs	r2, #3
 1433 0022 02FA03F3 		lsl	r3, r2, r3
 1434 0026 DB43     		mvns	r3, r3
 1435 0028 1A46     		mov	r2, r3
 1436 002a 7B68     		ldr	r3, [r7, #4]
 1437 002c 1B68     		ldr	r3, [r3]
 1438 002e 2833     		adds	r3, r3, #40
 1439 0030 0A40     		ands	r2, r2, r1
 1440 0032 1A60     		str	r2, [r3]
 165:../src/lpc_xav.cpp **** 	*(_Periph + 10) |= (Edge_Mode << (Channel * 3)); // for corresponding channel
 1441              		.loc 1 165 0
 1442 0034 7B68     		ldr	r3, [r7, #4]
 1443 0036 1B68     		ldr	r3, [r3]
 1444 0038 2833     		adds	r3, r3, #40
 1445 003a 1968     		ldr	r1, [r3]
 1446 003c B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 1447 003e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1448 0040 1346     		mov	r3, r2
 1449 0042 5B00     		lsls	r3, r3, #1
 1450 0044 1344     		add	r3, r3, r2
 1451 0046 00FA03F3 		lsl	r3, r0, r3
 1452 004a 1A46     		mov	r2, r3
 1453 004c 7B68     		ldr	r3, [r7, #4]
 1454 004e 1B68     		ldr	r3, [r3]
 1455 0050 2833     		adds	r3, r3, #40
 1456 0052 0A43     		orrs	r2, r2, r1
 1457 0054 1A60     		str	r2, [r3]
 166:../src/lpc_xav.cpp **** 
 167:../src/lpc_xav.cpp **** 	Edge_Sel[Channel] = Edge_Mode;
 1458              		.loc 1 167 0
 1459 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1460 0058 7A68     		ldr	r2, [r7, #4]
 1461 005a 1344     		add	r3, r3, r2
 1462 005c BA78     		ldrb	r2, [r7, #2]
 1463 005e DA71     		strb	r2, [r3, #7]
 168:../src/lpc_xav.cpp **** }
 1464              		.loc 1 168 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 29


 1465 0060 00BF     		nop
 1466 0062 0C37     		adds	r7, r7, #12
 1467              		.cfi_def_cfa_offset 4
 1468 0064 BD46     		mov	sp, r7
 1469              		.cfi_def_cfa_register 13
 1470              		@ sp needed
 1471 0066 80BC     		pop	{r7}
 1472              		.cfi_restore 7
 1473              		.cfi_def_cfa_offset 0
 1474 0068 7047     		bx	lr
 1475              		.cfi_endproc
 1476              	.LFE341:
 1478              		.section	.text._ZN5Timer13Reset_onMatchEh,"ax",%progbits
 1479              		.align	1
 1480              		.global	_ZN5Timer13Reset_onMatchEh
 1481              		.syntax unified
 1482              		.thumb
 1483              		.thumb_func
 1484              		.fpu softvfp
 1486              	_ZN5Timer13Reset_onMatchEh:
 1487              	.LFB342:
 169:../src/lpc_xav.cpp **** 
 170:../src/lpc_xav.cpp **** void Timer::Reset_onMatch(uint8_t Channel)
 171:../src/lpc_xav.cpp **** {
 1488              		.loc 1 171 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 8
 1491              		@ frame_needed = 1, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 1493 0000 80B4     		push	{r7}
 1494              		.cfi_def_cfa_offset 4
 1495              		.cfi_offset 7, -4
 1496 0002 83B0     		sub	sp, sp, #12
 1497              		.cfi_def_cfa_offset 16
 1498 0004 00AF     		add	r7, sp, #0
 1499              		.cfi_def_cfa_register 7
 1500 0006 7860     		str	r0, [r7, #4]
 1501 0008 0B46     		mov	r3, r1
 1502 000a FB70     		strb	r3, [r7, #3]
 172:../src/lpc_xav.cpp **** 	*(_Periph + 5) |= (0x2 << (Channel * 3)); // Set MRxR in MCR for selected channel
 1503              		.loc 1 172 0
 1504 000c 7B68     		ldr	r3, [r7, #4]
 1505 000e 1B68     		ldr	r3, [r3]
 1506 0010 1433     		adds	r3, r3, #20
 1507 0012 1968     		ldr	r1, [r3]
 1508 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1509 0016 1346     		mov	r3, r2
 1510 0018 5B00     		lsls	r3, r3, #1
 1511 001a 1344     		add	r3, r3, r2
 1512 001c 0222     		movs	r2, #2
 1513 001e 02FA03F3 		lsl	r3, r2, r3
 1514 0022 1A46     		mov	r2, r3
 1515 0024 7B68     		ldr	r3, [r7, #4]
 1516 0026 1B68     		ldr	r3, [r3]
 1517 0028 1433     		adds	r3, r3, #20
 1518 002a 0A43     		orrs	r2, r2, r1
 1519 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 30


 173:../src/lpc_xav.cpp **** }
 1520              		.loc 1 173 0
 1521 002e 00BF     		nop
 1522 0030 0C37     		adds	r7, r7, #12
 1523              		.cfi_def_cfa_offset 4
 1524 0032 BD46     		mov	sp, r7
 1525              		.cfi_def_cfa_register 13
 1526              		@ sp needed
 1527 0034 80BC     		pop	{r7}
 1528              		.cfi_restore 7
 1529              		.cfi_def_cfa_offset 0
 1530 0036 7047     		bx	lr
 1531              		.cfi_endproc
 1532              	.LFE342:
 1534              		.section	.text._ZN5Timer9Set_MatchEhm,"ax",%progbits
 1535              		.align	1
 1536              		.global	_ZN5Timer9Set_MatchEhm
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.fpu softvfp
 1542              	_ZN5Timer9Set_MatchEhm:
 1543              	.LFB343:
 174:../src/lpc_xav.cpp **** 
 175:../src/lpc_xav.cpp **** void Timer::Set_Match(uint8_t Channel, uint32_t Match_Value)
 176:../src/lpc_xav.cpp **** {
 1544              		.loc 1 176 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 16
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548              		@ link register save eliminated.
 1549 0000 80B4     		push	{r7}
 1550              		.cfi_def_cfa_offset 4
 1551              		.cfi_offset 7, -4
 1552 0002 85B0     		sub	sp, sp, #20
 1553              		.cfi_def_cfa_offset 24
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556 0006 F860     		str	r0, [r7, #12]
 1557 0008 0B46     		mov	r3, r1
 1558 000a 7A60     		str	r2, [r7, #4]
 1559 000c FB72     		strb	r3, [r7, #11]
 177:../src/lpc_xav.cpp **** 	*(_Periph + 6 + Channel) = Match_Value; // Set MRx value for selected channel
 1560              		.loc 1 177 0
 1561 000e FB68     		ldr	r3, [r7, #12]
 1562 0010 1A68     		ldr	r2, [r3]
 1563 0012 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1564 0014 0633     		adds	r3, r3, #6
 1565 0016 9B00     		lsls	r3, r3, #2
 1566 0018 1344     		add	r3, r3, r2
 1567 001a 7A68     		ldr	r2, [r7, #4]
 1568 001c 1A60     		str	r2, [r3]
 178:../src/lpc_xav.cpp **** }
 1569              		.loc 1 178 0
 1570 001e 00BF     		nop
 1571 0020 1437     		adds	r7, r7, #20
 1572              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 31


 1573 0022 BD46     		mov	sp, r7
 1574              		.cfi_def_cfa_register 13
 1575              		@ sp needed
 1576 0024 80BC     		pop	{r7}
 1577              		.cfi_restore 7
 1578              		.cfi_def_cfa_offset 0
 1579 0026 7047     		bx	lr
 1580              		.cfi_endproc
 1581              	.LFE343:
 1583              		.section	.text._ZN5Timer16Enable_Ext_MatchEhh,"ax",%progbits
 1584              		.align	1
 1585              		.global	_ZN5Timer16Enable_Ext_MatchEhh
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1589              		.fpu softvfp
 1591              	_ZN5Timer16Enable_Ext_MatchEhh:
 1592              	.LFB344:
 179:../src/lpc_xav.cpp **** 
 180:../src/lpc_xav.cpp **** void Timer::Enable_Ext_Match(uint8_t Channel, uint8_t Match_Setting)
 181:../src/lpc_xav.cpp **** {
 1593              		.loc 1 181 0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 8
 1596              		@ frame_needed = 1, uses_anonymous_args = 0
 1597              		@ link register save eliminated.
 1598 0000 80B4     		push	{r7}
 1599              		.cfi_def_cfa_offset 4
 1600              		.cfi_offset 7, -4
 1601 0002 83B0     		sub	sp, sp, #12
 1602              		.cfi_def_cfa_offset 16
 1603 0004 00AF     		add	r7, sp, #0
 1604              		.cfi_def_cfa_register 7
 1605 0006 7860     		str	r0, [r7, #4]
 1606 0008 0B46     		mov	r3, r1
 1607 000a FB70     		strb	r3, [r7, #3]
 1608 000c 1346     		mov	r3, r2
 1609 000e BB70     		strb	r3, [r7, #2]
 182:../src/lpc_xav.cpp **** 	*(_Periph + 13) &= ~(3 << (4 + Channel * 2));
 1610              		.loc 1 182 0
 1611 0010 7B68     		ldr	r3, [r7, #4]
 1612 0012 1B68     		ldr	r3, [r3]
 1613 0014 3433     		adds	r3, r3, #52
 1614 0016 1A68     		ldr	r2, [r3]
 1615 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1616 001a 0233     		adds	r3, r3, #2
 1617 001c 5B00     		lsls	r3, r3, #1
 1618 001e 0321     		movs	r1, #3
 1619 0020 01FA03F3 		lsl	r3, r1, r3
 1620 0024 DB43     		mvns	r3, r3
 1621 0026 1946     		mov	r1, r3
 1622 0028 7B68     		ldr	r3, [r7, #4]
 1623 002a 1B68     		ldr	r3, [r3]
 1624 002c 3433     		adds	r3, r3, #52
 1625 002e 0A40     		ands	r2, r2, r1
 1626 0030 1A60     		str	r2, [r3]
 183:../src/lpc_xav.cpp **** 	*(_Periph + 13) |= (Match_Setting << (4 + Channel * 2));
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 32


 1627              		.loc 1 183 0
 1628 0032 7B68     		ldr	r3, [r7, #4]
 1629 0034 1B68     		ldr	r3, [r3]
 1630 0036 3433     		adds	r3, r3, #52
 1631 0038 1A68     		ldr	r2, [r3]
 1632 003a B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 1633 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1634 003e 0233     		adds	r3, r3, #2
 1635 0040 5B00     		lsls	r3, r3, #1
 1636 0042 01FA03F3 		lsl	r3, r1, r3
 1637 0046 1946     		mov	r1, r3
 1638 0048 7B68     		ldr	r3, [r7, #4]
 1639 004a 1B68     		ldr	r3, [r3]
 1640 004c 3433     		adds	r3, r3, #52
 1641 004e 0A43     		orrs	r2, r2, r1
 1642 0050 1A60     		str	r2, [r3]
 184:../src/lpc_xav.cpp **** }
 1643              		.loc 1 184 0
 1644 0052 00BF     		nop
 1645 0054 0C37     		adds	r7, r7, #12
 1646              		.cfi_def_cfa_offset 4
 1647 0056 BD46     		mov	sp, r7
 1648              		.cfi_def_cfa_register 13
 1649              		@ sp needed
 1650 0058 80BC     		pop	{r7}
 1651              		.cfi_restore 7
 1652              		.cfi_def_cfa_offset 0
 1653 005a 7047     		bx	lr
 1654              		.cfi_endproc
 1655              	.LFE344:
 1657              		.section	.text._ZN5Timer14Enable_Mat_IntEh,"ax",%progbits
 1658              		.align	1
 1659              		.global	_ZN5Timer14Enable_Mat_IntEh
 1660              		.syntax unified
 1661              		.thumb
 1662              		.thumb_func
 1663              		.fpu softvfp
 1665              	_ZN5Timer14Enable_Mat_IntEh:
 1666              	.LFB345:
 185:../src/lpc_xav.cpp **** 
 186:../src/lpc_xav.cpp **** void Timer::Enable_Mat_Int(uint8_t Channel)
 187:../src/lpc_xav.cpp **** {
 1667              		.loc 1 187 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 8
 1670              		@ frame_needed = 1, uses_anonymous_args = 0
 1671 0000 80B5     		push	{r7, lr}
 1672              		.cfi_def_cfa_offset 8
 1673              		.cfi_offset 7, -8
 1674              		.cfi_offset 14, -4
 1675 0002 82B0     		sub	sp, sp, #8
 1676              		.cfi_def_cfa_offset 16
 1677 0004 00AF     		add	r7, sp, #0
 1678              		.cfi_def_cfa_register 7
 1679 0006 7860     		str	r0, [r7, #4]
 1680 0008 0B46     		mov	r3, r1
 1681 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 33


 188:../src/lpc_xav.cpp **** 	*(_Periph + 5) |= (0x1 << (Channel * 3)); // Set MRxI in MCR for selected channel
 1682              		.loc 1 188 0
 1683 000c 7B68     		ldr	r3, [r7, #4]
 1684 000e 1B68     		ldr	r3, [r3]
 1685 0010 1433     		adds	r3, r3, #20
 1686 0012 1968     		ldr	r1, [r3]
 1687 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1688 0016 1346     		mov	r3, r2
 1689 0018 5B00     		lsls	r3, r3, #1
 1690 001a 1344     		add	r3, r3, r2
 1691 001c 0122     		movs	r2, #1
 1692 001e 02FA03F3 		lsl	r3, r2, r3
 1693 0022 1A46     		mov	r2, r3
 1694 0024 7B68     		ldr	r3, [r7, #4]
 1695 0026 1B68     		ldr	r3, [r3]
 1696 0028 1433     		adds	r3, r3, #20
 1697 002a 0A43     		orrs	r2, r2, r1
 1698 002c 1A60     		str	r2, [r3]
 189:../src/lpc_xav.cpp **** 	EnableIRQ(IRQ_bit);
 1699              		.loc 1 189 0
 1700 002e 7B68     		ldr	r3, [r7, #4]
 1701 0030 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1702 0032 1846     		mov	r0, r3
 1703 0034 FFF7FEFF 		bl	_Z9EnableIRQh
 190:../src/lpc_xav.cpp **** }
 1704              		.loc 1 190 0
 1705 0038 00BF     		nop
 1706 003a 0837     		adds	r7, r7, #8
 1707              		.cfi_def_cfa_offset 8
 1708 003c BD46     		mov	sp, r7
 1709              		.cfi_def_cfa_register 13
 1710              		@ sp needed
 1711 003e 80BD     		pop	{r7, pc}
 1712              		.cfi_endproc
 1713              	.LFE345:
 1715              		.section	.text._ZN5Timer14Enable_Cap_IntEh,"ax",%progbits
 1716              		.align	1
 1717              		.global	_ZN5Timer14Enable_Cap_IntEh
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1721              		.fpu softvfp
 1723              	_ZN5Timer14Enable_Cap_IntEh:
 1724              	.LFB346:
 191:../src/lpc_xav.cpp **** 
 192:../src/lpc_xav.cpp **** void Timer::Enable_Cap_Int(uint8_t Channel)
 193:../src/lpc_xav.cpp **** {
 1725              		.loc 1 193 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 8
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729 0000 80B5     		push	{r7, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 7, -8
 1732              		.cfi_offset 14, -4
 1733 0002 82B0     		sub	sp, sp, #8
 1734              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 34


 1735 0004 00AF     		add	r7, sp, #0
 1736              		.cfi_def_cfa_register 7
 1737 0006 7860     		str	r0, [r7, #4]
 1738 0008 0B46     		mov	r3, r1
 1739 000a FB70     		strb	r3, [r7, #3]
 194:../src/lpc_xav.cpp **** 	*(_Periph + 10) |= (0x4 << (Channel * 3)); // Set CAPxI in CCR for selected channel
 1740              		.loc 1 194 0
 1741 000c 7B68     		ldr	r3, [r7, #4]
 1742 000e 1B68     		ldr	r3, [r3]
 1743 0010 2833     		adds	r3, r3, #40
 1744 0012 1968     		ldr	r1, [r3]
 1745 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1746 0016 1346     		mov	r3, r2
 1747 0018 5B00     		lsls	r3, r3, #1
 1748 001a 1344     		add	r3, r3, r2
 1749 001c 0422     		movs	r2, #4
 1750 001e 02FA03F3 		lsl	r3, r2, r3
 1751 0022 1A46     		mov	r2, r3
 1752 0024 7B68     		ldr	r3, [r7, #4]
 1753 0026 1B68     		ldr	r3, [r3]
 1754 0028 2833     		adds	r3, r3, #40
 1755 002a 0A43     		orrs	r2, r2, r1
 1756 002c 1A60     		str	r2, [r3]
 195:../src/lpc_xav.cpp **** 	EnableIRQ(IRQ_bit);
 1757              		.loc 1 195 0
 1758 002e 7B68     		ldr	r3, [r7, #4]
 1759 0030 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1760 0032 1846     		mov	r0, r3
 1761 0034 FFF7FEFF 		bl	_Z9EnableIRQh
 196:../src/lpc_xav.cpp **** }
 1762              		.loc 1 196 0
 1763 0038 00BF     		nop
 1764 003a 0837     		adds	r7, r7, #8
 1765              		.cfi_def_cfa_offset 8
 1766 003c BD46     		mov	sp, r7
 1767              		.cfi_def_cfa_register 13
 1768              		@ sp needed
 1769 003e 80BD     		pop	{r7, pc}
 1770              		.cfi_endproc
 1771              	.LFE346:
 1773              		.section	.text._ZN5Timer5ResetEv,"ax",%progbits
 1774              		.align	1
 1775              		.global	_ZN5Timer5ResetEv
 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1779              		.fpu softvfp
 1781              	_ZN5Timer5ResetEv:
 1782              	.LFB347:
 197:../src/lpc_xav.cpp **** 
 198:../src/lpc_xav.cpp **** void Timer::Reset()
 199:../src/lpc_xav.cpp **** {
 1783              		.loc 1 199 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 8
 1786              		@ frame_needed = 1, uses_anonymous_args = 0
 1787              		@ link register save eliminated.
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 35


 1788 0000 80B4     		push	{r7}
 1789              		.cfi_def_cfa_offset 4
 1790              		.cfi_offset 7, -4
 1791 0002 83B0     		sub	sp, sp, #12
 1792              		.cfi_def_cfa_offset 16
 1793 0004 00AF     		add	r7, sp, #0
 1794              		.cfi_def_cfa_register 7
 1795 0006 7860     		str	r0, [r7, #4]
 200:../src/lpc_xav.cpp **** 	*(_Periph + 1) = 2; // Set Reset bit in TCR
 1796              		.loc 1 200 0
 1797 0008 7B68     		ldr	r3, [r7, #4]
 1798 000a 1B68     		ldr	r3, [r3]
 1799 000c 0433     		adds	r3, r3, #4
 1800 000e 0222     		movs	r2, #2
 1801 0010 1A60     		str	r2, [r3]
 201:../src/lpc_xav.cpp **** 	*(_Periph + 1) = 1; // Clear reset and set count enable bit in TCR
 1802              		.loc 1 201 0
 1803 0012 7B68     		ldr	r3, [r7, #4]
 1804 0014 1B68     		ldr	r3, [r3]
 1805 0016 0433     		adds	r3, r3, #4
 1806 0018 0122     		movs	r2, #1
 1807 001a 1A60     		str	r2, [r3]
 202:../src/lpc_xav.cpp **** }
 1808              		.loc 1 202 0
 1809 001c 00BF     		nop
 1810 001e 0C37     		adds	r7, r7, #12
 1811              		.cfi_def_cfa_offset 4
 1812 0020 BD46     		mov	sp, r7
 1813              		.cfi_def_cfa_register 13
 1814              		@ sp needed
 1815 0022 80BC     		pop	{r7}
 1816              		.cfi_restore 7
 1817              		.cfi_def_cfa_offset 0
 1818 0024 7047     		bx	lr
 1819              		.cfi_endproc
 1820              	.LFE347:
 1822              		.section	.text._ZN5Timer6get_IREv,"ax",%progbits
 1823              		.align	1
 1824              		.global	_ZN5Timer6get_IREv
 1825              		.syntax unified
 1826              		.thumb
 1827              		.thumb_func
 1828              		.fpu softvfp
 1830              	_ZN5Timer6get_IREv:
 1831              	.LFB348:
 203:../src/lpc_xav.cpp **** 
 204:../src/lpc_xav.cpp **** uint8_t Timer::get_IR()
 205:../src/lpc_xav.cpp **** {
 1832              		.loc 1 205 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 8
 1835              		@ frame_needed = 1, uses_anonymous_args = 0
 1836              		@ link register save eliminated.
 1837 0000 80B4     		push	{r7}
 1838              		.cfi_def_cfa_offset 4
 1839              		.cfi_offset 7, -4
 1840 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 36


 1841              		.cfi_def_cfa_offset 16
 1842 0004 00AF     		add	r7, sp, #0
 1843              		.cfi_def_cfa_register 7
 1844 0006 7860     		str	r0, [r7, #4]
 206:../src/lpc_xav.cpp **** 	return *_Periph; // Return TxIR value
 1845              		.loc 1 206 0
 1846 0008 7B68     		ldr	r3, [r7, #4]
 1847 000a 1B68     		ldr	r3, [r3]
 1848 000c 1B68     		ldr	r3, [r3]
 1849 000e DBB2     		uxtb	r3, r3
 207:../src/lpc_xav.cpp **** }
 1850              		.loc 1 207 0
 1851 0010 1846     		mov	r0, r3
 1852 0012 0C37     		adds	r7, r7, #12
 1853              		.cfi_def_cfa_offset 4
 1854 0014 BD46     		mov	sp, r7
 1855              		.cfi_def_cfa_register 13
 1856              		@ sp needed
 1857 0016 80BC     		pop	{r7}
 1858              		.cfi_restore 7
 1859              		.cfi_def_cfa_offset 0
 1860 0018 7047     		bx	lr
 1861              		.cfi_endproc
 1862              	.LFE348:
 1864              		.section	.text._ZN5Timer9Clear_IntEh,"ax",%progbits
 1865              		.align	1
 1866              		.global	_ZN5Timer9Clear_IntEh
 1867              		.syntax unified
 1868              		.thumb
 1869              		.thumb_func
 1870              		.fpu softvfp
 1872              	_ZN5Timer9Clear_IntEh:
 1873              	.LFB349:
 208:../src/lpc_xav.cpp **** 
 209:../src/lpc_xav.cpp **** void Timer::Clear_Int(uint8_t Flag)
 210:../src/lpc_xav.cpp **** {
 1874              		.loc 1 210 0
 1875              		.cfi_startproc
 1876              		@ args = 0, pretend = 0, frame = 8
 1877              		@ frame_needed = 1, uses_anonymous_args = 0
 1878              		@ link register save eliminated.
 1879 0000 80B4     		push	{r7}
 1880              		.cfi_def_cfa_offset 4
 1881              		.cfi_offset 7, -4
 1882 0002 83B0     		sub	sp, sp, #12
 1883              		.cfi_def_cfa_offset 16
 1884 0004 00AF     		add	r7, sp, #0
 1885              		.cfi_def_cfa_register 7
 1886 0006 7860     		str	r0, [r7, #4]
 1887 0008 0B46     		mov	r3, r1
 1888 000a FB70     		strb	r3, [r7, #3]
 211:../src/lpc_xav.cpp **** 	*_Periph |= Flag; // Clear selected flag in TxIR
 1889              		.loc 1 211 0
 1890 000c 7B68     		ldr	r3, [r7, #4]
 1891 000e 1B68     		ldr	r3, [r3]
 1892 0010 1968     		ldr	r1, [r3]
 1893 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 37


 1894 0014 7B68     		ldr	r3, [r7, #4]
 1895 0016 1B68     		ldr	r3, [r3]
 1896 0018 0A43     		orrs	r2, r2, r1
 1897 001a 1A60     		str	r2, [r3]
 212:../src/lpc_xav.cpp **** }
 1898              		.loc 1 212 0
 1899 001c 00BF     		nop
 1900 001e 0C37     		adds	r7, r7, #12
 1901              		.cfi_def_cfa_offset 4
 1902 0020 BD46     		mov	sp, r7
 1903              		.cfi_def_cfa_register 13
 1904              		@ sp needed
 1905 0022 80BC     		pop	{r7}
 1906              		.cfi_restore 7
 1907              		.cfi_def_cfa_offset 0
 1908 0024 7047     		bx	lr
 1909              		.cfi_endproc
 1910              	.LFE349:
 1912              		.section	.text._ZN5Timer6get_CREh,"ax",%progbits
 1913              		.align	1
 1914              		.global	_ZN5Timer6get_CREh
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1918              		.fpu softvfp
 1920              	_ZN5Timer6get_CREh:
 1921              	.LFB350:
 213:../src/lpc_xav.cpp **** 
 214:../src/lpc_xav.cpp **** uint32_t Timer::get_CR(uint8_t Channel)
 215:../src/lpc_xav.cpp **** {
 1922              		.loc 1 215 0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 8
 1925              		@ frame_needed = 1, uses_anonymous_args = 0
 1926              		@ link register save eliminated.
 1927 0000 80B4     		push	{r7}
 1928              		.cfi_def_cfa_offset 4
 1929              		.cfi_offset 7, -4
 1930 0002 83B0     		sub	sp, sp, #12
 1931              		.cfi_def_cfa_offset 16
 1932 0004 00AF     		add	r7, sp, #0
 1933              		.cfi_def_cfa_register 7
 1934 0006 7860     		str	r0, [r7, #4]
 1935 0008 0B46     		mov	r3, r1
 1936 000a FB70     		strb	r3, [r7, #3]
 216:../src/lpc_xav.cpp **** 	return (*(_Periph + 11 + Channel)); // Return TxCRx for selected channel
 1937              		.loc 1 216 0
 1938 000c 7B68     		ldr	r3, [r7, #4]
 1939 000e 1A68     		ldr	r2, [r3]
 1940 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1941 0012 0B33     		adds	r3, r3, #11
 1942 0014 9B00     		lsls	r3, r3, #2
 1943 0016 1344     		add	r3, r3, r2
 1944 0018 1B68     		ldr	r3, [r3]
 217:../src/lpc_xav.cpp **** }
 1945              		.loc 1 217 0
 1946 001a 1846     		mov	r0, r3
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 38


 1947 001c 0C37     		adds	r7, r7, #12
 1948              		.cfi_def_cfa_offset 4
 1949 001e BD46     		mov	sp, r7
 1950              		.cfi_def_cfa_register 13
 1951              		@ sp needed
 1952 0020 80BC     		pop	{r7}
 1953              		.cfi_restore 7
 1954              		.cfi_def_cfa_offset 0
 1955 0022 7047     		bx	lr
 1956              		.cfi_endproc
 1957              	.LFE350:
 1959              		.section	.text._ZN5TimerC2EPmhhh,"ax",%progbits
 1960              		.align	1
 1961              		.global	_ZN5TimerC2EPmhhh
 1962              		.syntax unified
 1963              		.thumb
 1964              		.thumb_func
 1965              		.fpu softvfp
 1967              	_ZN5TimerC2EPmhhh:
 1968              	.LFB352:
 218:../src/lpc_xav.cpp **** 
 219:../src/lpc_xav.cpp **** Timer::Timer(uint32_t * PtrTimer, uint8_t P_bit, uint8_t C_bit, uint8_t Int_bit)
 1969              		.loc 1 219 0
 1970              		.cfi_startproc
 1971              		@ args = 4, pretend = 0, frame = 16
 1972              		@ frame_needed = 1, uses_anonymous_args = 0
 1973              		@ link register save eliminated.
 1974 0000 80B4     		push	{r7}
 1975              		.cfi_def_cfa_offset 4
 1976              		.cfi_offset 7, -4
 1977 0002 85B0     		sub	sp, sp, #20
 1978              		.cfi_def_cfa_offset 24
 1979 0004 00AF     		add	r7, sp, #0
 1980              		.cfi_def_cfa_register 7
 1981 0006 F860     		str	r0, [r7, #12]
 1982 0008 B960     		str	r1, [r7, #8]
 1983 000a 1146     		mov	r1, r2
 1984 000c 1A46     		mov	r2, r3
 1985 000e 0B46     		mov	r3, r1
 1986 0010 FB71     		strb	r3, [r7, #7]
 1987 0012 1346     		mov	r3, r2
 1988 0014 BB71     		strb	r3, [r7, #6]
 1989              	.LBB6:
 220:../src/lpc_xav.cpp **** 	:_Periph(PtrTimer),
 221:../src/lpc_xav.cpp **** 	Pwr_bit(P_bit),
 222:../src/lpc_xav.cpp **** 	Clk_bit(C_bit),
 223:../src/lpc_xav.cpp **** 	IRQ_bit(Int_bit)
 1990              		.loc 1 223 0
 1991 0016 FB68     		ldr	r3, [r7, #12]
 1992 0018 BA68     		ldr	r2, [r7, #8]
 1993 001a 1A60     		str	r2, [r3]
 1994 001c FB68     		ldr	r3, [r7, #12]
 1995 001e FA79     		ldrb	r2, [r7, #7]
 1996 0020 1A71     		strb	r2, [r3, #4]
 1997 0022 FB68     		ldr	r3, [r7, #12]
 1998 0024 BA79     		ldrb	r2, [r7, #6]
 1999 0026 5A71     		strb	r2, [r3, #5]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 39


 2000 0028 FB68     		ldr	r3, [r7, #12]
 2001 002a 3A7E     		ldrb	r2, [r7, #24]
 2002 002c 9A71     		strb	r2, [r3, #6]
 2003              	.LBE6:
 224:../src/lpc_xav.cpp **** 	{}
 2004              		.loc 1 224 0
 2005 002e FB68     		ldr	r3, [r7, #12]
 2006 0030 1846     		mov	r0, r3
 2007 0032 1437     		adds	r7, r7, #20
 2008              		.cfi_def_cfa_offset 4
 2009 0034 BD46     		mov	sp, r7
 2010              		.cfi_def_cfa_register 13
 2011              		@ sp needed
 2012 0036 80BC     		pop	{r7}
 2013              		.cfi_restore 7
 2014              		.cfi_def_cfa_offset 0
 2015 0038 7047     		bx	lr
 2016              		.cfi_endproc
 2017              	.LFE352:
 2019              		.global	_ZN5TimerC1EPmhhh
 2020              		.thumb_set _ZN5TimerC1EPmhhh,_ZN5TimerC2EPmhhh
 2021              		.section	.text._ZN4UART4InitEm,"ax",%progbits
 2022              		.align	1
 2023              		.global	_ZN4UART4InitEm
 2024              		.syntax unified
 2025              		.thumb
 2026              		.thumb_func
 2027              		.fpu softvfp
 2029              	_ZN4UART4InitEm:
 2030              	.LFB354:
 225:../src/lpc_xav.cpp **** /**************************************************************************************************
 226:../src/lpc_xav.cpp **** void UART::Init(uint32_t Baudrate)
 227:../src/lpc_xav.cpp **** {
 2031              		.loc 1 227 0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 16
 2034              		@ frame_needed = 1, uses_anonymous_args = 0
 2035              		@ link register save eliminated.
 2036 0000 80B4     		push	{r7}
 2037              		.cfi_def_cfa_offset 4
 2038              		.cfi_offset 7, -4
 2039 0002 85B0     		sub	sp, sp, #20
 2040              		.cfi_def_cfa_offset 24
 2041 0004 00AF     		add	r7, sp, #0
 2042              		.cfi_def_cfa_register 7
 2043 0006 7860     		str	r0, [r7, #4]
 2044 0008 3960     		str	r1, [r7]
 228:../src/lpc_xav.cpp **** 	PCONP |= (1 << Pwr_bit);
 2045              		.loc 1 228 0
 2046 000a 394B     		ldr	r3, .L66
 2047 000c 1B68     		ldr	r3, [r3]
 2048 000e 7A68     		ldr	r2, [r7, #4]
 2049 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 2050 0012 1146     		mov	r1, r2
 2051 0014 0122     		movs	r2, #1
 2052 0016 8A40     		lsls	r2, r2, r1
 2053 0018 1146     		mov	r1, r2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 40


 2054 001a 354A     		ldr	r2, .L66
 2055 001c 0B43     		orrs	r3, r3, r1
 2056 001e 1360     		str	r3, [r2]
 229:../src/lpc_xav.cpp **** 
 230:../src/lpc_xav.cpp **** 	if(IRQ_bit < 7){ // Set CCLK/1 speed for corresponding UART module
 2057              		.loc 1 230 0
 2058 0020 7B68     		ldr	r3, [r7, #4]
 2059 0022 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 2060 0024 062B     		cmp	r3, #6
 2061 0026 17D8     		bhi	.L64
 231:../src/lpc_xav.cpp **** 		PCLKSEL0 &= ~(3 << Clk_bit);
 2062              		.loc 1 231 0
 2063 0028 324B     		ldr	r3, .L66+4
 2064 002a 1B68     		ldr	r3, [r3]
 2065 002c 7A68     		ldr	r2, [r7, #4]
 2066 002e 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 2067 0030 1146     		mov	r1, r2
 2068 0032 0322     		movs	r2, #3
 2069 0034 8A40     		lsls	r2, r2, r1
 2070 0036 D243     		mvns	r2, r2
 2071 0038 1146     		mov	r1, r2
 2072 003a 2E4A     		ldr	r2, .L66+4
 2073 003c 0B40     		ands	r3, r3, r1
 2074 003e 1360     		str	r3, [r2]
 232:../src/lpc_xav.cpp **** 		PCLKSEL0 |= (CLK0 << Clk_bit);
 2075              		.loc 1 232 0
 2076 0040 2C4B     		ldr	r3, .L66+4
 2077 0042 1B68     		ldr	r3, [r3]
 2078 0044 7A68     		ldr	r2, [r7, #4]
 2079 0046 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 2080 0048 1146     		mov	r1, r2
 2081 004a 0122     		movs	r2, #1
 2082 004c 8A40     		lsls	r2, r2, r1
 2083 004e 1146     		mov	r1, r2
 2084 0050 284A     		ldr	r2, .L66+4
 2085 0052 0B43     		orrs	r3, r3, r1
 2086 0054 1360     		str	r3, [r2]
 2087 0056 16E0     		b	.L65
 2088              	.L64:
 233:../src/lpc_xav.cpp **** 	}
 234:../src/lpc_xav.cpp **** 	else{
 235:../src/lpc_xav.cpp **** 		PCLKSEL1 &= ~(3 << Clk_bit);
 2089              		.loc 1 235 0
 2090 0058 274B     		ldr	r3, .L66+8
 2091 005a 1B68     		ldr	r3, [r3]
 2092 005c 7A68     		ldr	r2, [r7, #4]
 2093 005e 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 2094 0060 1146     		mov	r1, r2
 2095 0062 0322     		movs	r2, #3
 2096 0064 8A40     		lsls	r2, r2, r1
 2097 0066 D243     		mvns	r2, r2
 2098 0068 1146     		mov	r1, r2
 2099 006a 234A     		ldr	r2, .L66+8
 2100 006c 0B40     		ands	r3, r3, r1
 2101 006e 1360     		str	r3, [r2]
 236:../src/lpc_xav.cpp **** 		PCLKSEL1 |= (CLK0 << Clk_bit);
 2102              		.loc 1 236 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 41


 2103 0070 214B     		ldr	r3, .L66+8
 2104 0072 1B68     		ldr	r3, [r3]
 2105 0074 7A68     		ldr	r2, [r7, #4]
 2106 0076 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 2107 0078 1146     		mov	r1, r2
 2108 007a 0122     		movs	r2, #1
 2109 007c 8A40     		lsls	r2, r2, r1
 2110 007e 1146     		mov	r1, r2
 2111 0080 1D4A     		ldr	r2, .L66+8
 2112 0082 0B43     		orrs	r3, r3, r1
 2113 0084 1360     		str	r3, [r2]
 2114              	.L65:
 237:../src/lpc_xav.cpp **** 	}
 238:../src/lpc_xav.cpp **** 
 239:../src/lpc_xav.cpp **** 	*(_Periph + 3) |= 0x80; // Set DLAB
 2115              		.loc 1 239 0
 2116 0086 7B68     		ldr	r3, [r7, #4]
 2117 0088 1B68     		ldr	r3, [r3]
 2118 008a 0C33     		adds	r3, r3, #12
 2119 008c 1A68     		ldr	r2, [r3]
 2120 008e 7B68     		ldr	r3, [r7, #4]
 2121 0090 1B68     		ldr	r3, [r3]
 2122 0092 0C33     		adds	r3, r3, #12
 2123 0094 42F08002 		orr	r2, r2, #128
 2124 0098 1A60     		str	r2, [r3]
 240:../src/lpc_xav.cpp **** 
 241:../src/lpc_xav.cpp **** 	uint32_t Divisor = SYS_FREQ/(Baudrate << 4);
 2125              		.loc 1 241 0
 2126 009a 3B68     		ldr	r3, [r7]
 2127 009c 1B01     		lsls	r3, r3, #4
 2128 009e 174A     		ldr	r2, .L66+12
 2129 00a0 B2FBF3F3 		udiv	r3, r2, r3
 2130 00a4 FB60     		str	r3, [r7, #12]
 242:../src/lpc_xav.cpp **** 	*_Periph = Divisor % 256; // Set DLL in UxDLL
 2131              		.loc 1 242 0
 2132 00a6 7B68     		ldr	r3, [r7, #4]
 2133 00a8 1B68     		ldr	r3, [r3]
 2134 00aa FA68     		ldr	r2, [r7, #12]
 2135 00ac D2B2     		uxtb	r2, r2
 2136 00ae 1A60     		str	r2, [r3]
 243:../src/lpc_xav.cpp **** 	*(_Periph + 1) = Divisor / 256; // Set DLM in UxDLM
 2137              		.loc 1 243 0
 2138 00b0 7B68     		ldr	r3, [r7, #4]
 2139 00b2 1B68     		ldr	r3, [r3]
 2140 00b4 0433     		adds	r3, r3, #4
 2141 00b6 FA68     		ldr	r2, [r7, #12]
 2142 00b8 120A     		lsrs	r2, r2, #8
 2143 00ba 1A60     		str	r2, [r3]
 244:../src/lpc_xav.cpp **** 
 245:../src/lpc_xav.cpp **** 	*(_Periph + 3) &= 0x7F; // Clear DLAB
 2144              		.loc 1 245 0
 2145 00bc 7B68     		ldr	r3, [r7, #4]
 2146 00be 1B68     		ldr	r3, [r3]
 2147 00c0 0C33     		adds	r3, r3, #12
 2148 00c2 1A68     		ldr	r2, [r3]
 2149 00c4 7B68     		ldr	r3, [r7, #4]
 2150 00c6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 42


 2151 00c8 0C33     		adds	r3, r3, #12
 2152 00ca 02F07F02 		and	r2, r2, #127
 2153 00ce 1A60     		str	r2, [r3]
 246:../src/lpc_xav.cpp **** 
 247:../src/lpc_xav.cpp **** 	*(_Periph + 2) |= 0x01; // Enable FIFO
 2154              		.loc 1 247 0
 2155 00d0 7B68     		ldr	r3, [r7, #4]
 2156 00d2 1B68     		ldr	r3, [r3]
 2157 00d4 0833     		adds	r3, r3, #8
 2158 00d6 1A68     		ldr	r2, [r3]
 2159 00d8 7B68     		ldr	r3, [r7, #4]
 2160 00da 1B68     		ldr	r3, [r3]
 2161 00dc 0833     		adds	r3, r3, #8
 2162 00de 42F00102 		orr	r2, r2, #1
 2163 00e2 1A60     		str	r2, [r3]
 248:../src/lpc_xav.cpp **** }
 2164              		.loc 1 248 0
 2165 00e4 00BF     		nop
 2166 00e6 1437     		adds	r7, r7, #20
 2167              		.cfi_def_cfa_offset 4
 2168 00e8 BD46     		mov	sp, r7
 2169              		.cfi_def_cfa_register 13
 2170              		@ sp needed
 2171 00ea 80BC     		pop	{r7}
 2172              		.cfi_restore 7
 2173              		.cfi_def_cfa_offset 0
 2174 00ec 7047     		bx	lr
 2175              	.L67:
 2176 00ee 00BF     		.align	2
 2177              	.L66:
 2178 00f0 C4C00F40 		.word	1074774212
 2179 00f4 A8C10F40 		.word	1074774440
 2180 00f8 ACC10F40 		.word	1074774444
 2181 00fc 00D8B805 		.word	96000000
 2182              		.cfi_endproc
 2183              	.LFE354:
 2185              		.section	.text._ZN4UART16Set_TransmissionEhh,"ax",%progbits
 2186              		.align	1
 2187              		.global	_ZN4UART16Set_TransmissionEhh
 2188              		.syntax unified
 2189              		.thumb
 2190              		.thumb_func
 2191              		.fpu softvfp
 2193              	_ZN4UART16Set_TransmissionEhh:
 2194              	.LFB355:
 249:../src/lpc_xav.cpp **** 
 250:../src/lpc_xav.cpp **** void UART::Set_Transmission(uint8_t Bit_Length, uint8_t Parity)
 251:../src/lpc_xav.cpp **** {
 2195              		.loc 1 251 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 8
 2198              		@ frame_needed = 1, uses_anonymous_args = 0
 2199              		@ link register save eliminated.
 2200 0000 80B4     		push	{r7}
 2201              		.cfi_def_cfa_offset 4
 2202              		.cfi_offset 7, -4
 2203 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 43


 2204              		.cfi_def_cfa_offset 16
 2205 0004 00AF     		add	r7, sp, #0
 2206              		.cfi_def_cfa_register 7
 2207 0006 7860     		str	r0, [r7, #4]
 2208 0008 0B46     		mov	r3, r1
 2209 000a FB70     		strb	r3, [r7, #3]
 2210 000c 1346     		mov	r3, r2
 2211 000e BB70     		strb	r3, [r7, #2]
 252:../src/lpc_xav.cpp **** 	*(_Periph + 3) &= 0xE0; // Clear settings in UxLCR
 2212              		.loc 1 252 0
 2213 0010 7B68     		ldr	r3, [r7, #4]
 2214 0012 1B68     		ldr	r3, [r3]
 2215 0014 0C33     		adds	r3, r3, #12
 2216 0016 1A68     		ldr	r2, [r3]
 2217 0018 7B68     		ldr	r3, [r7, #4]
 2218 001a 1B68     		ldr	r3, [r3]
 2219 001c 0C33     		adds	r3, r3, #12
 2220 001e 02F0E002 		and	r2, r2, #224
 2221 0022 1A60     		str	r2, [r3]
 253:../src/lpc_xav.cpp **** 
 254:../src/lpc_xav.cpp **** 	*(_Periph + 3) |= Bit_Length - 5; // Set bits [0..1] in UxLCR
 2222              		.loc 1 254 0
 2223 0024 7B68     		ldr	r3, [r7, #4]
 2224 0026 1B68     		ldr	r3, [r3]
 2225 0028 0C33     		adds	r3, r3, #12
 2226 002a 1A68     		ldr	r2, [r3]
 2227 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2228 002e 053B     		subs	r3, r3, #5
 2229 0030 1946     		mov	r1, r3
 2230 0032 7B68     		ldr	r3, [r7, #4]
 2231 0034 1B68     		ldr	r3, [r3]
 2232 0036 0C33     		adds	r3, r3, #12
 2233 0038 0A43     		orrs	r2, r2, r1
 2234 003a 1A60     		str	r2, [r3]
 255:../src/lpc_xav.cpp **** 
 256:../src/lpc_xav.cpp **** 	*(_Periph + 3) &= ~(0x7 << 3); // Clear parity enable and select in UxLCR
 2235              		.loc 1 256 0
 2236 003c 7B68     		ldr	r3, [r7, #4]
 2237 003e 1B68     		ldr	r3, [r3]
 2238 0040 0C33     		adds	r3, r3, #12
 2239 0042 1A68     		ldr	r2, [r3]
 2240 0044 7B68     		ldr	r3, [r7, #4]
 2241 0046 1B68     		ldr	r3, [r3]
 2242 0048 0C33     		adds	r3, r3, #12
 2243 004a 22F03802 		bic	r2, r2, #56
 2244 004e 1A60     		str	r2, [r3]
 257:../src/lpc_xav.cpp **** 	*(_Periph + 3) |= (Parity << 3); // Set parity select bits in UxLCR
 2245              		.loc 1 257 0
 2246 0050 7B68     		ldr	r3, [r7, #4]
 2247 0052 1B68     		ldr	r3, [r3]
 2248 0054 0C33     		adds	r3, r3, #12
 2249 0056 1A68     		ldr	r2, [r3]
 2250 0058 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2251 005a DB00     		lsls	r3, r3, #3
 2252 005c 1946     		mov	r1, r3
 2253 005e 7B68     		ldr	r3, [r7, #4]
 2254 0060 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 44


 2255 0062 0C33     		adds	r3, r3, #12
 2256 0064 0A43     		orrs	r2, r2, r1
 2257 0066 1A60     		str	r2, [r3]
 258:../src/lpc_xav.cpp **** }
 2258              		.loc 1 258 0
 2259 0068 00BF     		nop
 2260 006a 0C37     		adds	r7, r7, #12
 2261              		.cfi_def_cfa_offset 4
 2262 006c BD46     		mov	sp, r7
 2263              		.cfi_def_cfa_register 13
 2264              		@ sp needed
 2265 006e 80BC     		pop	{r7}
 2266              		.cfi_restore 7
 2267              		.cfi_def_cfa_offset 0
 2268 0070 7047     		bx	lr
 2269              		.cfi_endproc
 2270              	.LFE355:
 2272              		.section	.text._ZN4UART7PutByteEc,"ax",%progbits
 2273              		.align	1
 2274              		.global	_ZN4UART7PutByteEc
 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2278              		.fpu softvfp
 2280              	_ZN4UART7PutByteEc:
 2281              	.LFB356:
 259:../src/lpc_xav.cpp **** 
 260:../src/lpc_xav.cpp **** void UART::PutByte(char Byte)
 261:../src/lpc_xav.cpp **** {
 2282              		.loc 1 261 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 8
 2285              		@ frame_needed = 1, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
 2287 0000 80B4     		push	{r7}
 2288              		.cfi_def_cfa_offset 4
 2289              		.cfi_offset 7, -4
 2290 0002 83B0     		sub	sp, sp, #12
 2291              		.cfi_def_cfa_offset 16
 2292 0004 00AF     		add	r7, sp, #0
 2293              		.cfi_def_cfa_register 7
 2294 0006 7860     		str	r0, [r7, #4]
 2295 0008 0B46     		mov	r3, r1
 2296 000a FB70     		strb	r3, [r7, #3]
 262:../src/lpc_xav.cpp **** 	*_Periph = Byte; // Put data byte in UxTHR
 2297              		.loc 1 262 0
 2298 000c 7B68     		ldr	r3, [r7, #4]
 2299 000e 1B68     		ldr	r3, [r3]
 2300 0010 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2301 0012 1A60     		str	r2, [r3]
 2302              	.L71:
 263:../src/lpc_xav.cpp **** 
 264:../src/lpc_xav.cpp **** 	while(!(*(_Periph + 5) & 0x20)); // Read UxLSR until THR bit is set (empty TX register)
 2303              		.loc 1 264 0
 2304 0014 7B68     		ldr	r3, [r7, #4]
 2305 0016 1B68     		ldr	r3, [r3]
 2306 0018 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 45


 2307 001a 1B68     		ldr	r3, [r3]
 2308 001c 03F02003 		and	r3, r3, #32
 2309 0020 002B     		cmp	r3, #0
 2310 0022 00D1     		bne	.L72
 2311 0024 F6E7     		b	.L71
 2312              	.L72:
 265:../src/lpc_xav.cpp **** }
 2313              		.loc 1 265 0
 2314 0026 00BF     		nop
 2315 0028 0C37     		adds	r7, r7, #12
 2316              		.cfi_def_cfa_offset 4
 2317 002a BD46     		mov	sp, r7
 2318              		.cfi_def_cfa_register 13
 2319              		@ sp needed
 2320 002c 80BC     		pop	{r7}
 2321              		.cfi_restore 7
 2322              		.cfi_def_cfa_offset 0
 2323 002e 7047     		bx	lr
 2324              		.cfi_endproc
 2325              	.LFE356:
 2327              		.section	.text._ZN4UART13PrintStrConstEPKc,"ax",%progbits
 2328              		.align	1
 2329              		.global	_ZN4UART13PrintStrConstEPKc
 2330              		.syntax unified
 2331              		.thumb
 2332              		.thumb_func
 2333              		.fpu softvfp
 2335              	_ZN4UART13PrintStrConstEPKc:
 2336              	.LFB357:
 266:../src/lpc_xav.cpp **** 
 267:../src/lpc_xav.cpp **** void UART::PrintStrConst(const char *StrToSend)
 268:../src/lpc_xav.cpp **** {
 2337              		.loc 1 268 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 8
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0000 80B5     		push	{r7, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 7, -8
 2344              		.cfi_offset 14, -4
 2345 0002 82B0     		sub	sp, sp, #8
 2346              		.cfi_def_cfa_offset 16
 2347 0004 00AF     		add	r7, sp, #0
 2348              		.cfi_def_cfa_register 7
 2349 0006 7860     		str	r0, [r7, #4]
 2350 0008 3960     		str	r1, [r7]
 2351              	.L75:
 269:../src/lpc_xav.cpp **** 	for(; *StrToSend; StrToSend++){
 2352              		.loc 1 269 0 discriminator 2
 2353 000a 3B68     		ldr	r3, [r7]
 2354 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2355 000e 002B     		cmp	r3, #0
 2356 0010 09D0     		beq	.L76
 270:../src/lpc_xav.cpp **** 	    PutByte(*StrToSend);
 2357              		.loc 1 270 0 discriminator 1
 2358 0012 3B68     		ldr	r3, [r7]
 2359 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 46


 2360 0016 1946     		mov	r1, r3
 2361 0018 7868     		ldr	r0, [r7, #4]
 2362 001a FFF7FEFF 		bl	_ZN4UART7PutByteEc
 269:../src/lpc_xav.cpp **** 	for(; *StrToSend; StrToSend++){
 2363              		.loc 1 269 0 discriminator 1
 2364 001e 3B68     		ldr	r3, [r7]
 2365 0020 0133     		adds	r3, r3, #1
 2366 0022 3B60     		str	r3, [r7]
 2367 0024 F1E7     		b	.L75
 2368              	.L76:
 271:../src/lpc_xav.cpp **** 	}
 272:../src/lpc_xav.cpp **** }
 2369              		.loc 1 272 0
 2370 0026 00BF     		nop
 2371 0028 0837     		adds	r7, r7, #8
 2372              		.cfi_def_cfa_offset 8
 2373 002a BD46     		mov	sp, r7
 2374              		.cfi_def_cfa_register 13
 2375              		@ sp needed
 2376 002c 80BD     		pop	{r7, pc}
 2377              		.cfi_endproc
 2378              	.LFE357:
 2380              		.section	.text._ZN4UART8PrintDecEt,"ax",%progbits
 2381              		.align	1
 2382              		.global	_ZN4UART8PrintDecEt
 2383              		.syntax unified
 2384              		.thumb
 2385              		.thumb_func
 2386              		.fpu softvfp
 2388              	_ZN4UART8PrintDecEt:
 2389              	.LFB358:
 273:../src/lpc_xav.cpp **** 
 274:../src/lpc_xav.cpp **** 
 275:../src/lpc_xav.cpp **** void UART::PrintDec(uint16_t NbrDec)
 276:../src/lpc_xav.cpp **** {
 2390              		.loc 1 276 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 8
 2393              		@ frame_needed = 1, uses_anonymous_args = 0
 2394 0000 80B5     		push	{r7, lr}
 2395              		.cfi_def_cfa_offset 8
 2396              		.cfi_offset 7, -8
 2397              		.cfi_offset 14, -4
 2398 0002 82B0     		sub	sp, sp, #8
 2399              		.cfi_def_cfa_offset 16
 2400 0004 00AF     		add	r7, sp, #0
 2401              		.cfi_def_cfa_register 7
 2402 0006 7860     		str	r0, [r7, #4]
 2403 0008 0B46     		mov	r3, r1
 2404 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 277:../src/lpc_xav.cpp **** 	IntegerToBCD(Console_BCD, NbrDec);
 2405              		.loc 1 277 0
 2406 000c 7B88     		ldrh	r3, [r7, #2]
 2407 000e 1946     		mov	r1, r3
 2408 0010 1E48     		ldr	r0, .L81
 2409 0012 FFF7FEFF 		bl	_Z12IntegerToBCDR5BCD_tt
 278:../src/lpc_xav.cpp **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 47


 279:../src/lpc_xav.cpp **** 	if(NbrDec > 999)
 2410              		.loc 1 279 0
 2411 0016 7B88     		ldrh	r3, [r7, #2]
 2412 0018 B3F57A7F 		cmp	r3, #1000
 2413 001c 0AD3     		bcc	.L78
 280:../src/lpc_xav.cpp **** 		PutByte(Console_BCD.mil + 48);
 2414              		.loc 1 280 0
 2415 001e 1B4B     		ldr	r3, .L81
 2416 0020 DB78     		ldrb	r3, [r3, #3]
 2417 0022 C3F30313 		ubfx	r3, r3, #4, #4
 2418 0026 DBB2     		uxtb	r3, r3
 2419 0028 3033     		adds	r3, r3, #48
 2420 002a DBB2     		uxtb	r3, r3
 2421 002c 1946     		mov	r1, r3
 2422 002e 7868     		ldr	r0, [r7, #4]
 2423 0030 FFF7FEFF 		bl	_ZN4UART7PutByteEc
 2424              	.L78:
 281:../src/lpc_xav.cpp **** 	if(NbrDec > 99)
 2425              		.loc 1 281 0
 2426 0034 7B88     		ldrh	r3, [r7, #2]
 2427 0036 632B     		cmp	r3, #99
 2428 0038 0AD9     		bls	.L79
 282:../src/lpc_xav.cpp **** 		PutByte(Console_BCD.cen + 48);
 2429              		.loc 1 282 0
 2430 003a 144B     		ldr	r3, .L81
 2431 003c DB78     		ldrb	r3, [r3, #3]
 2432 003e C3F30303 		ubfx	r3, r3, #0, #4
 2433 0042 DBB2     		uxtb	r3, r3
 2434 0044 3033     		adds	r3, r3, #48
 2435 0046 DBB2     		uxtb	r3, r3
 2436 0048 1946     		mov	r1, r3
 2437 004a 7868     		ldr	r0, [r7, #4]
 2438 004c FFF7FEFF 		bl	_ZN4UART7PutByteEc
 2439              	.L79:
 283:../src/lpc_xav.cpp **** 	if(NbrDec > 9)
 2440              		.loc 1 283 0
 2441 0050 7B88     		ldrh	r3, [r7, #2]
 2442 0052 092B     		cmp	r3, #9
 2443 0054 0AD9     		bls	.L80
 284:../src/lpc_xav.cpp **** 		PutByte(Console_BCD.diz + 48);
 2444              		.loc 1 284 0
 2445 0056 0D4B     		ldr	r3, .L81
 2446 0058 9B78     		ldrb	r3, [r3, #2]
 2447 005a C3F30313 		ubfx	r3, r3, #4, #4
 2448 005e DBB2     		uxtb	r3, r3
 2449 0060 3033     		adds	r3, r3, #48
 2450 0062 DBB2     		uxtb	r3, r3
 2451 0064 1946     		mov	r1, r3
 2452 0066 7868     		ldr	r0, [r7, #4]
 2453 0068 FFF7FEFF 		bl	_ZN4UART7PutByteEc
 2454              	.L80:
 285:../src/lpc_xav.cpp ****     PutByte(Console_BCD.uni + 48);
 2455              		.loc 1 285 0
 2456 006c 074B     		ldr	r3, .L81
 2457 006e 9B78     		ldrb	r3, [r3, #2]
 2458 0070 C3F30303 		ubfx	r3, r3, #0, #4
 2459 0074 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 48


 2460 0076 3033     		adds	r3, r3, #48
 2461 0078 DBB2     		uxtb	r3, r3
 2462 007a 1946     		mov	r1, r3
 2463 007c 7868     		ldr	r0, [r7, #4]
 2464 007e FFF7FEFF 		bl	_ZN4UART7PutByteEc
 286:../src/lpc_xav.cpp **** }
 2465              		.loc 1 286 0
 2466 0082 00BF     		nop
 2467 0084 0837     		adds	r7, r7, #8
 2468              		.cfi_def_cfa_offset 8
 2469 0086 BD46     		mov	sp, r7
 2470              		.cfi_def_cfa_register 13
 2471              		@ sp needed
 2472 0088 80BD     		pop	{r7, pc}
 2473              	.L82:
 2474 008a 00BF     		.align	2
 2475              	.L81:
 2476 008c 00000000 		.word	Console_BCD
 2477              		.cfi_endproc
 2478              	.LFE358:
 2480              		.section	.text._ZN4UART10PrintFloatEt,"ax",%progbits
 2481              		.align	1
 2482              		.global	_ZN4UART10PrintFloatEt
 2483              		.syntax unified
 2484              		.thumb
 2485              		.thumb_func
 2486              		.fpu softvfp
 2488              	_ZN4UART10PrintFloatEt:
 2489              	.LFB359:
 287:../src/lpc_xav.cpp **** 
 288:../src/lpc_xav.cpp **** void UART::PrintFloat(uint16_t Scaled_Int) // Used to print float number from an integer
 289:../src/lpc_xav.cpp **** {
 2490              		.loc 1 289 0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 8
 2493              		@ frame_needed = 1, uses_anonymous_args = 0
 2494 0000 80B5     		push	{r7, lr}
 2495              		.cfi_def_cfa_offset 8
 2496              		.cfi_offset 7, -8
 2497              		.cfi_offset 14, -4
 2498 0002 82B0     		sub	sp, sp, #8
 2499              		.cfi_def_cfa_offset 16
 2500 0004 00AF     		add	r7, sp, #0
 2501              		.cfi_def_cfa_register 7
 2502 0006 7860     		str	r0, [r7, #4]
 2503 0008 0B46     		mov	r3, r1
 2504 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 290:../src/lpc_xav.cpp **** 	IntegerToBCD(Console_BCD, Scaled_Int);
 2505              		.loc 1 290 0
 2506 000c 7B88     		ldrh	r3, [r7, #2]
 2507 000e 1946     		mov	r1, r3
 2508 0010 2248     		ldr	r0, .L86
 2509 0012 FFF7FEFF 		bl	_Z12IntegerToBCDR5BCD_tt
 291:../src/lpc_xav.cpp ****     if (Scaled_Int < 10000)
 2510              		.loc 1 291 0
 2511 0016 7B88     		ldrh	r3, [r7, #2]
 2512 0018 42F20F72 		movw	r2, #9999
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 49


 2513 001c 9342     		cmp	r3, r2
 2514 001e 0BD8     		bhi	.L84
 292:../src/lpc_xav.cpp ****         PutByte(Console_BCD.mil + 48);
 2515              		.loc 1 292 0
 2516 0020 1E4B     		ldr	r3, .L86
 2517 0022 DB78     		ldrb	r3, [r3, #3]
 2518 0024 C3F30313 		ubfx	r3, r3, #4, #4
 2519 0028 DBB2     		uxtb	r3, r3
 2520 002a 3033     		adds	r3, r3, #48
 2521 002c DBB2     		uxtb	r3, r3
 2522 002e 1946     		mov	r1, r3
 2523 0030 7868     		ldr	r0, [r7, #4]
 2524 0032 FFF7FEFF 		bl	_ZN4UART7PutByteEc
 2525 0036 07E0     		b	.L85
 2526              	.L84:
 293:../src/lpc_xav.cpp ****         // Handle case where desired number is 100.0%
 294:../src/lpc_xav.cpp ****     else {
 295:../src/lpc_xav.cpp ****         PutByte('1');
 2527              		.loc 1 295 0
 2528 0038 3121     		movs	r1, #49
 2529 003a 7868     		ldr	r0, [r7, #4]
 2530 003c FFF7FEFF 		bl	_ZN4UART7PutByteEc
 296:../src/lpc_xav.cpp ****         PutByte('0');
 2531              		.loc 1 296 0
 2532 0040 3021     		movs	r1, #48
 2533 0042 7868     		ldr	r0, [r7, #4]
 2534 0044 FFF7FEFF 		bl	_ZN4UART7PutByteEc
 2535              	.L85:
 297:../src/lpc_xav.cpp ****     }
 298:../src/lpc_xav.cpp ****     PutByte(Console_BCD.cen + 48);
 2536              		.loc 1 298 0
 2537 0048 144B     		ldr	r3, .L86
 2538 004a DB78     		ldrb	r3, [r3, #3]
 2539 004c C3F30303 		ubfx	r3, r3, #0, #4
 2540 0050 DBB2     		uxtb	r3, r3
 2541 0052 3033     		adds	r3, r3, #48
 2542 0054 DBB2     		uxtb	r3, r3
 2543 0056 1946     		mov	r1, r3
 2544 0058 7868     		ldr	r0, [r7, #4]
 2545 005a FFF7FEFF 		bl	_ZN4UART7PutByteEc
 299:../src/lpc_xav.cpp ****     PutByte('.');
 2546              		.loc 1 299 0
 2547 005e 2E21     		movs	r1, #46
 2548 0060 7868     		ldr	r0, [r7, #4]
 2549 0062 FFF7FEFF 		bl	_ZN4UART7PutByteEc
 300:../src/lpc_xav.cpp ****     PutByte(Console_BCD.diz + 48);
 2550              		.loc 1 300 0
 2551 0066 0D4B     		ldr	r3, .L86
 2552 0068 9B78     		ldrb	r3, [r3, #2]
 2553 006a C3F30313 		ubfx	r3, r3, #4, #4
 2554 006e DBB2     		uxtb	r3, r3
 2555 0070 3033     		adds	r3, r3, #48
 2556 0072 DBB2     		uxtb	r3, r3
 2557 0074 1946     		mov	r1, r3
 2558 0076 7868     		ldr	r0, [r7, #4]
 2559 0078 FFF7FEFF 		bl	_ZN4UART7PutByteEc
 301:../src/lpc_xav.cpp ****     PutByte(Console_BCD.uni + 48);
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 50


 2560              		.loc 1 301 0
 2561 007c 074B     		ldr	r3, .L86
 2562 007e 9B78     		ldrb	r3, [r3, #2]
 2563 0080 C3F30303 		ubfx	r3, r3, #0, #4
 2564 0084 DBB2     		uxtb	r3, r3
 2565 0086 3033     		adds	r3, r3, #48
 2566 0088 DBB2     		uxtb	r3, r3
 2567 008a 1946     		mov	r1, r3
 2568 008c 7868     		ldr	r0, [r7, #4]
 2569 008e FFF7FEFF 		bl	_ZN4UART7PutByteEc
 302:../src/lpc_xav.cpp **** }
 2570              		.loc 1 302 0
 2571 0092 00BF     		nop
 2572 0094 0837     		adds	r7, r7, #8
 2573              		.cfi_def_cfa_offset 8
 2574 0096 BD46     		mov	sp, r7
 2575              		.cfi_def_cfa_register 13
 2576              		@ sp needed
 2577 0098 80BD     		pop	{r7, pc}
 2578              	.L87:
 2579 009a 00BF     		.align	2
 2580              	.L86:
 2581 009c 00000000 		.word	Console_BCD
 2582              		.cfi_endproc
 2583              	.LFE359:
 2585              		.section	.text._ZN4UART11ClearScreenEv,"ax",%progbits
 2586              		.align	1
 2587              		.global	_ZN4UART11ClearScreenEv
 2588              		.syntax unified
 2589              		.thumb
 2590              		.thumb_func
 2591              		.fpu softvfp
 2593              	_ZN4UART11ClearScreenEv:
 2594              	.LFB360:
 303:../src/lpc_xav.cpp **** 
 304:../src/lpc_xav.cpp **** void UART::ClearScreen()
 305:../src/lpc_xav.cpp **** {
 2595              		.loc 1 305 0
 2596              		.cfi_startproc
 2597              		@ args = 0, pretend = 0, frame = 16
 2598              		@ frame_needed = 1, uses_anonymous_args = 0
 2599 0000 80B5     		push	{r7, lr}
 2600              		.cfi_def_cfa_offset 8
 2601              		.cfi_offset 7, -8
 2602              		.cfi_offset 14, -4
 2603 0002 84B0     		sub	sp, sp, #16
 2604              		.cfi_def_cfa_offset 24
 2605 0004 00AF     		add	r7, sp, #0
 2606              		.cfi_def_cfa_register 7
 2607 0006 7860     		str	r0, [r7, #4]
 2608              	.LBB7:
 306:../src/lpc_xav.cpp **** 	for(int i = 0; i < 35; i++){
 2609              		.loc 1 306 0
 2610 0008 0023     		movs	r3, #0
 2611 000a FB60     		str	r3, [r7, #12]
 2612              	.L90:
 2613              		.loc 1 306 0 is_stmt 0 discriminator 3
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 51


 2614 000c FB68     		ldr	r3, [r7, #12]
 2615 000e 222B     		cmp	r3, #34
 2616 0010 0BDC     		bgt	.L91
 307:../src/lpc_xav.cpp **** 		PutByte('\r');
 2617              		.loc 1 307 0 is_stmt 1 discriminator 2
 2618 0012 0D21     		movs	r1, #13
 2619 0014 7868     		ldr	r0, [r7, #4]
 2620 0016 FFF7FEFF 		bl	_ZN4UART7PutByteEc
 308:../src/lpc_xav.cpp **** 		PutByte('\n');
 2621              		.loc 1 308 0 discriminator 2
 2622 001a 0A21     		movs	r1, #10
 2623 001c 7868     		ldr	r0, [r7, #4]
 2624 001e FFF7FEFF 		bl	_ZN4UART7PutByteEc
 306:../src/lpc_xav.cpp **** 	for(int i = 0; i < 35; i++){
 2625              		.loc 1 306 0 discriminator 2
 2626 0022 FB68     		ldr	r3, [r7, #12]
 2627 0024 0133     		adds	r3, r3, #1
 2628 0026 FB60     		str	r3, [r7, #12]
 2629 0028 F0E7     		b	.L90
 2630              	.L91:
 2631              	.LBE7:
 309:../src/lpc_xav.cpp **** 	}
 310:../src/lpc_xav.cpp **** }
 2632              		.loc 1 310 0
 2633 002a 00BF     		nop
 2634 002c 1037     		adds	r7, r7, #16
 2635              		.cfi_def_cfa_offset 8
 2636 002e BD46     		mov	sp, r7
 2637              		.cfi_def_cfa_register 13
 2638              		@ sp needed
 2639 0030 80BD     		pop	{r7, pc}
 2640              		.cfi_endproc
 2641              	.LFE360:
 2643              		.section	.text._ZN4UART13Enable_RX_IntEv,"ax",%progbits
 2644              		.align	1
 2645              		.global	_ZN4UART13Enable_RX_IntEv
 2646              		.syntax unified
 2647              		.thumb
 2648              		.thumb_func
 2649              		.fpu softvfp
 2651              	_ZN4UART13Enable_RX_IntEv:
 2652              	.LFB361:
 311:../src/lpc_xav.cpp **** 
 312:../src/lpc_xav.cpp **** void UART::Enable_RX_Int()
 313:../src/lpc_xav.cpp **** {
 2653              		.loc 1 313 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 8
 2656              		@ frame_needed = 1, uses_anonymous_args = 0
 2657 0000 80B5     		push	{r7, lr}
 2658              		.cfi_def_cfa_offset 8
 2659              		.cfi_offset 7, -8
 2660              		.cfi_offset 14, -4
 2661 0002 82B0     		sub	sp, sp, #8
 2662              		.cfi_def_cfa_offset 16
 2663 0004 00AF     		add	r7, sp, #0
 2664              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 52


 2665 0006 7860     		str	r0, [r7, #4]
 314:../src/lpc_xav.cpp **** 	*(_Periph + 1) = 0x01; // Set RBR Int Enable for interrupts upon reception
 2666              		.loc 1 314 0
 2667 0008 7B68     		ldr	r3, [r7, #4]
 2668 000a 1B68     		ldr	r3, [r3]
 2669 000c 0433     		adds	r3, r3, #4
 2670 000e 0122     		movs	r2, #1
 2671 0010 1A60     		str	r2, [r3]
 315:../src/lpc_xav.cpp **** 	EnableIRQ(IRQ_bit);
 2672              		.loc 1 315 0
 2673 0012 7B68     		ldr	r3, [r7, #4]
 2674 0014 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 2675 0016 1846     		mov	r0, r3
 2676 0018 FFF7FEFF 		bl	_Z9EnableIRQh
 316:../src/lpc_xav.cpp **** }
 2677              		.loc 1 316 0
 2678 001c 00BF     		nop
 2679 001e 0837     		adds	r7, r7, #8
 2680              		.cfi_def_cfa_offset 8
 2681 0020 BD46     		mov	sp, r7
 2682              		.cfi_def_cfa_register 13
 2683              		@ sp needed
 2684 0022 80BD     		pop	{r7, pc}
 2685              		.cfi_endproc
 2686              	.LFE361:
 2688              		.section	.text._ZN4UART12Int_Flag_SetEv,"ax",%progbits
 2689              		.align	1
 2690              		.global	_ZN4UART12Int_Flag_SetEv
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2694              		.fpu softvfp
 2696              	_ZN4UART12Int_Flag_SetEv:
 2697              	.LFB362:
 317:../src/lpc_xav.cpp **** 
 318:../src/lpc_xav.cpp **** bool UART::Int_Flag_Set()
 319:../src/lpc_xav.cpp **** {
 2698              		.loc 1 319 0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 8
 2701              		@ frame_needed = 1, uses_anonymous_args = 0
 2702              		@ link register save eliminated.
 2703 0000 80B4     		push	{r7}
 2704              		.cfi_def_cfa_offset 4
 2705              		.cfi_offset 7, -4
 2706 0002 83B0     		sub	sp, sp, #12
 2707              		.cfi_def_cfa_offset 16
 2708 0004 00AF     		add	r7, sp, #0
 2709              		.cfi_def_cfa_register 7
 2710 0006 7860     		str	r0, [r7, #4]
 320:../src/lpc_xav.cpp **** 	if(*(_Periph + 2) & 0x000F){ // Read UxIIR for int status bits
 2711              		.loc 1 320 0
 2712 0008 7B68     		ldr	r3, [r7, #4]
 2713 000a 1B68     		ldr	r3, [r3]
 2714 000c 0833     		adds	r3, r3, #8
 2715 000e 1B68     		ldr	r3, [r3]
 2716 0010 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 53


 2717 0014 002B     		cmp	r3, #0
 2718 0016 09D0     		beq	.L94
 321:../src/lpc_xav.cpp **** 		if(*(_Periph + 5) == 0x61) // Read UxLSR for UART status
 2719              		.loc 1 321 0
 2720 0018 7B68     		ldr	r3, [r7, #4]
 2721 001a 1B68     		ldr	r3, [r3]
 2722 001c 1433     		adds	r3, r3, #20
 2723 001e 1B68     		ldr	r3, [r3]
 2724 0020 612B     		cmp	r3, #97
 2725 0022 01D1     		bne	.L95
 322:../src/lpc_xav.cpp **** 			return true;
 2726              		.loc 1 322 0
 2727 0024 0123     		movs	r3, #1
 2728 0026 02E0     		b	.L96
 2729              	.L95:
 323:../src/lpc_xav.cpp **** 		else
 324:../src/lpc_xav.cpp **** 			return false;
 2730              		.loc 1 324 0
 2731 0028 0023     		movs	r3, #0
 2732 002a 00E0     		b	.L96
 2733              	.L94:
 325:../src/lpc_xav.cpp **** 	}
 326:../src/lpc_xav.cpp **** 	else
 327:../src/lpc_xav.cpp **** 		return false;
 2734              		.loc 1 327 0
 2735 002c 0023     		movs	r3, #0
 2736              	.L96:
 328:../src/lpc_xav.cpp **** }
 2737              		.loc 1 328 0
 2738 002e 1846     		mov	r0, r3
 2739 0030 0C37     		adds	r7, r7, #12
 2740              		.cfi_def_cfa_offset 4
 2741 0032 BD46     		mov	sp, r7
 2742              		.cfi_def_cfa_register 13
 2743              		@ sp needed
 2744 0034 80BC     		pop	{r7}
 2745              		.cfi_restore 7
 2746              		.cfi_def_cfa_offset 0
 2747 0036 7047     		bx	lr
 2748              		.cfi_endproc
 2749              	.LFE362:
 2751              		.section	.text._ZN4UART7get_RBREv,"ax",%progbits
 2752              		.align	1
 2753              		.global	_ZN4UART7get_RBREv
 2754              		.syntax unified
 2755              		.thumb
 2756              		.thumb_func
 2757              		.fpu softvfp
 2759              	_ZN4UART7get_RBREv:
 2760              	.LFB363:
 329:../src/lpc_xav.cpp **** 
 330:../src/lpc_xav.cpp **** uint8_t UART::get_RBR()
 331:../src/lpc_xav.cpp **** {
 2761              		.loc 1 331 0
 2762              		.cfi_startproc
 2763              		@ args = 0, pretend = 0, frame = 8
 2764              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 54


 2765              		@ link register save eliminated.
 2766 0000 80B4     		push	{r7}
 2767              		.cfi_def_cfa_offset 4
 2768              		.cfi_offset 7, -4
 2769 0002 83B0     		sub	sp, sp, #12
 2770              		.cfi_def_cfa_offset 16
 2771 0004 00AF     		add	r7, sp, #0
 2772              		.cfi_def_cfa_register 7
 2773 0006 7860     		str	r0, [r7, #4]
 332:../src/lpc_xav.cpp **** 	return *_Periph; // Return UxRBR register contents
 2774              		.loc 1 332 0
 2775 0008 7B68     		ldr	r3, [r7, #4]
 2776 000a 1B68     		ldr	r3, [r3]
 2777 000c 1B68     		ldr	r3, [r3]
 2778 000e DBB2     		uxtb	r3, r3
 333:../src/lpc_xav.cpp **** }
 2779              		.loc 1 333 0
 2780 0010 1846     		mov	r0, r3
 2781 0012 0C37     		adds	r7, r7, #12
 2782              		.cfi_def_cfa_offset 4
 2783 0014 BD46     		mov	sp, r7
 2784              		.cfi_def_cfa_register 13
 2785              		@ sp needed
 2786 0016 80BC     		pop	{r7}
 2787              		.cfi_restore 7
 2788              		.cfi_def_cfa_offset 0
 2789 0018 7047     		bx	lr
 2790              		.cfi_endproc
 2791              	.LFE363:
 2793              		.section	.text._ZN4UARTC2EPmhhh,"ax",%progbits
 2794              		.align	1
 2795              		.global	_ZN4UARTC2EPmhhh
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2799              		.fpu softvfp
 2801              	_ZN4UARTC2EPmhhh:
 2802              	.LFB365:
 334:../src/lpc_xav.cpp **** 
 335:../src/lpc_xav.cpp **** UART::UART(uint32_t * PtrUART, uint8_t P_bit, uint8_t C_bit, uint8_t Int_bit)
 2803              		.loc 1 335 0
 2804              		.cfi_startproc
 2805              		@ args = 4, pretend = 0, frame = 16
 2806              		@ frame_needed = 1, uses_anonymous_args = 0
 2807              		@ link register save eliminated.
 2808 0000 80B4     		push	{r7}
 2809              		.cfi_def_cfa_offset 4
 2810              		.cfi_offset 7, -4
 2811 0002 85B0     		sub	sp, sp, #20
 2812              		.cfi_def_cfa_offset 24
 2813 0004 00AF     		add	r7, sp, #0
 2814              		.cfi_def_cfa_register 7
 2815 0006 F860     		str	r0, [r7, #12]
 2816 0008 B960     		str	r1, [r7, #8]
 2817 000a 1146     		mov	r1, r2
 2818 000c 1A46     		mov	r2, r3
 2819 000e 0B46     		mov	r3, r1
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 55


 2820 0010 FB71     		strb	r3, [r7, #7]
 2821 0012 1346     		mov	r3, r2
 2822 0014 BB71     		strb	r3, [r7, #6]
 2823              	.LBB8:
 336:../src/lpc_xav.cpp **** 	:_Periph(PtrUART),
 337:../src/lpc_xav.cpp **** 	Pwr_bit(P_bit),
 338:../src/lpc_xav.cpp **** 	Clk_bit(C_bit),
 339:../src/lpc_xav.cpp **** 	IRQ_bit(Int_bit)
 2824              		.loc 1 339 0
 2825 0016 FB68     		ldr	r3, [r7, #12]
 2826 0018 BA68     		ldr	r2, [r7, #8]
 2827 001a 1A60     		str	r2, [r3]
 2828 001c FB68     		ldr	r3, [r7, #12]
 2829 001e FA79     		ldrb	r2, [r7, #7]
 2830 0020 1A71     		strb	r2, [r3, #4]
 2831 0022 FB68     		ldr	r3, [r7, #12]
 2832 0024 BA79     		ldrb	r2, [r7, #6]
 2833 0026 5A71     		strb	r2, [r3, #5]
 2834 0028 FB68     		ldr	r3, [r7, #12]
 2835 002a 3A7E     		ldrb	r2, [r7, #24]
 2836 002c 9A71     		strb	r2, [r3, #6]
 2837              	.LBE8:
 340:../src/lpc_xav.cpp **** {}
 2838              		.loc 1 340 0
 2839 002e FB68     		ldr	r3, [r7, #12]
 2840 0030 1846     		mov	r0, r3
 2841 0032 1437     		adds	r7, r7, #20
 2842              		.cfi_def_cfa_offset 4
 2843 0034 BD46     		mov	sp, r7
 2844              		.cfi_def_cfa_register 13
 2845              		@ sp needed
 2846 0036 80BC     		pop	{r7}
 2847              		.cfi_restore 7
 2848              		.cfi_def_cfa_offset 0
 2849 0038 7047     		bx	lr
 2850              		.cfi_endproc
 2851              	.LFE365:
 2853              		.global	_ZN4UARTC1EPmhhh
 2854              		.thumb_set _ZN4UARTC1EPmhhh,_ZN4UARTC2EPmhhh
 2855              		.global	_ZN3PWM7_PeriphE
 2856              		.section	.data._ZN3PWM7_PeriphE,"aw",%progbits
 2857              		.align	2
 2860              	_ZN3PWM7_PeriphE:
 2861 0000 00800140 		.word	1073840128
 2862              		.section	.text._ZN3PWM8Set_FreqEm,"ax",%progbits
 2863              		.align	1
 2864              		.global	_ZN3PWM8Set_FreqEm
 2865              		.syntax unified
 2866              		.thumb
 2867              		.thumb_func
 2868              		.fpu softvfp
 2870              	_ZN3PWM8Set_FreqEm:
 2871              	.LFB367:
 341:../src/lpc_xav.cpp **** /**************************************************************************************************
 342:../src/lpc_xav.cpp **** uint32_t * PWM::_Periph = (uint32_t *)0x40018000; // Definition of the PWM static address
 343:../src/lpc_xav.cpp **** 
 344:../src/lpc_xav.cpp **** void PWM::Set_Freq(uint32_t Freq)
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 56


 345:../src/lpc_xav.cpp **** {
 2872              		.loc 1 345 0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 8
 2875              		@ frame_needed = 1, uses_anonymous_args = 0
 2876              		@ link register save eliminated.
 2877 0000 80B4     		push	{r7}
 2878              		.cfi_def_cfa_offset 4
 2879              		.cfi_offset 7, -4
 2880 0002 83B0     		sub	sp, sp, #12
 2881              		.cfi_def_cfa_offset 16
 2882 0004 00AF     		add	r7, sp, #0
 2883              		.cfi_def_cfa_register 7
 2884 0006 7860     		str	r0, [r7, #4]
 346:../src/lpc_xav.cpp **** 	*(_Periph + 5) |= 0x2; // Set PWMMR0R bit in MCR for reset upon TC = MR0
 2885              		.loc 1 346 0
 2886 0008 104B     		ldr	r3, .L102
 2887 000a 1B68     		ldr	r3, [r3]
 2888 000c 1433     		adds	r3, r3, #20
 2889 000e 1A68     		ldr	r2, [r3]
 2890 0010 0E4B     		ldr	r3, .L102
 2891 0012 1B68     		ldr	r3, [r3]
 2892 0014 1433     		adds	r3, r3, #20
 2893 0016 42F00202 		orr	r2, r2, #2
 2894 001a 1A60     		str	r2, [r3]
 347:../src/lpc_xav.cpp **** 	*(_Periph + 6) = (SYS_FREQ >> 2) / Freq; // Sets MR0
 2895              		.loc 1 347 0
 2896 001c 0B4B     		ldr	r3, .L102
 2897 001e 1B68     		ldr	r3, [r3]
 2898 0020 1833     		adds	r3, r3, #24
 2899 0022 0B49     		ldr	r1, .L102+4
 2900 0024 7A68     		ldr	r2, [r7, #4]
 2901 0026 B1FBF2F2 		udiv	r2, r1, r2
 2902 002a 1A60     		str	r2, [r3]
 348:../src/lpc_xav.cpp **** 
 349:../src/lpc_xav.cpp **** 	*(_Periph + 20) |= 0x1; // Set LER bit for MR0 update
 2903              		.loc 1 349 0
 2904 002c 074B     		ldr	r3, .L102
 2905 002e 1B68     		ldr	r3, [r3]
 2906 0030 5033     		adds	r3, r3, #80
 2907 0032 1A68     		ldr	r2, [r3]
 2908 0034 054B     		ldr	r3, .L102
 2909 0036 1B68     		ldr	r3, [r3]
 2910 0038 5033     		adds	r3, r3, #80
 2911 003a 42F00102 		orr	r2, r2, #1
 2912 003e 1A60     		str	r2, [r3]
 350:../src/lpc_xav.cpp **** }
 2913              		.loc 1 350 0
 2914 0040 00BF     		nop
 2915 0042 0C37     		adds	r7, r7, #12
 2916              		.cfi_def_cfa_offset 4
 2917 0044 BD46     		mov	sp, r7
 2918              		.cfi_def_cfa_register 13
 2919              		@ sp needed
 2920 0046 80BC     		pop	{r7}
 2921              		.cfi_restore 7
 2922              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 57


 2923 0048 7047     		bx	lr
 2924              	.L103:
 2925 004a 00BF     		.align	2
 2926              	.L102:
 2927 004c 00000000 		.word	_ZN3PWM7_PeriphE
 2928 0050 00366E01 		.word	24000000
 2929              		.cfi_endproc
 2930              	.LFE367:
 2932              		.section	.text._ZN3PWM13Reset_onMatchEv,"ax",%progbits
 2933              		.align	1
 2934              		.global	_ZN3PWM13Reset_onMatchEv
 2935              		.syntax unified
 2936              		.thumb
 2937              		.thumb_func
 2938              		.fpu softvfp
 2940              	_ZN3PWM13Reset_onMatchEv:
 2941              	.LFB368:
 351:../src/lpc_xav.cpp **** 
 352:../src/lpc_xav.cpp **** void PWM::Reset_onMatch()
 353:../src/lpc_xav.cpp **** {
 2942              		.loc 1 353 0
 2943              		.cfi_startproc
 2944              		@ args = 0, pretend = 0, frame = 8
 2945              		@ frame_needed = 1, uses_anonymous_args = 0
 2946              		@ link register save eliminated.
 2947 0000 80B4     		push	{r7}
 2948              		.cfi_def_cfa_offset 4
 2949              		.cfi_offset 7, -4
 2950 0002 83B0     		sub	sp, sp, #12
 2951              		.cfi_def_cfa_offset 16
 2952 0004 00AF     		add	r7, sp, #0
 2953              		.cfi_def_cfa_register 7
 2954 0006 7860     		str	r0, [r7, #4]
 354:../src/lpc_xav.cpp **** 	*(_Periph + 5) |= (0x10 << Output_Channel * 3); // Set PWMMRxI for selected channel
 2955              		.loc 1 354 0
 2956 0008 0B4B     		ldr	r3, .L105
 2957 000a 1B68     		ldr	r3, [r3]
 2958 000c 1433     		adds	r3, r3, #20
 2959 000e 1A68     		ldr	r2, [r3]
 2960 0010 7B68     		ldr	r3, [r7, #4]
 2961 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2962 0014 1946     		mov	r1, r3
 2963 0016 0B46     		mov	r3, r1
 2964 0018 5B00     		lsls	r3, r3, #1
 2965 001a 0B44     		add	r3, r3, r1
 2966 001c 1021     		movs	r1, #16
 2967 001e 01FA03F3 		lsl	r3, r1, r3
 2968 0022 1946     		mov	r1, r3
 2969 0024 044B     		ldr	r3, .L105
 2970 0026 1B68     		ldr	r3, [r3]
 2971 0028 1433     		adds	r3, r3, #20
 2972 002a 0A43     		orrs	r2, r2, r1
 2973 002c 1A60     		str	r2, [r3]
 355:../src/lpc_xav.cpp **** }
 2974              		.loc 1 355 0
 2975 002e 00BF     		nop
 2976 0030 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 58


 2977              		.cfi_def_cfa_offset 4
 2978 0032 BD46     		mov	sp, r7
 2979              		.cfi_def_cfa_register 13
 2980              		@ sp needed
 2981 0034 80BC     		pop	{r7}
 2982              		.cfi_restore 7
 2983              		.cfi_def_cfa_offset 0
 2984 0036 7047     		bx	lr
 2985              	.L106:
 2986              		.align	2
 2987              	.L105:
 2988 0038 00000000 		.word	_ZN3PWM7_PeriphE
 2989              		.cfi_endproc
 2990              	.LFE368:
 2992              		.global	__aeabi_ui2f
 2993              		.global	__aeabi_fmul
 2994              		.global	__aeabi_f2uiz
 2995              		.section	.text._ZN3PWM8Set_DutyEf,"ax",%progbits
 2996              		.align	1
 2997              		.global	_ZN3PWM8Set_DutyEf
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu softvfp
 3003              	_ZN3PWM8Set_DutyEf:
 3004              	.LFB369:
 356:../src/lpc_xav.cpp **** 
 357:../src/lpc_xav.cpp **** void PWM::Set_Duty(float Duty_Percent)
 358:../src/lpc_xav.cpp **** {
 3005              		.loc 1 358 0
 3006              		.cfi_startproc
 3007              		@ args = 0, pretend = 0, frame = 8
 3008              		@ frame_needed = 1, uses_anonymous_args = 0
 3009 0000 90B5     		push	{r4, r7, lr}
 3010              		.cfi_def_cfa_offset 12
 3011              		.cfi_offset 4, -12
 3012              		.cfi_offset 7, -8
 3013              		.cfi_offset 14, -4
 3014 0002 83B0     		sub	sp, sp, #12
 3015              		.cfi_def_cfa_offset 24
 3016 0004 00AF     		add	r7, sp, #0
 3017              		.cfi_def_cfa_register 7
 3018 0006 7860     		str	r0, [r7, #4]
 3019 0008 3960     		str	r1, [r7]	@ float
 359:../src/lpc_xav.cpp **** 	Duty = Duty_Percent;
 3020              		.loc 1 359 0
 3021 000a 7B68     		ldr	r3, [r7, #4]
 3022 000c 3A68     		ldr	r2, [r7]	@ float
 3023 000e 5A60     		str	r2, [r3, #4]	@ float
 360:../src/lpc_xav.cpp **** 	// Set MRx of corresponding channel at selected fraction of MR0 value
 361:../src/lpc_xav.cpp **** 	*(_Periph + 6 + Output_Channel) = (*(_Periph + 6) / 100 * Duty);
 3024              		.loc 1 361 0
 3025 0010 194B     		ldr	r3, .L108
 3026 0012 1B68     		ldr	r3, [r3]
 3027 0014 1833     		adds	r3, r3, #24
 3028 0016 1B68     		ldr	r3, [r3]
 3029 0018 184A     		ldr	r2, .L108+4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 59


 3030 001a A2FB0323 		umull	r2, r3, r2, r3
 3031 001e 5B09     		lsrs	r3, r3, #5
 3032 0020 1846     		mov	r0, r3
 3033 0022 FFF7FEFF 		bl	__aeabi_ui2f
 3034              	.LVL0:
 3035 0026 0246     		mov	r2, r0
 3036 0028 7B68     		ldr	r3, [r7, #4]
 3037 002a 5B68     		ldr	r3, [r3, #4]	@ float
 3038 002c 1946     		mov	r1, r3
 3039 002e 1046     		mov	r0, r2
 3040 0030 FFF7FEFF 		bl	__aeabi_fmul
 3041              	.LVL1:
 3042 0034 0346     		mov	r3, r0
 3043 0036 1946     		mov	r1, r3
 3044 0038 0F4B     		ldr	r3, .L108
 3045 003a 1A68     		ldr	r2, [r3]
 3046 003c 7B68     		ldr	r3, [r7, #4]
 3047 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3048 0040 0633     		adds	r3, r3, #6
 3049 0042 9B00     		lsls	r3, r3, #2
 3050 0044 D418     		adds	r4, r2, r3
 3051 0046 0846     		mov	r0, r1
 3052 0048 FFF7FEFF 		bl	__aeabi_f2uiz
 3053              	.LVL2:
 3054 004c 0346     		mov	r3, r0
 3055 004e 2360     		str	r3, [r4]
 362:../src/lpc_xav.cpp **** 
 363:../src/lpc_xav.cpp **** 	// Set LER bit for corresponding channel to update MRx value
 364:../src/lpc_xav.cpp **** 	*(_Periph + 20) |= (1 << Output_Channel);
 3056              		.loc 1 364 0
 3057 0050 094B     		ldr	r3, .L108
 3058 0052 1B68     		ldr	r3, [r3]
 3059 0054 5033     		adds	r3, r3, #80
 3060 0056 1A68     		ldr	r2, [r3]
 3061 0058 7B68     		ldr	r3, [r7, #4]
 3062 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3063 005c 1946     		mov	r1, r3
 3064 005e 0123     		movs	r3, #1
 3065 0060 8B40     		lsls	r3, r3, r1
 3066 0062 1946     		mov	r1, r3
 3067 0064 044B     		ldr	r3, .L108
 3068 0066 1B68     		ldr	r3, [r3]
 3069 0068 5033     		adds	r3, r3, #80
 3070 006a 0A43     		orrs	r2, r2, r1
 3071 006c 1A60     		str	r2, [r3]
 365:../src/lpc_xav.cpp **** }
 3072              		.loc 1 365 0
 3073 006e 00BF     		nop
 3074 0070 0C37     		adds	r7, r7, #12
 3075              		.cfi_def_cfa_offset 12
 3076 0072 BD46     		mov	sp, r7
 3077              		.cfi_def_cfa_register 13
 3078              		@ sp needed
 3079 0074 90BD     		pop	{r4, r7, pc}
 3080              	.L109:
 3081 0076 00BF     		.align	2
 3082              	.L108:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 60


 3083 0078 00000000 		.word	_ZN3PWM7_PeriphE
 3084 007c 1F85EB51 		.word	1374389535
 3085              		.cfi_endproc
 3086              	.LFE369:
 3088              		.global	__aeabi_fcmplt
 3089              		.global	__aeabi_fadd
 3090              		.section	.text._ZN3PWM14Increment_DutyEv,"ax",%progbits
 3091              		.align	1
 3092              		.global	_ZN3PWM14Increment_DutyEv
 3093              		.syntax unified
 3094              		.thumb
 3095              		.thumb_func
 3096              		.fpu softvfp
 3098              	_ZN3PWM14Increment_DutyEv:
 3099              	.LFB370:
 366:../src/lpc_xav.cpp **** 
 367:../src/lpc_xav.cpp **** void PWM::Increment_Duty()
 368:../src/lpc_xav.cpp **** {
 3100              		.loc 1 368 0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 8
 3103              		@ frame_needed = 1, uses_anonymous_args = 0
 3104 0000 80B5     		push	{r7, lr}
 3105              		.cfi_def_cfa_offset 8
 3106              		.cfi_offset 7, -8
 3107              		.cfi_offset 14, -4
 3108 0002 82B0     		sub	sp, sp, #8
 3109              		.cfi_def_cfa_offset 16
 3110 0004 00AF     		add	r7, sp, #0
 3111              		.cfi_def_cfa_register 7
 3112 0006 7860     		str	r0, [r7, #4]
 369:../src/lpc_xav.cpp **** 	if(Duty < 100)
 3113              		.loc 1 369 0
 3114 0008 7B68     		ldr	r3, [r7, #4]
 3115 000a 5B68     		ldr	r3, [r3, #4]	@ float
 3116 000c 0B49     		ldr	r1, .L115
 3117 000e 1846     		mov	r0, r3
 3118 0010 FFF7FEFF 		bl	__aeabi_fcmplt
 3119              	.LVL3:
 3120 0014 0346     		mov	r3, r0
 3121 0016 002B     		cmp	r3, #0
 3122 0018 00D1     		bne	.L113
 370:../src/lpc_xav.cpp **** 		Set_Duty(Duty + 1);
 371:../src/lpc_xav.cpp **** }
 3123              		.loc 1 371 0
 3124 001a 0BE0     		b	.L114
 3125              	.L113:
 370:../src/lpc_xav.cpp **** 		Set_Duty(Duty + 1);
 3126              		.loc 1 370 0
 3127 001c 7B68     		ldr	r3, [r7, #4]
 3128 001e 5B68     		ldr	r3, [r3, #4]	@ float
 3129 0020 4FF07E51 		mov	r1, #1065353216
 3130 0024 1846     		mov	r0, r3
 3131 0026 FFF7FEFF 		bl	__aeabi_fadd
 3132              	.LVL4:
 3133 002a 0346     		mov	r3, r0
 3134 002c 1946     		mov	r1, r3
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 61


 3135 002e 7868     		ldr	r0, [r7, #4]
 3136 0030 FFF7FEFF 		bl	_ZN3PWM8Set_DutyEf
 3137              	.L114:
 3138              		.loc 1 371 0
 3139 0034 00BF     		nop
 3140 0036 0837     		adds	r7, r7, #8
 3141              		.cfi_def_cfa_offset 8
 3142 0038 BD46     		mov	sp, r7
 3143              		.cfi_def_cfa_register 13
 3144              		@ sp needed
 3145 003a 80BD     		pop	{r7, pc}
 3146              	.L116:
 3147              		.align	2
 3148              	.L115:
 3149 003c 0000C842 		.word	1120403456
 3150              		.cfi_endproc
 3151              	.LFE370:
 3153              		.global	__aeabi_fcmpgt
 3154              		.global	__aeabi_fsub
 3155              		.section	.text._ZN3PWM14Decrement_DutyEv,"ax",%progbits
 3156              		.align	1
 3157              		.global	_ZN3PWM14Decrement_DutyEv
 3158              		.syntax unified
 3159              		.thumb
 3160              		.thumb_func
 3161              		.fpu softvfp
 3163              	_ZN3PWM14Decrement_DutyEv:
 3164              	.LFB371:
 372:../src/lpc_xav.cpp **** 
 373:../src/lpc_xav.cpp **** void PWM::Decrement_Duty()
 374:../src/lpc_xav.cpp **** {
 3165              		.loc 1 374 0
 3166              		.cfi_startproc
 3167              		@ args = 0, pretend = 0, frame = 8
 3168              		@ frame_needed = 1, uses_anonymous_args = 0
 3169 0000 80B5     		push	{r7, lr}
 3170              		.cfi_def_cfa_offset 8
 3171              		.cfi_offset 7, -8
 3172              		.cfi_offset 14, -4
 3173 0002 82B0     		sub	sp, sp, #8
 3174              		.cfi_def_cfa_offset 16
 3175 0004 00AF     		add	r7, sp, #0
 3176              		.cfi_def_cfa_register 7
 3177 0006 7860     		str	r0, [r7, #4]
 375:../src/lpc_xav.cpp **** 	if(Duty > 5)
 3178              		.loc 1 375 0
 3179 0008 7B68     		ldr	r3, [r7, #4]
 3180 000a 5B68     		ldr	r3, [r3, #4]	@ float
 3181 000c 0B49     		ldr	r1, .L122
 3182 000e 1846     		mov	r0, r3
 3183 0010 FFF7FEFF 		bl	__aeabi_fcmpgt
 3184              	.LVL5:
 3185 0014 0346     		mov	r3, r0
 3186 0016 002B     		cmp	r3, #0
 3187 0018 00D1     		bne	.L120
 376:../src/lpc_xav.cpp **** 		Set_Duty(Duty - 1);
 377:../src/lpc_xav.cpp **** }
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 62


 3188              		.loc 1 377 0
 3189 001a 0BE0     		b	.L121
 3190              	.L120:
 376:../src/lpc_xav.cpp **** 		Set_Duty(Duty - 1);
 3191              		.loc 1 376 0
 3192 001c 7B68     		ldr	r3, [r7, #4]
 3193 001e 5B68     		ldr	r3, [r3, #4]	@ float
 3194 0020 4FF07E51 		mov	r1, #1065353216
 3195 0024 1846     		mov	r0, r3
 3196 0026 FFF7FEFF 		bl	__aeabi_fsub
 3197              	.LVL6:
 3198 002a 0346     		mov	r3, r0
 3199 002c 1946     		mov	r1, r3
 3200 002e 7868     		ldr	r0, [r7, #4]
 3201 0030 FFF7FEFF 		bl	_ZN3PWM8Set_DutyEf
 3202              	.L121:
 3203              		.loc 1 377 0
 3204 0034 00BF     		nop
 3205 0036 0837     		adds	r7, r7, #8
 3206              		.cfi_def_cfa_offset 8
 3207 0038 BD46     		mov	sp, r7
 3208              		.cfi_def_cfa_register 13
 3209              		@ sp needed
 3210 003a 80BD     		pop	{r7, pc}
 3211              	.L123:
 3212              		.align	2
 3213              	.L122:
 3214 003c 0000A040 		.word	1084227584
 3215              		.cfi_endproc
 3216              	.LFE371:
 3218              		.section	.text._ZN3PWM6EnableEv,"ax",%progbits
 3219              		.align	1
 3220              		.global	_ZN3PWM6EnableEv
 3221              		.syntax unified
 3222              		.thumb
 3223              		.thumb_func
 3224              		.fpu softvfp
 3226              	_ZN3PWM6EnableEv:
 3227              	.LFB372:
 378:../src/lpc_xav.cpp **** 
 379:../src/lpc_xav.cpp **** void PWM::Enable()
 380:../src/lpc_xav.cpp **** {
 3228              		.loc 1 380 0
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 0
 3231              		@ frame_needed = 1, uses_anonymous_args = 0
 3232              		@ link register save eliminated.
 3233 0000 80B4     		push	{r7}
 3234              		.cfi_def_cfa_offset 4
 3235              		.cfi_offset 7, -4
 3236 0002 00AF     		add	r7, sp, #0
 3237              		.cfi_def_cfa_register 7
 381:../src/lpc_xav.cpp **** 	// Set PWM Enable and count enable bit in PWM1TCR,
 382:../src/lpc_xav.cpp **** 	// must be done at the end of initialization
 383:../src/lpc_xav.cpp **** 	*(_Periph + 1) |= 0x09;
 3238              		.loc 1 383 0
 3239 0004 064B     		ldr	r3, .L125
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 63


 3240 0006 1B68     		ldr	r3, [r3]
 3241 0008 0433     		adds	r3, r3, #4
 3242 000a 1A68     		ldr	r2, [r3]
 3243 000c 044B     		ldr	r3, .L125
 3244 000e 1B68     		ldr	r3, [r3]
 3245 0010 0433     		adds	r3, r3, #4
 3246 0012 42F00902 		orr	r2, r2, #9
 3247 0016 1A60     		str	r2, [r3]
 384:../src/lpc_xav.cpp **** }
 3248              		.loc 1 384 0
 3249 0018 00BF     		nop
 3250 001a BD46     		mov	sp, r7
 3251              		.cfi_def_cfa_register 13
 3252              		@ sp needed
 3253 001c 80BC     		pop	{r7}
 3254              		.cfi_restore 7
 3255              		.cfi_def_cfa_offset 0
 3256 001e 7047     		bx	lr
 3257              	.L126:
 3258              		.align	2
 3259              	.L125:
 3260 0020 00000000 		.word	_ZN3PWM7_PeriphE
 3261              		.cfi_endproc
 3262              	.LFE372:
 3264              		.section	.text._ZN3PWMC2Ehh,"ax",%progbits
 3265              		.align	1
 3266              		.global	_ZN3PWMC2Ehh
 3267              		.syntax unified
 3268              		.thumb
 3269              		.thumb_func
 3270              		.fpu softvfp
 3272              	_ZN3PWMC2Ehh:
 3273              	.LFB374:
 385:../src/lpc_xav.cpp **** 
 386:../src/lpc_xav.cpp **** PWM::PWM(uint8_t Ch, uint8_t Edge_Sel)
 3274              		.loc 1 386 0
 3275              		.cfi_startproc
 3276              		@ args = 0, pretend = 0, frame = 8
 3277              		@ frame_needed = 1, uses_anonymous_args = 0
 3278              		@ link register save eliminated.
 3279 0000 80B4     		push	{r7}
 3280              		.cfi_def_cfa_offset 4
 3281              		.cfi_offset 7, -4
 3282 0002 83B0     		sub	sp, sp, #12
 3283              		.cfi_def_cfa_offset 16
 3284 0004 00AF     		add	r7, sp, #0
 3285              		.cfi_def_cfa_register 7
 3286 0006 7860     		str	r0, [r7, #4]
 3287 0008 0B46     		mov	r3, r1
 3288 000a FB70     		strb	r3, [r7, #3]
 3289 000c 1346     		mov	r3, r2
 3290 000e BB70     		strb	r3, [r7, #2]
 3291              	.LBB9:
 387:../src/lpc_xav.cpp **** {
 388:../src/lpc_xav.cpp **** 	PCONP |= (1 << 6); // Set PCONP bit for PWM
 3292              		.loc 1 388 0
 3293 0010 1E4B     		ldr	r3, .L129
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 64


 3294 0012 1B68     		ldr	r3, [r3]
 3295 0014 1D4A     		ldr	r2, .L129
 3296 0016 43F04003 		orr	r3, r3, #64
 3297 001a 1360     		str	r3, [r2]
 389:../src/lpc_xav.cpp **** 
 390:../src/lpc_xav.cpp **** 	Output_Channel = Ch;
 3298              		.loc 1 390 0
 3299 001c 7B68     		ldr	r3, [r7, #4]
 3300 001e FA78     		ldrb	r2, [r7, #3]
 3301 0020 1A70     		strb	r2, [r3]
 391:../src/lpc_xav.cpp **** 
 392:../src/lpc_xav.cpp **** 	*(_Periph + 19) &= ~(1 << Output_Channel); // Clear previous settings
 3302              		.loc 1 392 0
 3303 0022 1B4B     		ldr	r3, .L129+4
 3304 0024 1B68     		ldr	r3, [r3]
 3305 0026 4C33     		adds	r3, r3, #76
 3306 0028 1A68     		ldr	r2, [r3]
 3307 002a 7B68     		ldr	r3, [r7, #4]
 3308 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3309 002e 1946     		mov	r1, r3
 3310 0030 0123     		movs	r3, #1
 3311 0032 8B40     		lsls	r3, r3, r1
 3312 0034 DB43     		mvns	r3, r3
 3313 0036 1946     		mov	r1, r3
 3314 0038 154B     		ldr	r3, .L129+4
 3315 003a 1B68     		ldr	r3, [r3]
 3316 003c 4C33     		adds	r3, r3, #76
 3317 003e 0A40     		ands	r2, r2, r1
 3318 0040 1A60     		str	r2, [r3]
 393:../src/lpc_xav.cpp **** 
 394:../src/lpc_xav.cpp **** 	*(_Periph + 19) |= (Edge_Sel << Output_Channel); // Select single-edge or double-edge in PCR
 3319              		.loc 1 394 0
 3320 0042 134B     		ldr	r3, .L129+4
 3321 0044 1B68     		ldr	r3, [r3]
 3322 0046 4C33     		adds	r3, r3, #76
 3323 0048 1A68     		ldr	r2, [r3]
 3324 004a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3325 004c 7968     		ldr	r1, [r7, #4]
 3326 004e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3327 0050 8B40     		lsls	r3, r3, r1
 3328 0052 1946     		mov	r1, r3
 3329 0054 0E4B     		ldr	r3, .L129+4
 3330 0056 1B68     		ldr	r3, [r3]
 3331 0058 4C33     		adds	r3, r3, #76
 3332 005a 0A43     		orrs	r2, r2, r1
 3333 005c 1A60     		str	r2, [r3]
 395:../src/lpc_xav.cpp **** 
 396:../src/lpc_xav.cpp **** 	*(_Periph + 19) |= (1 << (Output_Channel + 8)); // Enable PWM output of selected channel in PCR
 3334              		.loc 1 396 0
 3335 005e 0C4B     		ldr	r3, .L129+4
 3336 0060 1B68     		ldr	r3, [r3]
 3337 0062 4C33     		adds	r3, r3, #76
 3338 0064 1A68     		ldr	r2, [r3]
 3339 0066 7B68     		ldr	r3, [r7, #4]
 3340 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3341 006a 0833     		adds	r3, r3, #8
 3342 006c 0121     		movs	r1, #1
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 65


 3343 006e 01FA03F3 		lsl	r3, r1, r3
 3344 0072 1946     		mov	r1, r3
 3345 0074 064B     		ldr	r3, .L129+4
 3346 0076 1B68     		ldr	r3, [r3]
 3347 0078 4C33     		adds	r3, r3, #76
 3348 007a 0A43     		orrs	r2, r2, r1
 3349 007c 1A60     		str	r2, [r3]
 3350              	.LBE9:
 397:../src/lpc_xav.cpp **** }
 3351              		.loc 1 397 0
 3352 007e 7B68     		ldr	r3, [r7, #4]
 3353 0080 1846     		mov	r0, r3
 3354 0082 0C37     		adds	r7, r7, #12
 3355              		.cfi_def_cfa_offset 4
 3356 0084 BD46     		mov	sp, r7
 3357              		.cfi_def_cfa_register 13
 3358              		@ sp needed
 3359 0086 80BC     		pop	{r7}
 3360              		.cfi_restore 7
 3361              		.cfi_def_cfa_offset 0
 3362 0088 7047     		bx	lr
 3363              	.L130:
 3364 008a 00BF     		.align	2
 3365              	.L129:
 3366 008c C4C00F40 		.word	1074774212
 3367 0090 00000000 		.word	_ZN3PWM7_PeriphE
 3368              		.cfi_endproc
 3369              	.LFE374:
 3371              		.global	_ZN3PWMC1Ehh
 3372              		.thumb_set _ZN3PWMC1Ehh,_ZN3PWMC2Ehh
 3373              		.global	_ZN3ADC7_PeriphE
 3374              		.section	.data._ZN3ADC7_PeriphE,"aw",%progbits
 3375              		.align	2
 3378              	_ZN3ADC7_PeriphE:
 3379 0000 00400340 		.word	1073954816
 3380              		.section	.text._ZN3ADC16Start_ConversionEv,"ax",%progbits
 3381              		.align	1
 3382              		.global	_ZN3ADC16Start_ConversionEv
 3383              		.syntax unified
 3384              		.thumb
 3385              		.thumb_func
 3386              		.fpu softvfp
 3388              	_ZN3ADC16Start_ConversionEv:
 3389              	.LFB376:
 398:../src/lpc_xav.cpp **** /**************************************************************************************************
 399:../src/lpc_xav.cpp **** uint32_t * ADC::_Periph = (uint32_t *)0x40034000; // Definition of the ADC static address
 400:../src/lpc_xav.cpp **** 
 401:../src/lpc_xav.cpp **** void ADC::Start_Conversion()
 402:../src/lpc_xav.cpp **** {
 3390              		.loc 1 402 0
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 8
 3393              		@ frame_needed = 1, uses_anonymous_args = 0
 3394              		@ link register save eliminated.
 3395 0000 80B4     		push	{r7}
 3396              		.cfi_def_cfa_offset 4
 3397              		.cfi_offset 7, -4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 66


 3398 0002 83B0     		sub	sp, sp, #12
 3399              		.cfi_def_cfa_offset 16
 3400 0004 00AF     		add	r7, sp, #0
 3401              		.cfi_def_cfa_register 7
 3402 0006 7860     		str	r0, [r7, #4]
 403:../src/lpc_xav.cpp **** 	*_Periph |= (1 << Output_Channel); // Set Select bit for this ADC channel
 3403              		.loc 1 403 0
 3404 0008 0C4B     		ldr	r3, .L132
 3405 000a 1B68     		ldr	r3, [r3]
 3406 000c 1A68     		ldr	r2, [r3]
 3407 000e 7B68     		ldr	r3, [r7, #4]
 3408 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3409 0012 1946     		mov	r1, r3
 3410 0014 0123     		movs	r3, #1
 3411 0016 8B40     		lsls	r3, r3, r1
 3412 0018 1946     		mov	r1, r3
 3413 001a 084B     		ldr	r3, .L132
 3414 001c 1B68     		ldr	r3, [r3]
 3415 001e 0A43     		orrs	r2, r2, r1
 3416 0020 1A60     		str	r2, [r3]
 404:../src/lpc_xav.cpp **** 
 405:../src/lpc_xav.cpp **** 	*_Periph |= (1 << 24); // Set Start now bit
 3417              		.loc 1 405 0
 3418 0022 064B     		ldr	r3, .L132
 3419 0024 1B68     		ldr	r3, [r3]
 3420 0026 1A68     		ldr	r2, [r3]
 3421 0028 044B     		ldr	r3, .L132
 3422 002a 1B68     		ldr	r3, [r3]
 3423 002c 42F08072 		orr	r2, r2, #16777216
 3424 0030 1A60     		str	r2, [r3]
 406:../src/lpc_xav.cpp **** }
 3425              		.loc 1 406 0
 3426 0032 00BF     		nop
 3427 0034 0C37     		adds	r7, r7, #12
 3428              		.cfi_def_cfa_offset 4
 3429 0036 BD46     		mov	sp, r7
 3430              		.cfi_def_cfa_register 13
 3431              		@ sp needed
 3432 0038 80BC     		pop	{r7}
 3433              		.cfi_restore 7
 3434              		.cfi_def_cfa_offset 0
 3435 003a 7047     		bx	lr
 3436              	.L133:
 3437              		.align	2
 3438              	.L132:
 3439 003c 00000000 		.word	_ZN3ADC7_PeriphE
 3440              		.cfi_endproc
 3441              	.LFE376:
 3443              		.section	.text._ZN3ADC22Start_Burst_ConversionEh,"ax",%progbits
 3444              		.align	1
 3445              		.global	_ZN3ADC22Start_Burst_ConversionEh
 3446              		.syntax unified
 3447              		.thumb
 3448              		.thumb_func
 3449              		.fpu softvfp
 3451              	_ZN3ADC22Start_Burst_ConversionEh:
 3452              	.LFB377:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 67


 407:../src/lpc_xav.cpp **** 
 408:../src/lpc_xav.cpp **** void ADC::Start_Burst_Conversion(uint8_t Sel_Val)
 409:../src/lpc_xav.cpp **** {
 3453              		.loc 1 409 0
 3454              		.cfi_startproc
 3455              		@ args = 0, pretend = 0, frame = 8
 3456              		@ frame_needed = 1, uses_anonymous_args = 0
 3457              		@ link register save eliminated.
 3458 0000 80B4     		push	{r7}
 3459              		.cfi_def_cfa_offset 4
 3460              		.cfi_offset 7, -4
 3461 0002 83B0     		sub	sp, sp, #12
 3462              		.cfi_def_cfa_offset 16
 3463 0004 00AF     		add	r7, sp, #0
 3464              		.cfi_def_cfa_register 7
 3465 0006 0346     		mov	r3, r0
 3466 0008 FB71     		strb	r3, [r7, #7]
 410:../src/lpc_xav.cpp **** 	*_Periph |= Sel_Val + (1 << 16); // Set Burst bit and SEL bits
 3467              		.loc 1 410 0
 3468 000a 084B     		ldr	r3, .L135
 3469 000c 1B68     		ldr	r3, [r3]
 3470 000e 1A68     		ldr	r2, [r3]
 3471 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3472 0012 03F58033 		add	r3, r3, #65536
 3473 0016 1946     		mov	r1, r3
 3474 0018 044B     		ldr	r3, .L135
 3475 001a 1B68     		ldr	r3, [r3]
 3476 001c 0A43     		orrs	r2, r2, r1
 3477 001e 1A60     		str	r2, [r3]
 411:../src/lpc_xav.cpp **** }
 3478              		.loc 1 411 0
 3479 0020 00BF     		nop
 3480 0022 0C37     		adds	r7, r7, #12
 3481              		.cfi_def_cfa_offset 4
 3482 0024 BD46     		mov	sp, r7
 3483              		.cfi_def_cfa_register 13
 3484              		@ sp needed
 3485 0026 80BC     		pop	{r7}
 3486              		.cfi_restore 7
 3487              		.cfi_def_cfa_offset 0
 3488 0028 7047     		bx	lr
 3489              	.L136:
 3490 002a 00BF     		.align	2
 3491              	.L135:
 3492 002c 00000000 		.word	_ZN3ADC7_PeriphE
 3493              		.cfi_endproc
 3494              	.LFE377:
 3496              		.section	.text._ZN3ADC15Stop_ConversionEv,"ax",%progbits
 3497              		.align	1
 3498              		.global	_ZN3ADC15Stop_ConversionEv
 3499              		.syntax unified
 3500              		.thumb
 3501              		.thumb_func
 3502              		.fpu softvfp
 3504              	_ZN3ADC15Stop_ConversionEv:
 3505              	.LFB378:
 412:../src/lpc_xav.cpp **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 68


 413:../src/lpc_xav.cpp **** void ADC::Stop_Conversion()
 414:../src/lpc_xav.cpp **** {
 3506              		.loc 1 414 0
 3507              		.cfi_startproc
 3508              		@ args = 0, pretend = 0, frame = 8
 3509              		@ frame_needed = 1, uses_anonymous_args = 0
 3510              		@ link register save eliminated.
 3511 0000 80B4     		push	{r7}
 3512              		.cfi_def_cfa_offset 4
 3513              		.cfi_offset 7, -4
 3514 0002 83B0     		sub	sp, sp, #12
 3515              		.cfi_def_cfa_offset 16
 3516 0004 00AF     		add	r7, sp, #0
 3517              		.cfi_def_cfa_register 7
 3518 0006 7860     		str	r0, [r7, #4]
 415:../src/lpc_xav.cpp **** 	*_Periph &= ~(1 << Output_Channel); // Clear Select bit for this ADC channel
 3519              		.loc 1 415 0
 3520 0008 0D4B     		ldr	r3, .L138
 3521 000a 1B68     		ldr	r3, [r3]
 3522 000c 1A68     		ldr	r2, [r3]
 3523 000e 7B68     		ldr	r3, [r7, #4]
 3524 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3525 0012 1946     		mov	r1, r3
 3526 0014 0123     		movs	r3, #1
 3527 0016 8B40     		lsls	r3, r3, r1
 3528 0018 DB43     		mvns	r3, r3
 3529 001a 1946     		mov	r1, r3
 3530 001c 084B     		ldr	r3, .L138
 3531 001e 1B68     		ldr	r3, [r3]
 3532 0020 0A40     		ands	r2, r2, r1
 3533 0022 1A60     		str	r2, [r3]
 416:../src/lpc_xav.cpp **** 
 417:../src/lpc_xav.cpp **** 	*_Periph &= ~(1 << 24); // Clear Start Now bit
 3534              		.loc 1 417 0
 3535 0024 064B     		ldr	r3, .L138
 3536 0026 1B68     		ldr	r3, [r3]
 3537 0028 1A68     		ldr	r2, [r3]
 3538 002a 054B     		ldr	r3, .L138
 3539 002c 1B68     		ldr	r3, [r3]
 3540 002e 22F08072 		bic	r2, r2, #16777216
 3541 0032 1A60     		str	r2, [r3]
 418:../src/lpc_xav.cpp **** }
 3542              		.loc 1 418 0
 3543 0034 00BF     		nop
 3544 0036 0C37     		adds	r7, r7, #12
 3545              		.cfi_def_cfa_offset 4
 3546 0038 BD46     		mov	sp, r7
 3547              		.cfi_def_cfa_register 13
 3548              		@ sp needed
 3549 003a 80BC     		pop	{r7}
 3550              		.cfi_restore 7
 3551              		.cfi_def_cfa_offset 0
 3552 003c 7047     		bx	lr
 3553              	.L139:
 3554 003e 00BF     		.align	2
 3555              	.L138:
 3556 0040 00000000 		.word	_ZN3ADC7_PeriphE
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 69


 3557              		.cfi_endproc
 3558              	.LFE378:
 3560              		.section	.text._ZN3ADC21Stop_Burst_ConversionEv,"ax",%progbits
 3561              		.align	1
 3562              		.global	_ZN3ADC21Stop_Burst_ConversionEv
 3563              		.syntax unified
 3564              		.thumb
 3565              		.thumb_func
 3566              		.fpu softvfp
 3568              	_ZN3ADC21Stop_Burst_ConversionEv:
 3569              	.LFB379:
 419:../src/lpc_xav.cpp **** 
 420:../src/lpc_xav.cpp **** void ADC::Stop_Burst_Conversion()
 421:../src/lpc_xav.cpp **** {
 3570              		.loc 1 421 0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 0
 3573              		@ frame_needed = 1, uses_anonymous_args = 0
 3574              		@ link register save eliminated.
 3575 0000 80B4     		push	{r7}
 3576              		.cfi_def_cfa_offset 4
 3577              		.cfi_offset 7, -4
 3578 0002 00AF     		add	r7, sp, #0
 3579              		.cfi_def_cfa_register 7
 422:../src/lpc_xav.cpp **** 	*_Periph &= ~(0xFF); // Clear all Select bits
 3580              		.loc 1 422 0
 3581 0004 094B     		ldr	r3, .L141
 3582 0006 1B68     		ldr	r3, [r3]
 3583 0008 1A68     		ldr	r2, [r3]
 3584 000a 084B     		ldr	r3, .L141
 3585 000c 1B68     		ldr	r3, [r3]
 3586 000e 22F0FF02 		bic	r2, r2, #255
 3587 0012 1A60     		str	r2, [r3]
 423:../src/lpc_xav.cpp **** 
 424:../src/lpc_xav.cpp **** 	*_Periph &= ~(1 << 16); // Clear Burst bit
 3588              		.loc 1 424 0
 3589 0014 054B     		ldr	r3, .L141
 3590 0016 1B68     		ldr	r3, [r3]
 3591 0018 1A68     		ldr	r2, [r3]
 3592 001a 044B     		ldr	r3, .L141
 3593 001c 1B68     		ldr	r3, [r3]
 3594 001e 22F48032 		bic	r2, r2, #65536
 3595 0022 1A60     		str	r2, [r3]
 425:../src/lpc_xav.cpp **** }
 3596              		.loc 1 425 0
 3597 0024 00BF     		nop
 3598 0026 BD46     		mov	sp, r7
 3599              		.cfi_def_cfa_register 13
 3600              		@ sp needed
 3601 0028 80BC     		pop	{r7}
 3602              		.cfi_restore 7
 3603              		.cfi_def_cfa_offset 0
 3604 002a 7047     		bx	lr
 3605              	.L142:
 3606              		.align	2
 3607              	.L141:
 3608 002c 00000000 		.word	_ZN3ADC7_PeriphE
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 70


 3609              		.cfi_endproc
 3610              	.LFE379:
 3612              		.section	.text._ZN3ADC10Enable_IntEv,"ax",%progbits
 3613              		.align	1
 3614              		.global	_ZN3ADC10Enable_IntEv
 3615              		.syntax unified
 3616              		.thumb
 3617              		.thumb_func
 3618              		.fpu softvfp
 3620              	_ZN3ADC10Enable_IntEv:
 3621              	.LFB380:
 426:../src/lpc_xav.cpp **** 
 427:../src/lpc_xav.cpp **** void ADC::Enable_Int()
 428:../src/lpc_xav.cpp **** {
 3622              		.loc 1 428 0
 3623              		.cfi_startproc
 3624              		@ args = 0, pretend = 0, frame = 8
 3625              		@ frame_needed = 1, uses_anonymous_args = 0
 3626 0000 80B5     		push	{r7, lr}
 3627              		.cfi_def_cfa_offset 8
 3628              		.cfi_offset 7, -8
 3629              		.cfi_offset 14, -4
 3630 0002 82B0     		sub	sp, sp, #8
 3631              		.cfi_def_cfa_offset 16
 3632 0004 00AF     		add	r7, sp, #0
 3633              		.cfi_def_cfa_register 7
 3634 0006 7860     		str	r0, [r7, #4]
 429:../src/lpc_xav.cpp **** 	*(_Periph + 3) |= (1 << Output_Channel); // Set ADINTEN for specified channel
 3635              		.loc 1 429 0
 3636 0008 0F4B     		ldr	r3, .L144
 3637 000a 1B68     		ldr	r3, [r3]
 3638 000c 0C33     		adds	r3, r3, #12
 3639 000e 1A68     		ldr	r2, [r3]
 3640 0010 7B68     		ldr	r3, [r7, #4]
 3641 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3642 0014 1946     		mov	r1, r3
 3643 0016 0123     		movs	r3, #1
 3644 0018 8B40     		lsls	r3, r3, r1
 3645 001a 1946     		mov	r1, r3
 3646 001c 0A4B     		ldr	r3, .L144
 3647 001e 1B68     		ldr	r3, [r3]
 3648 0020 0C33     		adds	r3, r3, #12
 3649 0022 0A43     		orrs	r2, r2, r1
 3650 0024 1A60     		str	r2, [r3]
 430:../src/lpc_xav.cpp **** 
 431:../src/lpc_xav.cpp **** 	*(_Periph + 3) &= ~(1 << 8); // Clear ADGINTEN
 3651              		.loc 1 431 0
 3652 0026 084B     		ldr	r3, .L144
 3653 0028 1B68     		ldr	r3, [r3]
 3654 002a 0C33     		adds	r3, r3, #12
 3655 002c 1A68     		ldr	r2, [r3]
 3656 002e 064B     		ldr	r3, .L144
 3657 0030 1B68     		ldr	r3, [r3]
 3658 0032 0C33     		adds	r3, r3, #12
 3659 0034 22F48072 		bic	r2, r2, #256
 3660 0038 1A60     		str	r2, [r3]
 432:../src/lpc_xav.cpp **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 71


 433:../src/lpc_xav.cpp **** 	EnableIRQ(22);
 3661              		.loc 1 433 0
 3662 003a 1620     		movs	r0, #22
 3663 003c FFF7FEFF 		bl	_Z9EnableIRQh
 434:../src/lpc_xav.cpp **** }
 3664              		.loc 1 434 0
 3665 0040 00BF     		nop
 3666 0042 0837     		adds	r7, r7, #8
 3667              		.cfi_def_cfa_offset 8
 3668 0044 BD46     		mov	sp, r7
 3669              		.cfi_def_cfa_register 13
 3670              		@ sp needed
 3671 0046 80BD     		pop	{r7, pc}
 3672              	.L145:
 3673              		.align	2
 3674              	.L144:
 3675 0048 00000000 		.word	_ZN3ADC7_PeriphE
 3676              		.cfi_endproc
 3677              	.LFE380:
 3679              		.section	.text._ZN3ADC16get_12bit_ResultEv,"ax",%progbits
 3680              		.align	1
 3681              		.global	_ZN3ADC16get_12bit_ResultEv
 3682              		.syntax unified
 3683              		.thumb
 3684              		.thumb_func
 3685              		.fpu softvfp
 3687              	_ZN3ADC16get_12bit_ResultEv:
 3688              	.LFB381:
 435:../src/lpc_xav.cpp **** 
 436:../src/lpc_xav.cpp **** uint16_t ADC::get_12bit_Result()
 437:../src/lpc_xav.cpp **** {
 3689              		.loc 1 437 0
 3690              		.cfi_startproc
 3691              		@ args = 0, pretend = 0, frame = 8
 3692              		@ frame_needed = 1, uses_anonymous_args = 0
 3693              		@ link register save eliminated.
 3694 0000 80B4     		push	{r7}
 3695              		.cfi_def_cfa_offset 4
 3696              		.cfi_offset 7, -4
 3697 0002 83B0     		sub	sp, sp, #12
 3698              		.cfi_def_cfa_offset 16
 3699 0004 00AF     		add	r7, sp, #0
 3700              		.cfi_def_cfa_register 7
 3701 0006 7860     		str	r0, [r7, #4]
 438:../src/lpc_xav.cpp **** 	// Return value in [4..15] of corresponding channel register
 439:../src/lpc_xav.cpp **** 	return ((*(_Periph + 4 + Output_Channel) & 0x0000FFFF) >> 4);
 3702              		.loc 1 439 0
 3703 0008 084B     		ldr	r3, .L148
 3704 000a 1A68     		ldr	r2, [r3]
 3705 000c 7B68     		ldr	r3, [r7, #4]
 3706 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3707 0010 0433     		adds	r3, r3, #4
 3708 0012 9B00     		lsls	r3, r3, #2
 3709 0014 1344     		add	r3, r3, r2
 3710 0016 1B68     		ldr	r3, [r3]
 3711 0018 1B09     		lsrs	r3, r3, #4
 3712 001a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 72


 3713 001c C3F30B03 		ubfx	r3, r3, #0, #12
 3714 0020 9BB2     		uxth	r3, r3
 440:../src/lpc_xav.cpp **** }
 3715              		.loc 1 440 0
 3716 0022 1846     		mov	r0, r3
 3717 0024 0C37     		adds	r7, r7, #12
 3718              		.cfi_def_cfa_offset 4
 3719 0026 BD46     		mov	sp, r7
 3720              		.cfi_def_cfa_register 13
 3721              		@ sp needed
 3722 0028 80BC     		pop	{r7}
 3723              		.cfi_restore 7
 3724              		.cfi_def_cfa_offset 0
 3725 002a 7047     		bx	lr
 3726              	.L149:
 3727              		.align	2
 3728              	.L148:
 3729 002c 00000000 		.word	_ZN3ADC7_PeriphE
 3730              		.cfi_endproc
 3731              	.LFE381:
 3733              		.section	.text._ZN3ADCC2Ehm,"ax",%progbits
 3734              		.align	1
 3735              		.global	_ZN3ADCC2Ehm
 3736              		.syntax unified
 3737              		.thumb
 3738              		.thumb_func
 3739              		.fpu softvfp
 3741              	_ZN3ADCC2Ehm:
 3742              	.LFB383:
 441:../src/lpc_xav.cpp **** 
 442:../src/lpc_xav.cpp **** ADC::ADC(uint8_t Ch, uint32_t Target_Freq)
 3743              		.loc 1 442 0
 3744              		.cfi_startproc
 3745              		@ args = 0, pretend = 0, frame = 16
 3746              		@ frame_needed = 1, uses_anonymous_args = 0
 3747              		@ link register save eliminated.
 3748 0000 80B4     		push	{r7}
 3749              		.cfi_def_cfa_offset 4
 3750              		.cfi_offset 7, -4
 3751 0002 85B0     		sub	sp, sp, #20
 3752              		.cfi_def_cfa_offset 24
 3753 0004 00AF     		add	r7, sp, #0
 3754              		.cfi_def_cfa_register 7
 3755 0006 F860     		str	r0, [r7, #12]
 3756 0008 0B46     		mov	r3, r1
 3757 000a 7A60     		str	r2, [r7, #4]
 3758 000c FB72     		strb	r3, [r7, #11]
 3759              	.LBB10:
 443:../src/lpc_xav.cpp **** {
 444:../src/lpc_xav.cpp **** 	PCONP |= (1 << 12); // Set bit in PCONP
 3760              		.loc 1 444 0
 3761 000e 154B     		ldr	r3, .L152
 3762 0010 1B68     		ldr	r3, [r3]
 3763 0012 144A     		ldr	r2, .L152
 3764 0014 43F48053 		orr	r3, r3, #4096
 3765 0018 1360     		str	r3, [r2]
 445:../src/lpc_xav.cpp **** 	*_Periph |= (1 << 21); // Set PDN bit in ADCR to enable ADC peripheral
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 73


 3766              		.loc 1 445 0
 3767 001a 134B     		ldr	r3, .L152+4
 3768 001c 1B68     		ldr	r3, [r3]
 3769 001e 1A68     		ldr	r2, [r3]
 3770 0020 114B     		ldr	r3, .L152+4
 3771 0022 1B68     		ldr	r3, [r3]
 3772 0024 42F40012 		orr	r2, r2, #2097152
 3773 0028 1A60     		str	r2, [r3]
 446:../src/lpc_xav.cpp **** 
 447:../src/lpc_xav.cpp **** 	PCLKSEL0 &= ~(3 << 24); // Set CCLK/4 clock rate
 3774              		.loc 1 447 0
 3775 002a 104B     		ldr	r3, .L152+8
 3776 002c 1B68     		ldr	r3, [r3]
 3777 002e 0F4A     		ldr	r2, .L152+8
 3778 0030 23F04073 		bic	r3, r3, #50331648
 3779 0034 1360     		str	r3, [r2]
 448:../src/lpc_xav.cpp **** 	*_Periph |= ((((SYS_FREQ >> 2) / Target_Freq) - 1) << 8); // Set CLKDIV in ADCR
 3780              		.loc 1 448 0
 3781 0036 0C4B     		ldr	r3, .L152+4
 3782 0038 1B68     		ldr	r3, [r3]
 3783 003a 1968     		ldr	r1, [r3]
 3784 003c 0C4A     		ldr	r2, .L152+12
 3785 003e 7B68     		ldr	r3, [r7, #4]
 3786 0040 B2FBF3F3 		udiv	r3, r2, r3
 3787 0044 013B     		subs	r3, r3, #1
 3788 0046 1A02     		lsls	r2, r3, #8
 3789 0048 074B     		ldr	r3, .L152+4
 3790 004a 1B68     		ldr	r3, [r3]
 3791 004c 0A43     		orrs	r2, r2, r1
 3792 004e 1A60     		str	r2, [r3]
 449:../src/lpc_xav.cpp **** 
 450:../src/lpc_xav.cpp **** 	Output_Channel = Ch;
 3793              		.loc 1 450 0
 3794 0050 FB68     		ldr	r3, [r7, #12]
 3795 0052 FA7A     		ldrb	r2, [r7, #11]
 3796 0054 1A70     		strb	r2, [r3]
 3797              	.LBE10:
 451:../src/lpc_xav.cpp **** }
 3798              		.loc 1 451 0
 3799 0056 FB68     		ldr	r3, [r7, #12]
 3800 0058 1846     		mov	r0, r3
 3801 005a 1437     		adds	r7, r7, #20
 3802              		.cfi_def_cfa_offset 4
 3803 005c BD46     		mov	sp, r7
 3804              		.cfi_def_cfa_register 13
 3805              		@ sp needed
 3806 005e 80BC     		pop	{r7}
 3807              		.cfi_restore 7
 3808              		.cfi_def_cfa_offset 0
 3809 0060 7047     		bx	lr
 3810              	.L153:
 3811 0062 00BF     		.align	2
 3812              	.L152:
 3813 0064 C4C00F40 		.word	1074774212
 3814 0068 00000000 		.word	_ZN3ADC7_PeriphE
 3815 006c A8C10F40 		.word	1074774440
 3816 0070 00366E01 		.word	24000000
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 74


 3817              		.cfi_endproc
 3818              	.LFE383:
 3820              		.global	_ZN3ADCC1Ehm
 3821              		.thumb_set _ZN3ADCC1Ehm,_ZN3ADCC2Ehm
 3822              		.global	_ZN3DAC7_PeriphE
 3823              		.section	.data._ZN3DAC7_PeriphE,"aw",%progbits
 3824              		.align	2
 3827              	_ZN3DAC7_PeriphE:
 3828 0000 00C00840 		.word	1074315264
 3829              		.section	.text._ZN3DAC10Set_OutputEt,"ax",%progbits
 3830              		.align	1
 3831              		.global	_ZN3DAC10Set_OutputEt
 3832              		.syntax unified
 3833              		.thumb
 3834              		.thumb_func
 3835              		.fpu softvfp
 3837              	_ZN3DAC10Set_OutputEt:
 3838              	.LFB385:
 452:../src/lpc_xav.cpp **** /**************************************************************************************************
 453:../src/lpc_xav.cpp **** uint32_t * DAC::_Periph = (uint32_t *)0x4008C000;
 454:../src/lpc_xav.cpp **** 
 455:../src/lpc_xav.cpp **** void DAC::Set_Output(uint16_t Val_10bit)
 456:../src/lpc_xav.cpp **** {
 3839              		.loc 1 456 0
 3840              		.cfi_startproc
 3841              		@ args = 0, pretend = 0, frame = 8
 3842              		@ frame_needed = 1, uses_anonymous_args = 0
 3843              		@ link register save eliminated.
 3844 0000 80B4     		push	{r7}
 3845              		.cfi_def_cfa_offset 4
 3846              		.cfi_offset 7, -4
 3847 0002 83B0     		sub	sp, sp, #12
 3848              		.cfi_def_cfa_offset 16
 3849 0004 00AF     		add	r7, sp, #0
 3850              		.cfi_def_cfa_register 7
 3851 0006 7860     		str	r0, [r7, #4]
 3852 0008 0B46     		mov	r3, r1
 3853 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 457:../src/lpc_xav.cpp **** 	*_Periph &= 0x10000; // Clear BIAS bit in DACR
 3854              		.loc 1 457 0
 3855 000c 0B4B     		ldr	r3, .L155
 3856 000e 1B68     		ldr	r3, [r3]
 3857 0010 1A68     		ldr	r2, [r3]
 3858 0012 0A4B     		ldr	r3, .L155
 3859 0014 1B68     		ldr	r3, [r3]
 3860 0016 02F48032 		and	r2, r2, #65536
 3861 001a 1A60     		str	r2, [r3]
 458:../src/lpc_xav.cpp **** 	*_Periph |= (Val_10bit << 6); // Set value to be converted in DACR
 3862              		.loc 1 458 0
 3863 001c 074B     		ldr	r3, .L155
 3864 001e 1B68     		ldr	r3, [r3]
 3865 0020 1A68     		ldr	r2, [r3]
 3866 0022 7B88     		ldrh	r3, [r7, #2]
 3867 0024 9B01     		lsls	r3, r3, #6
 3868 0026 1946     		mov	r1, r3
 3869 0028 044B     		ldr	r3, .L155
 3870 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 75


 3871 002c 0A43     		orrs	r2, r2, r1
 3872 002e 1A60     		str	r2, [r3]
 459:../src/lpc_xav.cpp **** }
 3873              		.loc 1 459 0
 3874 0030 00BF     		nop
 3875 0032 0C37     		adds	r7, r7, #12
 3876              		.cfi_def_cfa_offset 4
 3877 0034 BD46     		mov	sp, r7
 3878              		.cfi_def_cfa_register 13
 3879              		@ sp needed
 3880 0036 80BC     		pop	{r7}
 3881              		.cfi_restore 7
 3882              		.cfi_def_cfa_offset 0
 3883 0038 7047     		bx	lr
 3884              	.L156:
 3885 003a 00BF     		.align	2
 3886              	.L155:
 3887 003c 00000000 		.word	_ZN3DAC7_PeriphE
 3888              		.cfi_endproc
 3889              	.LFE385:
 3891              		.section	.text._ZN3DAC15Set_Out_PercentEh,"ax",%progbits
 3892              		.align	1
 3893              		.global	_ZN3DAC15Set_Out_PercentEh
 3894              		.syntax unified
 3895              		.thumb
 3896              		.thumb_func
 3897              		.fpu softvfp
 3899              	_ZN3DAC15Set_Out_PercentEh:
 3900              	.LFB386:
 460:../src/lpc_xav.cpp **** 
 461:../src/lpc_xav.cpp **** void DAC::Set_Out_Percent(uint8_t Percentage)
 462:../src/lpc_xav.cpp **** {
 3901              		.loc 1 462 0
 3902              		.cfi_startproc
 3903              		@ args = 0, pretend = 0, frame = 16
 3904              		@ frame_needed = 1, uses_anonymous_args = 0
 3905 0000 80B5     		push	{r7, lr}
 3906              		.cfi_def_cfa_offset 8
 3907              		.cfi_offset 7, -8
 3908              		.cfi_offset 14, -4
 3909 0002 84B0     		sub	sp, sp, #16
 3910              		.cfi_def_cfa_offset 24
 3911 0004 00AF     		add	r7, sp, #0
 3912              		.cfi_def_cfa_register 7
 3913 0006 7860     		str	r0, [r7, #4]
 3914 0008 0B46     		mov	r3, r1
 3915 000a FB70     		strb	r3, [r7, #3]
 463:../src/lpc_xav.cpp **** 	uint32_t Val = (Percentage << 10) / 100;
 3916              		.loc 1 463 0
 3917 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3918 000e 9B02     		lsls	r3, r3, #10
 3919 0010 084A     		ldr	r2, .L158
 3920 0012 82FB0312 		smull	r1, r2, r2, r3
 3921 0016 5211     		asrs	r2, r2, #5
 3922 0018 DB17     		asrs	r3, r3, #31
 3923 001a D31A     		subs	r3, r2, r3
 3924 001c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 76


 464:../src/lpc_xav.cpp **** 
 465:../src/lpc_xav.cpp **** 	Set_Output((uint16_t)Val);
 3925              		.loc 1 465 0
 3926 001e FB68     		ldr	r3, [r7, #12]
 3927 0020 9BB2     		uxth	r3, r3
 3928 0022 1946     		mov	r1, r3
 3929 0024 7868     		ldr	r0, [r7, #4]
 3930 0026 FFF7FEFF 		bl	_ZN3DAC10Set_OutputEt
 466:../src/lpc_xav.cpp **** }
 3931              		.loc 1 466 0
 3932 002a 00BF     		nop
 3933 002c 1037     		adds	r7, r7, #16
 3934              		.cfi_def_cfa_offset 8
 3935 002e BD46     		mov	sp, r7
 3936              		.cfi_def_cfa_register 13
 3937              		@ sp needed
 3938 0030 80BD     		pop	{r7, pc}
 3939              	.L159:
 3940 0032 00BF     		.align	2
 3941              	.L158:
 3942 0034 1F85EB51 		.word	1374389535
 3943              		.cfi_endproc
 3944              	.LFE386:
 3946              		.section	.text._ZN4_I2C4InitEhm,"ax",%progbits
 3947              		.align	1
 3948              		.global	_ZN4_I2C4InitEhm
 3949              		.syntax unified
 3950              		.thumb
 3951              		.thumb_func
 3952              		.fpu softvfp
 3954              	_ZN4_I2C4InitEhm:
 3955              	.LFB387:
 467:../src/lpc_xav.cpp **** /**************************************************************************************************
 468:../src/lpc_xav.cpp **** void _I2C::Init(uint8_t Bus_Mode, uint32_t I2C_Speed)
 469:../src/lpc_xav.cpp **** {
 3956              		.loc 1 469 0
 3957              		.cfi_startproc
 3958              		@ args = 0, pretend = 0, frame = 16
 3959              		@ frame_needed = 1, uses_anonymous_args = 0
 3960 0000 80B5     		push	{r7, lr}
 3961              		.cfi_def_cfa_offset 8
 3962              		.cfi_offset 7, -8
 3963              		.cfi_offset 14, -4
 3964 0002 84B0     		sub	sp, sp, #16
 3965              		.cfi_def_cfa_offset 24
 3966 0004 00AF     		add	r7, sp, #0
 3967              		.cfi_def_cfa_register 7
 3968 0006 F860     		str	r0, [r7, #12]
 3969 0008 0B46     		mov	r3, r1
 3970 000a 7A60     		str	r2, [r7, #4]
 3971 000c FB72     		strb	r3, [r7, #11]
 470:../src/lpc_xav.cpp **** 	PCLKSEL0 &= ~(3 << Clk_bit);
 3972              		.loc 1 470 0
 3973 000e 194B     		ldr	r3, .L161
 3974 0010 1B68     		ldr	r3, [r3]
 3975 0012 FA68     		ldr	r2, [r7, #12]
 3976 0014 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 77


 3977 0016 1146     		mov	r1, r2
 3978 0018 0322     		movs	r2, #3
 3979 001a 8A40     		lsls	r2, r2, r1
 3980 001c D243     		mvns	r2, r2
 3981 001e 1146     		mov	r1, r2
 3982 0020 144A     		ldr	r2, .L161
 3983 0022 0B40     		ands	r3, r3, r1
 3984 0024 1360     		str	r3, [r2]
 471:../src/lpc_xav.cpp **** 	PCLKSEL0 |= (CLK0 << Clk_bit);
 3985              		.loc 1 471 0
 3986 0026 134B     		ldr	r3, .L161
 3987 0028 1B68     		ldr	r3, [r3]
 3988 002a FA68     		ldr	r2, [r7, #12]
 3989 002c 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 3990 002e 1146     		mov	r1, r2
 3991 0030 0122     		movs	r2, #1
 3992 0032 8A40     		lsls	r2, r2, r1
 3993 0034 1146     		mov	r1, r2
 3994 0036 0F4A     		ldr	r2, .L161
 3995 0038 0B43     		orrs	r3, r3, r1
 3996 003a 1360     		str	r3, [r2]
 472:../src/lpc_xav.cpp **** 
 473:../src/lpc_xav.cpp **** 	*(_Periph + 4) = I2C_Speed; // SCLH for setting bus frequency
 3997              		.loc 1 473 0
 3998 003c FB68     		ldr	r3, [r7, #12]
 3999 003e 1B68     		ldr	r3, [r3]
 4000 0040 1033     		adds	r3, r3, #16
 4001 0042 7A68     		ldr	r2, [r7, #4]
 4002 0044 1A60     		str	r2, [r3]
 474:../src/lpc_xav.cpp **** 	*(_Periph + 5) = I2C_Speed; // SCLL (SCLL and SCLH are the same value for 50% duty cycle)
 4003              		.loc 1 474 0
 4004 0046 FB68     		ldr	r3, [r7, #12]
 4005 0048 1B68     		ldr	r3, [r3]
 4006 004a 1433     		adds	r3, r3, #20
 4007 004c 7A68     		ldr	r2, [r7, #4]
 4008 004e 1A60     		str	r2, [r3]
 475:../src/lpc_xav.cpp **** 
 476:../src/lpc_xav.cpp **** 	*(_Periph +1) = 0x00;
 4009              		.loc 1 476 0
 4010 0050 FB68     		ldr	r3, [r7, #12]
 4011 0052 1B68     		ldr	r3, [r3]
 4012 0054 0433     		adds	r3, r3, #4
 4013 0056 0022     		movs	r2, #0
 4014 0058 1A60     		str	r2, [r3]
 477:../src/lpc_xav.cpp **** 
 478:../src/lpc_xav.cpp **** 	EnableIRQ(IRQ_bit);
 4015              		.loc 1 478 0
 4016 005a FB68     		ldr	r3, [r7, #12]
 4017 005c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4018 005e 1846     		mov	r0, r3
 4019 0060 FFF7FEFF 		bl	_Z9EnableIRQh
 479:../src/lpc_xav.cpp **** 
 480:../src/lpc_xav.cpp **** 	*_Periph = Bus_Mode; // Set I2CONSET for slave or master mode
 4020              		.loc 1 480 0
 4021 0064 FB68     		ldr	r3, [r7, #12]
 4022 0066 1B68     		ldr	r3, [r3]
 4023 0068 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 78


 4024 006a 1A60     		str	r2, [r3]
 481:../src/lpc_xav.cpp **** }
 4025              		.loc 1 481 0
 4026 006c 00BF     		nop
 4027 006e 1037     		adds	r7, r7, #16
 4028              		.cfi_def_cfa_offset 8
 4029 0070 BD46     		mov	sp, r7
 4030              		.cfi_def_cfa_register 13
 4031              		@ sp needed
 4032 0072 80BD     		pop	{r7, pc}
 4033              	.L162:
 4034              		.align	2
 4035              	.L161:
 4036 0074 A8C10F40 		.word	1074774440
 4037              		.cfi_endproc
 4038              	.LFE387:
 4040              		.section	.text._ZN4_I2C10get_StatusEv,"ax",%progbits
 4041              		.align	1
 4042              		.global	_ZN4_I2C10get_StatusEv
 4043              		.syntax unified
 4044              		.thumb
 4045              		.thumb_func
 4046              		.fpu softvfp
 4048              	_ZN4_I2C10get_StatusEv:
 4049              	.LFB388:
 482:../src/lpc_xav.cpp **** 
 483:../src/lpc_xav.cpp **** uint8_t _I2C::get_Status()
 484:../src/lpc_xav.cpp **** {
 4050              		.loc 1 484 0
 4051              		.cfi_startproc
 4052              		@ args = 0, pretend = 0, frame = 8
 4053              		@ frame_needed = 1, uses_anonymous_args = 0
 4054              		@ link register save eliminated.
 4055 0000 80B4     		push	{r7}
 4056              		.cfi_def_cfa_offset 4
 4057              		.cfi_offset 7, -4
 4058 0002 83B0     		sub	sp, sp, #12
 4059              		.cfi_def_cfa_offset 16
 4060 0004 00AF     		add	r7, sp, #0
 4061              		.cfi_def_cfa_register 7
 4062 0006 7860     		str	r0, [r7, #4]
 485:../src/lpc_xav.cpp **** 	return *(_Periph + 1); // I2STAT
 4063              		.loc 1 485 0
 4064 0008 7B68     		ldr	r3, [r7, #4]
 4065 000a 1B68     		ldr	r3, [r3]
 4066 000c 0433     		adds	r3, r3, #4
 4067 000e 1B68     		ldr	r3, [r3]
 4068 0010 DBB2     		uxtb	r3, r3
 486:../src/lpc_xav.cpp **** }
 4069              		.loc 1 486 0
 4070 0012 1846     		mov	r0, r3
 4071 0014 0C37     		adds	r7, r7, #12
 4072              		.cfi_def_cfa_offset 4
 4073 0016 BD46     		mov	sp, r7
 4074              		.cfi_def_cfa_register 13
 4075              		@ sp needed
 4076 0018 80BC     		pop	{r7}
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 79


 4077              		.cfi_restore 7
 4078              		.cfi_def_cfa_offset 0
 4079 001a 7047     		bx	lr
 4080              		.cfi_endproc
 4081              	.LFE388:
 4083              		.section	.text._ZN4_I2C12New_SequenceEht,"ax",%progbits
 4084              		.align	1
 4085              		.global	_ZN4_I2C12New_SequenceEht
 4086              		.syntax unified
 4087              		.thumb
 4088              		.thumb_func
 4089              		.fpu softvfp
 4091              	_ZN4_I2C12New_SequenceEht:
 4092              	.LFB389:
 487:../src/lpc_xav.cpp **** 
 488:../src/lpc_xav.cpp **** void _I2C::New_Sequence(uint8_t Slave_Address, uint16_t readLength)
 489:../src/lpc_xav.cpp **** {
 4093              		.loc 1 489 0
 4094              		.cfi_startproc
 4095              		@ args = 0, pretend = 0, frame = 16
 4096              		@ frame_needed = 1, uses_anonymous_args = 0
 4097              		@ link register save eliminated.
 4098 0000 80B4     		push	{r7}
 4099              		.cfi_def_cfa_offset 4
 4100              		.cfi_offset 7, -4
 4101 0002 85B0     		sub	sp, sp, #20
 4102              		.cfi_def_cfa_offset 24
 4103 0004 00AF     		add	r7, sp, #0
 4104              		.cfi_def_cfa_register 7
 4105 0006 7860     		str	r0, [r7, #4]
 4106 0008 0B46     		mov	r3, r1
 4107 000a FB70     		strb	r3, [r7, #3]
 4108 000c 1346     		mov	r3, r2	@ movhi
 4109 000e 3B80     		strh	r3, [r7]	@ movhi
 4110              	.LBB11:
 490:../src/lpc_xav.cpp **** 	for(uint16_t i = 0; i < 512; i++){ // Reset Buffer, length and master counter
 4111              		.loc 1 490 0
 4112 0010 0023     		movs	r3, #0
 4113 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 4114              	.L167:
 4115              		.loc 1 490 0 is_stmt 0 discriminator 3
 4116 0014 FB89     		ldrh	r3, [r7, #14]
 4117 0016 B3F5007F 		cmp	r3, #512
 4118 001a 0ED2     		bcs	.L166
 491:../src/lpc_xav.cpp **** 		tx_buf[i] = 0;
 4119              		.loc 1 491 0 is_stmt 1 discriminator 2
 4120 001c FB89     		ldrh	r3, [r7, #14]
 4121 001e 7A68     		ldr	r2, [r7, #4]
 4122 0020 1344     		add	r3, r3, r2
 4123 0022 0022     		movs	r2, #0
 4124 0024 9A71     		strb	r2, [r3, #6]
 492:../src/lpc_xav.cpp **** 		rx_buf[i] = 0;
 4125              		.loc 1 492 0 discriminator 2
 4126 0026 FB89     		ldrh	r3, [r7, #14]
 4127 0028 7A68     		ldr	r2, [r7, #4]
 4128 002a 1344     		add	r3, r3, r2
 4129 002c 0022     		movs	r2, #0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 80


 4130 002e 83F80622 		strb	r2, [r3, #518]
 490:../src/lpc_xav.cpp **** 	for(uint16_t i = 0; i < 512; i++){ // Reset Buffer, length and master counter
 4131              		.loc 1 490 0 discriminator 2
 4132 0032 FB89     		ldrh	r3, [r7, #14]
 4133 0034 0133     		adds	r3, r3, #1
 4134 0036 FB81     		strh	r3, [r7, #14]	@ movhi
 4135 0038 ECE7     		b	.L167
 4136              	.L166:
 4137              	.LBE11:
 493:../src/lpc_xav.cpp **** 	}
 494:../src/lpc_xav.cpp **** 
 495:../src/lpc_xav.cpp **** 	Read_Length = readLength;
 4138              		.loc 1 495 0
 4139 003a 3B88     		ldrh	r3, [r7]	@ movhi
 4140 003c DAB2     		uxtb	r2, r3
 4141 003e 7B68     		ldr	r3, [r7, #4]
 4142 0040 83F80A24 		strb	r2, [r3, #1034]
 496:../src/lpc_xav.cpp **** 	Msg_Length = 0;
 4143              		.loc 1 496 0
 4144 0044 7B68     		ldr	r3, [r7, #4]
 4145 0046 0022     		movs	r2, #0
 4146 0048 83F80924 		strb	r2, [r3, #1033]
 497:../src/lpc_xav.cpp **** 	M_Counter_tx = 0;
 4147              		.loc 1 497 0
 4148 004c 7B68     		ldr	r3, [r7, #4]
 4149 004e 0022     		movs	r2, #0
 4150 0050 83F80724 		strb	r2, [r3, #1031]
 498:../src/lpc_xav.cpp **** 	M_Counter_rx = 0;
 4151              		.loc 1 498 0
 4152 0054 7B68     		ldr	r3, [r7, #4]
 4153 0056 0022     		movs	r2, #0
 4154 0058 83F80824 		strb	r2, [r3, #1032]
 499:../src/lpc_xav.cpp **** 
 500:../src/lpc_xav.cpp **** 	tx_buf[Msg_Length++] = Slave_Address;
 4155              		.loc 1 500 0
 4156 005c 7B68     		ldr	r3, [r7, #4]
 4157 005e 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4158 0062 5A1C     		adds	r2, r3, #1
 4159 0064 D1B2     		uxtb	r1, r2
 4160 0066 7A68     		ldr	r2, [r7, #4]
 4161 0068 82F80914 		strb	r1, [r2, #1033]
 4162 006c 1A46     		mov	r2, r3
 4163 006e 7B68     		ldr	r3, [r7, #4]
 4164 0070 1344     		add	r3, r3, r2
 4165 0072 FA78     		ldrb	r2, [r7, #3]
 4166 0074 9A71     		strb	r2, [r3, #6]
 501:../src/lpc_xav.cpp **** }
 4167              		.loc 1 501 0
 4168 0076 00BF     		nop
 4169 0078 1437     		adds	r7, r7, #20
 4170              		.cfi_def_cfa_offset 4
 4171 007a BD46     		mov	sp, r7
 4172              		.cfi_def_cfa_register 13
 4173              		@ sp needed
 4174 007c 80BC     		pop	{r7}
 4175              		.cfi_restore 7
 4176              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 81


 4177 007e 7047     		bx	lr
 4178              		.cfi_endproc
 4179              	.LFE389:
 4181              		.section	.text._ZN4_I2C10Add_StringEPKc,"ax",%progbits
 4182              		.align	1
 4183              		.global	_ZN4_I2C10Add_StringEPKc
 4184              		.syntax unified
 4185              		.thumb
 4186              		.thumb_func
 4187              		.fpu softvfp
 4189              	_ZN4_I2C10Add_StringEPKc:
 4190              	.LFB390:
 502:../src/lpc_xav.cpp **** 
 503:../src/lpc_xav.cpp **** void _I2C::Add_String(const char * StrToSend)
 504:../src/lpc_xav.cpp **** {
 4191              		.loc 1 504 0
 4192              		.cfi_startproc
 4193              		@ args = 0, pretend = 0, frame = 8
 4194              		@ frame_needed = 1, uses_anonymous_args = 0
 4195              		@ link register save eliminated.
 4196 0000 80B4     		push	{r7}
 4197              		.cfi_def_cfa_offset 4
 4198              		.cfi_offset 7, -4
 4199 0002 83B0     		sub	sp, sp, #12
 4200              		.cfi_def_cfa_offset 16
 4201 0004 00AF     		add	r7, sp, #0
 4202              		.cfi_def_cfa_register 7
 4203 0006 7860     		str	r0, [r7, #4]
 4204 0008 3960     		str	r1, [r7]
 4205              	.L170:
 505:../src/lpc_xav.cpp **** 	while(*StrToSend != '\0'){
 4206              		.loc 1 505 0
 4207 000a 3B68     		ldr	r3, [r7]
 4208 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4209 000e 002B     		cmp	r3, #0
 4210 0010 10D0     		beq	.L171
 506:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = *StrToSend++;
 4211              		.loc 1 506 0
 4212 0012 3B68     		ldr	r3, [r7]
 4213 0014 5A1C     		adds	r2, r3, #1
 4214 0016 3A60     		str	r2, [r7]
 4215 0018 7A68     		ldr	r2, [r7, #4]
 4216 001a 92F80924 		ldrb	r2, [r2, #1033]	@ zero_extendqisi2
 4217 001e 511C     		adds	r1, r2, #1
 4218 0020 C8B2     		uxtb	r0, r1
 4219 0022 7968     		ldr	r1, [r7, #4]
 4220 0024 81F80904 		strb	r0, [r1, #1033]
 4221 0028 1146     		mov	r1, r2
 4222 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4223 002c 7B68     		ldr	r3, [r7, #4]
 4224 002e 0B44     		add	r3, r3, r1
 4225 0030 9A71     		strb	r2, [r3, #6]
 505:../src/lpc_xav.cpp **** 	while(*StrToSend != '\0'){
 4226              		.loc 1 505 0
 4227 0032 EAE7     		b	.L170
 4228              	.L171:
 507:../src/lpc_xav.cpp **** 	}
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 82


 508:../src/lpc_xav.cpp **** }
 4229              		.loc 1 508 0
 4230 0034 00BF     		nop
 4231 0036 0C37     		adds	r7, r7, #12
 4232              		.cfi_def_cfa_offset 4
 4233 0038 BD46     		mov	sp, r7
 4234              		.cfi_def_cfa_register 13
 4235              		@ sp needed
 4236 003a 80BC     		pop	{r7}
 4237              		.cfi_restore 7
 4238              		.cfi_def_cfa_offset 0
 4239 003c 7047     		bx	lr
 4240              		.cfi_endproc
 4241              	.LFE390:
 4243              		.section	.text._ZN4_I2C15Add_BCD_IntegerEmh,"ax",%progbits
 4244              		.align	1
 4245              		.global	_ZN4_I2C15Add_BCD_IntegerEmh
 4246              		.syntax unified
 4247              		.thumb
 4248              		.thumb_func
 4249              		.fpu softvfp
 4251              	_ZN4_I2C15Add_BCD_IntegerEmh:
 4252              	.LFB391:
 509:../src/lpc_xav.cpp **** 
 510:../src/lpc_xav.cpp **** void _I2C::Add_BCD_Integer(uint32_t Decimal_uint, uint8_t NbDigits)
 511:../src/lpc_xav.cpp **** {
 4253              		.loc 1 511 0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 16
 4256              		@ frame_needed = 1, uses_anonymous_args = 0
 4257 0000 80B5     		push	{r7, lr}
 4258              		.cfi_def_cfa_offset 8
 4259              		.cfi_offset 7, -8
 4260              		.cfi_offset 14, -4
 4261 0002 84B0     		sub	sp, sp, #16
 4262              		.cfi_def_cfa_offset 24
 4263 0004 00AF     		add	r7, sp, #0
 4264              		.cfi_def_cfa_register 7
 4265 0006 F860     		str	r0, [r7, #12]
 4266 0008 B960     		str	r1, [r7, #8]
 4267 000a 1346     		mov	r3, r2
 4268 000c FB71     		strb	r3, [r7, #7]
 512:../src/lpc_xav.cpp **** 	IntegerToBCD(LCD_BCD, Decimal_uint);
 4269              		.loc 1 512 0
 4270 000e BB68     		ldr	r3, [r7, #8]
 4271 0010 9BB2     		uxth	r3, r3
 4272 0012 1946     		mov	r1, r3
 4273 0014 3548     		ldr	r0, .L180
 4274 0016 FFF7FEFF 		bl	_Z12IntegerToBCDR5BCD_tt
 513:../src/lpc_xav.cpp **** 
 514:../src/lpc_xav.cpp **** 	switch(NbDigits){
 4275              		.loc 1 514 0
 4276 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4277 001c 013B     		subs	r3, r3, #1
 4278 001e 032B     		cmp	r3, #3
 4279 0020 5FD8     		bhi	.L179
 4280 0022 01A2     		adr	r2, .L175
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 83


 4281 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4282              		.p2align 2
 4283              	.L175:
 4284 0028 B7000000 		.word	.L174+1
 4285 002c 8D000000 		.word	.L176+1
 4286 0030 63000000 		.word	.L177+1
 4287 0034 39000000 		.word	.L178+1
 4288              		.p2align 1
 4289              	.L178:
 515:../src/lpc_xav.cpp **** 	case 4:
 516:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.mil + 48);
 4290              		.loc 1 516 0
 4291 0038 2C4B     		ldr	r3, .L180
 4292 003a DB78     		ldrb	r3, [r3, #3]
 4293 003c C3F30313 		ubfx	r3, r3, #4, #4
 4294 0040 DBB2     		uxtb	r3, r3
 4295 0042 1846     		mov	r0, r3
 4296 0044 FB68     		ldr	r3, [r7, #12]
 4297 0046 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4298 004a 5A1C     		adds	r2, r3, #1
 4299 004c D1B2     		uxtb	r1, r2
 4300 004e FA68     		ldr	r2, [r7, #12]
 4301 0050 82F80914 		strb	r1, [r2, #1033]
 4302 0054 1946     		mov	r1, r3
 4303 0056 00F13003 		add	r3, r0, #48
 4304 005a DAB2     		uxtb	r2, r3
 4305 005c FB68     		ldr	r3, [r7, #12]
 4306 005e 0B44     		add	r3, r3, r1
 4307 0060 9A71     		strb	r2, [r3, #6]
 4308              	.L177:
 517:../src/lpc_xav.cpp **** 	case 3:
 518:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.cen + 48);
 4309              		.loc 1 518 0
 4310 0062 224B     		ldr	r3, .L180
 4311 0064 DB78     		ldrb	r3, [r3, #3]
 4312 0066 C3F30303 		ubfx	r3, r3, #0, #4
 4313 006a DBB2     		uxtb	r3, r3
 4314 006c 1846     		mov	r0, r3
 4315 006e FB68     		ldr	r3, [r7, #12]
 4316 0070 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4317 0074 5A1C     		adds	r2, r3, #1
 4318 0076 D1B2     		uxtb	r1, r2
 4319 0078 FA68     		ldr	r2, [r7, #12]
 4320 007a 82F80914 		strb	r1, [r2, #1033]
 4321 007e 1946     		mov	r1, r3
 4322 0080 00F13003 		add	r3, r0, #48
 4323 0084 DAB2     		uxtb	r2, r3
 4324 0086 FB68     		ldr	r3, [r7, #12]
 4325 0088 0B44     		add	r3, r3, r1
 4326 008a 9A71     		strb	r2, [r3, #6]
 4327              	.L176:
 519:../src/lpc_xav.cpp **** 	case 2:
 520:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.diz + 48);
 4328              		.loc 1 520 0
 4329 008c 174B     		ldr	r3, .L180
 4330 008e 9B78     		ldrb	r3, [r3, #2]
 4331 0090 C3F30313 		ubfx	r3, r3, #4, #4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 84


 4332 0094 DBB2     		uxtb	r3, r3
 4333 0096 1846     		mov	r0, r3
 4334 0098 FB68     		ldr	r3, [r7, #12]
 4335 009a 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4336 009e 5A1C     		adds	r2, r3, #1
 4337 00a0 D1B2     		uxtb	r1, r2
 4338 00a2 FA68     		ldr	r2, [r7, #12]
 4339 00a4 82F80914 		strb	r1, [r2, #1033]
 4340 00a8 1946     		mov	r1, r3
 4341 00aa 00F13003 		add	r3, r0, #48
 4342 00ae DAB2     		uxtb	r2, r3
 4343 00b0 FB68     		ldr	r3, [r7, #12]
 4344 00b2 0B44     		add	r3, r3, r1
 4345 00b4 9A71     		strb	r2, [r3, #6]
 4346              	.L174:
 521:../src/lpc_xav.cpp **** 	case 1:
 522:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.uni + 48);
 4347              		.loc 1 522 0
 4348 00b6 0D4B     		ldr	r3, .L180
 4349 00b8 9B78     		ldrb	r3, [r3, #2]
 4350 00ba C3F30303 		ubfx	r3, r3, #0, #4
 4351 00be DBB2     		uxtb	r3, r3
 4352 00c0 1846     		mov	r0, r3
 4353 00c2 FB68     		ldr	r3, [r7, #12]
 4354 00c4 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4355 00c8 5A1C     		adds	r2, r3, #1
 4356 00ca D1B2     		uxtb	r1, r2
 4357 00cc FA68     		ldr	r2, [r7, #12]
 4358 00ce 82F80914 		strb	r1, [r2, #1033]
 4359 00d2 1946     		mov	r1, r3
 4360 00d4 00F13003 		add	r3, r0, #48
 4361 00d8 DAB2     		uxtb	r2, r3
 4362 00da FB68     		ldr	r3, [r7, #12]
 4363 00dc 0B44     		add	r3, r3, r1
 4364 00de 9A71     		strb	r2, [r3, #6]
 523:../src/lpc_xav.cpp **** 		break;
 4365              		.loc 1 523 0
 4366 00e0 00BF     		nop
 4367              	.L179:
 524:../src/lpc_xav.cpp **** 	}
 525:../src/lpc_xav.cpp **** 
 526:../src/lpc_xav.cpp **** }
 4368              		.loc 1 526 0
 4369 00e2 00BF     		nop
 4370 00e4 1037     		adds	r7, r7, #16
 4371              		.cfi_def_cfa_offset 8
 4372 00e6 BD46     		mov	sp, r7
 4373              		.cfi_def_cfa_register 13
 4374              		@ sp needed
 4375 00e8 80BD     		pop	{r7, pc}
 4376              	.L181:
 4377 00ea 00BF     		.align	2
 4378              	.L180:
 4379 00ec 00000000 		.word	LCD_BCD
 4380              		.cfi_endproc
 4381              	.LFE391:
 4383              		.section	.text._ZN4_I2C13Add_BCD_FloatEmhh,"ax",%progbits
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 85


 4384              		.align	1
 4385              		.global	_ZN4_I2C13Add_BCD_FloatEmhh
 4386              		.syntax unified
 4387              		.thumb
 4388              		.thumb_func
 4389              		.fpu softvfp
 4391              	_ZN4_I2C13Add_BCD_FloatEmhh:
 4392              	.LFB392:
 527:../src/lpc_xav.cpp **** 
 528:../src/lpc_xav.cpp **** void _I2C::Add_BCD_Float(uint32_t Decimal_uint, uint8_t NbDigits, uint8_t DP_Position)
 529:../src/lpc_xav.cpp **** {
 4393              		.loc 1 529 0
 4394              		.cfi_startproc
 4395              		@ args = 0, pretend = 0, frame = 16
 4396              		@ frame_needed = 1, uses_anonymous_args = 0
 4397 0000 80B5     		push	{r7, lr}
 4398              		.cfi_def_cfa_offset 8
 4399              		.cfi_offset 7, -8
 4400              		.cfi_offset 14, -4
 4401 0002 84B0     		sub	sp, sp, #16
 4402              		.cfi_def_cfa_offset 24
 4403 0004 00AF     		add	r7, sp, #0
 4404              		.cfi_def_cfa_register 7
 4405 0006 F860     		str	r0, [r7, #12]
 4406 0008 B960     		str	r1, [r7, #8]
 4407 000a 1146     		mov	r1, r2
 4408 000c 1A46     		mov	r2, r3
 4409 000e 0B46     		mov	r3, r1
 4410 0010 FB71     		strb	r3, [r7, #7]
 4411 0012 1346     		mov	r3, r2
 4412 0014 BB71     		strb	r3, [r7, #6]
 530:../src/lpc_xav.cpp **** 	IntegerToBCD(LCD_BCD, Decimal_uint);
 4413              		.loc 1 530 0
 4414 0016 BB68     		ldr	r3, [r7, #8]
 4415 0018 9BB2     		uxth	r3, r3
 4416 001a 1946     		mov	r1, r3
 4417 001c 4E48     		ldr	r0, .L190
 4418 001e FFF7FEFF 		bl	_Z12IntegerToBCDR5BCD_tt
 531:../src/lpc_xav.cpp **** 
 532:../src/lpc_xav.cpp **** 	switch(NbDigits){
 4419              		.loc 1 532 0
 4420 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4421 0024 013B     		subs	r3, r3, #1
 4422 0026 032B     		cmp	r3, #3
 4423 0028 00F29180 		bhi	.L189
 4424 002c 01A2     		adr	r2, .L185
 4425 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4426 0032 00BF     		.p2align 2
 4427              	.L185:
 4428 0034 23010000 		.word	.L184+1
 4429 0038 D9000000 		.word	.L186+1
 4430 003c 8F000000 		.word	.L187+1
 4431 0040 45000000 		.word	.L188+1
 4432              		.p2align 1
 4433              	.L188:
 533:../src/lpc_xav.cpp **** 	case 4:
 534:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.mil + 48);
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 86


 4434              		.loc 1 534 0
 4435 0044 444B     		ldr	r3, .L190
 4436 0046 DB78     		ldrb	r3, [r3, #3]
 4437 0048 C3F30313 		ubfx	r3, r3, #4, #4
 4438 004c DBB2     		uxtb	r3, r3
 4439 004e 1846     		mov	r0, r3
 4440 0050 FB68     		ldr	r3, [r7, #12]
 4441 0052 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4442 0056 5A1C     		adds	r2, r3, #1
 4443 0058 D1B2     		uxtb	r1, r2
 4444 005a FA68     		ldr	r2, [r7, #12]
 4445 005c 82F80914 		strb	r1, [r2, #1033]
 4446 0060 1946     		mov	r1, r3
 4447 0062 00F13003 		add	r3, r0, #48
 4448 0066 DAB2     		uxtb	r2, r3
 4449 0068 FB68     		ldr	r3, [r7, #12]
 4450 006a 0B44     		add	r3, r3, r1
 4451 006c 9A71     		strb	r2, [r3, #6]
 535:../src/lpc_xav.cpp **** 		if(DP_Position == 1)
 4452              		.loc 1 535 0
 4453 006e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4454 0070 012B     		cmp	r3, #1
 4455 0072 0CD1     		bne	.L187
 536:../src/lpc_xav.cpp **** 			tx_buf[Msg_Length++] = '.';
 4456              		.loc 1 536 0
 4457 0074 FB68     		ldr	r3, [r7, #12]
 4458 0076 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4459 007a 5A1C     		adds	r2, r3, #1
 4460 007c D1B2     		uxtb	r1, r2
 4461 007e FA68     		ldr	r2, [r7, #12]
 4462 0080 82F80914 		strb	r1, [r2, #1033]
 4463 0084 1A46     		mov	r2, r3
 4464 0086 FB68     		ldr	r3, [r7, #12]
 4465 0088 1344     		add	r3, r3, r2
 4466 008a 2E22     		movs	r2, #46
 4467 008c 9A71     		strb	r2, [r3, #6]
 4468              	.L187:
 537:../src/lpc_xav.cpp **** 	case 3:
 538:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.cen + 48);
 4469              		.loc 1 538 0
 4470 008e 324B     		ldr	r3, .L190
 4471 0090 DB78     		ldrb	r3, [r3, #3]
 4472 0092 C3F30303 		ubfx	r3, r3, #0, #4
 4473 0096 DBB2     		uxtb	r3, r3
 4474 0098 1846     		mov	r0, r3
 4475 009a FB68     		ldr	r3, [r7, #12]
 4476 009c 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4477 00a0 5A1C     		adds	r2, r3, #1
 4478 00a2 D1B2     		uxtb	r1, r2
 4479 00a4 FA68     		ldr	r2, [r7, #12]
 4480 00a6 82F80914 		strb	r1, [r2, #1033]
 4481 00aa 1946     		mov	r1, r3
 4482 00ac 00F13003 		add	r3, r0, #48
 4483 00b0 DAB2     		uxtb	r2, r3
 4484 00b2 FB68     		ldr	r3, [r7, #12]
 4485 00b4 0B44     		add	r3, r3, r1
 4486 00b6 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 87


 539:../src/lpc_xav.cpp **** 		if(DP_Position == 2)
 4487              		.loc 1 539 0
 4488 00b8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4489 00ba 022B     		cmp	r3, #2
 4490 00bc 0CD1     		bne	.L186
 540:../src/lpc_xav.cpp **** 			tx_buf[Msg_Length++] = '.';
 4491              		.loc 1 540 0
 4492 00be FB68     		ldr	r3, [r7, #12]
 4493 00c0 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4494 00c4 5A1C     		adds	r2, r3, #1
 4495 00c6 D1B2     		uxtb	r1, r2
 4496 00c8 FA68     		ldr	r2, [r7, #12]
 4497 00ca 82F80914 		strb	r1, [r2, #1033]
 4498 00ce 1A46     		mov	r2, r3
 4499 00d0 FB68     		ldr	r3, [r7, #12]
 4500 00d2 1344     		add	r3, r3, r2
 4501 00d4 2E22     		movs	r2, #46
 4502 00d6 9A71     		strb	r2, [r3, #6]
 4503              	.L186:
 541:../src/lpc_xav.cpp **** 	case 2:
 542:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.diz + 48);
 4504              		.loc 1 542 0
 4505 00d8 1F4B     		ldr	r3, .L190
 4506 00da 9B78     		ldrb	r3, [r3, #2]
 4507 00dc C3F30313 		ubfx	r3, r3, #4, #4
 4508 00e0 DBB2     		uxtb	r3, r3
 4509 00e2 1846     		mov	r0, r3
 4510 00e4 FB68     		ldr	r3, [r7, #12]
 4511 00e6 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4512 00ea 5A1C     		adds	r2, r3, #1
 4513 00ec D1B2     		uxtb	r1, r2
 4514 00ee FA68     		ldr	r2, [r7, #12]
 4515 00f0 82F80914 		strb	r1, [r2, #1033]
 4516 00f4 1946     		mov	r1, r3
 4517 00f6 00F13003 		add	r3, r0, #48
 4518 00fa DAB2     		uxtb	r2, r3
 4519 00fc FB68     		ldr	r3, [r7, #12]
 4520 00fe 0B44     		add	r3, r3, r1
 4521 0100 9A71     		strb	r2, [r3, #6]
 543:../src/lpc_xav.cpp **** 		if(DP_Position == 3)
 4522              		.loc 1 543 0
 4523 0102 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4524 0104 032B     		cmp	r3, #3
 4525 0106 0CD1     		bne	.L184
 544:../src/lpc_xav.cpp **** 			tx_buf[Msg_Length++] = '.';
 4526              		.loc 1 544 0
 4527 0108 FB68     		ldr	r3, [r7, #12]
 4528 010a 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4529 010e 5A1C     		adds	r2, r3, #1
 4530 0110 D1B2     		uxtb	r1, r2
 4531 0112 FA68     		ldr	r2, [r7, #12]
 4532 0114 82F80914 		strb	r1, [r2, #1033]
 4533 0118 1A46     		mov	r2, r3
 4534 011a FB68     		ldr	r3, [r7, #12]
 4535 011c 1344     		add	r3, r3, r2
 4536 011e 2E22     		movs	r2, #46
 4537 0120 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 88


 4538              	.L184:
 545:../src/lpc_xav.cpp **** 	case 1:
 546:../src/lpc_xav.cpp **** 		tx_buf[Msg_Length++] = (LCD_BCD.uni + 48);
 4539              		.loc 1 546 0
 4540 0122 0D4B     		ldr	r3, .L190
 4541 0124 9B78     		ldrb	r3, [r3, #2]
 4542 0126 C3F30303 		ubfx	r3, r3, #0, #4
 4543 012a DBB2     		uxtb	r3, r3
 4544 012c 1846     		mov	r0, r3
 4545 012e FB68     		ldr	r3, [r7, #12]
 4546 0130 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4547 0134 5A1C     		adds	r2, r3, #1
 4548 0136 D1B2     		uxtb	r1, r2
 4549 0138 FA68     		ldr	r2, [r7, #12]
 4550 013a 82F80914 		strb	r1, [r2, #1033]
 4551 013e 1946     		mov	r1, r3
 4552 0140 00F13003 		add	r3, r0, #48
 4553 0144 DAB2     		uxtb	r2, r3
 4554 0146 FB68     		ldr	r3, [r7, #12]
 4555 0148 0B44     		add	r3, r3, r1
 4556 014a 9A71     		strb	r2, [r3, #6]
 547:../src/lpc_xav.cpp **** 		break;
 4557              		.loc 1 547 0
 4558 014c 00BF     		nop
 4559              	.L189:
 548:../src/lpc_xav.cpp **** 	}
 549:../src/lpc_xav.cpp **** }
 4560              		.loc 1 549 0
 4561 014e 00BF     		nop
 4562 0150 1037     		adds	r7, r7, #16
 4563              		.cfi_def_cfa_offset 8
 4564 0152 BD46     		mov	sp, r7
 4565              		.cfi_def_cfa_register 13
 4566              		@ sp needed
 4567 0154 80BD     		pop	{r7, pc}
 4568              	.L191:
 4569 0156 00BF     		.align	2
 4570              	.L190:
 4571 0158 00000000 		.word	LCD_BCD
 4572              		.cfi_endproc
 4573              	.LFE392:
 4575              		.section	.text._ZN4_I2C8Add_ByteEh,"ax",%progbits
 4576              		.align	1
 4577              		.global	_ZN4_I2C8Add_ByteEh
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu softvfp
 4583              	_ZN4_I2C8Add_ByteEh:
 4584              	.LFB393:
 550:../src/lpc_xav.cpp **** 
 551:../src/lpc_xav.cpp **** void _I2C::Add_Byte(uint8_t ByteToSend)
 552:../src/lpc_xav.cpp **** {
 4585              		.loc 1 552 0
 4586              		.cfi_startproc
 4587              		@ args = 0, pretend = 0, frame = 8
 4588              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 89


 4589              		@ link register save eliminated.
 4590 0000 80B4     		push	{r7}
 4591              		.cfi_def_cfa_offset 4
 4592              		.cfi_offset 7, -4
 4593 0002 83B0     		sub	sp, sp, #12
 4594              		.cfi_def_cfa_offset 16
 4595 0004 00AF     		add	r7, sp, #0
 4596              		.cfi_def_cfa_register 7
 4597 0006 7860     		str	r0, [r7, #4]
 4598 0008 0B46     		mov	r3, r1
 4599 000a FB70     		strb	r3, [r7, #3]
 553:../src/lpc_xav.cpp **** 	tx_buf[Msg_Length++] = ByteToSend;
 4600              		.loc 1 553 0
 4601 000c 7B68     		ldr	r3, [r7, #4]
 4602 000e 93F80934 		ldrb	r3, [r3, #1033]	@ zero_extendqisi2
 4603 0012 5A1C     		adds	r2, r3, #1
 4604 0014 D1B2     		uxtb	r1, r2
 4605 0016 7A68     		ldr	r2, [r7, #4]
 4606 0018 82F80914 		strb	r1, [r2, #1033]
 4607 001c 1A46     		mov	r2, r3
 4608 001e 7B68     		ldr	r3, [r7, #4]
 4609 0020 1344     		add	r3, r3, r2
 4610 0022 FA78     		ldrb	r2, [r7, #3]
 4611 0024 9A71     		strb	r2, [r3, #6]
 554:../src/lpc_xav.cpp **** }
 4612              		.loc 1 554 0
 4613 0026 00BF     		nop
 4614 0028 0C37     		adds	r7, r7, #12
 4615              		.cfi_def_cfa_offset 4
 4616 002a BD46     		mov	sp, r7
 4617              		.cfi_def_cfa_register 13
 4618              		@ sp needed
 4619 002c 80BC     		pop	{r7}
 4620              		.cfi_restore 7
 4621              		.cfi_def_cfa_offset 0
 4622 002e 7047     		bx	lr
 4623              		.cfi_endproc
 4624              	.LFE393:
 4626              		.section	.text._ZN4_I2C14Read_Next_ByteEv,"ax",%progbits
 4627              		.align	1
 4628              		.global	_ZN4_I2C14Read_Next_ByteEv
 4629              		.syntax unified
 4630              		.thumb
 4631              		.thumb_func
 4632              		.fpu softvfp
 4634              	_ZN4_I2C14Read_Next_ByteEv:
 4635              	.LFB394:
 555:../src/lpc_xav.cpp **** 
 556:../src/lpc_xav.cpp **** void _I2C::Read_Next_Byte()
 557:../src/lpc_xav.cpp **** {
 4636              		.loc 1 557 0
 4637              		.cfi_startproc
 4638              		@ args = 0, pretend = 0, frame = 8
 4639              		@ frame_needed = 1, uses_anonymous_args = 0
 4640              		@ link register save eliminated.
 4641 0000 80B4     		push	{r7}
 4642              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 90


 4643              		.cfi_offset 7, -4
 4644 0002 83B0     		sub	sp, sp, #12
 4645              		.cfi_def_cfa_offset 16
 4646 0004 00AF     		add	r7, sp, #0
 4647              		.cfi_def_cfa_register 7
 4648 0006 7860     		str	r0, [r7, #4]
 558:../src/lpc_xav.cpp **** 	rx_buf[M_Counter_rx++] = *(_Periph + 2);// Get I2DAT byte
 4649              		.loc 1 558 0
 4650 0008 7B68     		ldr	r3, [r7, #4]
 4651 000a 1B68     		ldr	r3, [r3]
 4652 000c 0833     		adds	r3, r3, #8
 4653 000e 1868     		ldr	r0, [r3]
 4654 0010 7B68     		ldr	r3, [r7, #4]
 4655 0012 93F80834 		ldrb	r3, [r3, #1032]	@ zero_extendqisi2
 4656 0016 5A1C     		adds	r2, r3, #1
 4657 0018 D1B2     		uxtb	r1, r2
 4658 001a 7A68     		ldr	r2, [r7, #4]
 4659 001c 82F80814 		strb	r1, [r2, #1032]
 4660 0020 1946     		mov	r1, r3
 4661 0022 C2B2     		uxtb	r2, r0
 4662 0024 7B68     		ldr	r3, [r7, #4]
 4663 0026 0B44     		add	r3, r3, r1
 4664 0028 83F80622 		strb	r2, [r3, #518]
 559:../src/lpc_xav.cpp **** 
 560:../src/lpc_xav.cpp **** 	*(_Periph + 6) = 0x08; // Clear SI in I2CONCLR
 4665              		.loc 1 560 0
 4666 002c 7B68     		ldr	r3, [r7, #4]
 4667 002e 1B68     		ldr	r3, [r3]
 4668 0030 1833     		adds	r3, r3, #24
 4669 0032 0822     		movs	r2, #8
 4670 0034 1A60     		str	r2, [r3]
 561:../src/lpc_xav.cpp **** }
 4671              		.loc 1 561 0
 4672 0036 00BF     		nop
 4673 0038 0C37     		adds	r7, r7, #12
 4674              		.cfi_def_cfa_offset 4
 4675 003a BD46     		mov	sp, r7
 4676              		.cfi_def_cfa_register 13
 4677              		@ sp needed
 4678 003c 80BC     		pop	{r7}
 4679              		.cfi_restore 7
 4680              		.cfi_def_cfa_offset 0
 4681 003e 7047     		bx	lr
 4682              		.cfi_endproc
 4683              	.LFE394:
 4685              		.section	.text._ZN4_I2C14Send_Next_ByteEv,"ax",%progbits
 4686              		.align	1
 4687              		.global	_ZN4_I2C14Send_Next_ByteEv
 4688              		.syntax unified
 4689              		.thumb
 4690              		.thumb_func
 4691              		.fpu softvfp
 4693              	_ZN4_I2C14Send_Next_ByteEv:
 4694              	.LFB395:
 562:../src/lpc_xav.cpp **** 
 563:../src/lpc_xav.cpp **** void _I2C::Send_Next_Byte()
 564:../src/lpc_xav.cpp **** {
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 91


 4695              		.loc 1 564 0
 4696              		.cfi_startproc
 4697              		@ args = 0, pretend = 0, frame = 8
 4698              		@ frame_needed = 1, uses_anonymous_args = 0
 4699              		@ link register save eliminated.
 4700 0000 80B4     		push	{r7}
 4701              		.cfi_def_cfa_offset 4
 4702              		.cfi_offset 7, -4
 4703 0002 83B0     		sub	sp, sp, #12
 4704              		.cfi_def_cfa_offset 16
 4705 0004 00AF     		add	r7, sp, #0
 4706              		.cfi_def_cfa_register 7
 4707 0006 7860     		str	r0, [r7, #4]
 565:../src/lpc_xav.cpp **** 	*(_Periph + 2) = tx_buf[M_Counter_tx++]; // Put next byte in I2DAT
 4708              		.loc 1 565 0
 4709 0008 7B68     		ldr	r3, [r7, #4]
 4710 000a 93F80734 		ldrb	r3, [r3, #1031]	@ zero_extendqisi2
 4711 000e 5A1C     		adds	r2, r3, #1
 4712 0010 D1B2     		uxtb	r1, r2
 4713 0012 7A68     		ldr	r2, [r7, #4]
 4714 0014 82F80714 		strb	r1, [r2, #1031]
 4715 0018 1A46     		mov	r2, r3
 4716 001a 7B68     		ldr	r3, [r7, #4]
 4717 001c 1344     		add	r3, r3, r2
 4718 001e 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 4719 0020 7B68     		ldr	r3, [r7, #4]
 4720 0022 1B68     		ldr	r3, [r3]
 4721 0024 0833     		adds	r3, r3, #8
 4722 0026 1A60     		str	r2, [r3]
 566:../src/lpc_xav.cpp **** 
 567:../src/lpc_xav.cpp **** 	*(_Periph + 6) = 0x08; // Clear SI in I2CONCLR
 4723              		.loc 1 567 0
 4724 0028 7B68     		ldr	r3, [r7, #4]
 4725 002a 1B68     		ldr	r3, [r3]
 4726 002c 1833     		adds	r3, r3, #24
 4727 002e 0822     		movs	r2, #8
 4728 0030 1A60     		str	r2, [r3]
 568:../src/lpc_xav.cpp **** }
 4729              		.loc 1 568 0
 4730 0032 00BF     		nop
 4731 0034 0C37     		adds	r7, r7, #12
 4732              		.cfi_def_cfa_offset 4
 4733 0036 BD46     		mov	sp, r7
 4734              		.cfi_def_cfa_register 13
 4735              		@ sp needed
 4736 0038 80BC     		pop	{r7}
 4737              		.cfi_restore 7
 4738              		.cfi_def_cfa_offset 0
 4739 003a 7047     		bx	lr
 4740              		.cfi_endproc
 4741              	.LFE395:
 4743              		.section	.text._ZN4_I2C12Send_AddressEv,"ax",%progbits
 4744              		.align	1
 4745              		.global	_ZN4_I2C12Send_AddressEv
 4746              		.syntax unified
 4747              		.thumb
 4748              		.thumb_func
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 92


 4749              		.fpu softvfp
 4751              	_ZN4_I2C12Send_AddressEv:
 4752              	.LFB396:
 569:../src/lpc_xav.cpp **** 
 570:../src/lpc_xav.cpp **** void _I2C::Send_Address()
 571:../src/lpc_xav.cpp **** {
 4753              		.loc 1 571 0
 4754              		.cfi_startproc
 4755              		@ args = 0, pretend = 0, frame = 8
 4756              		@ frame_needed = 1, uses_anonymous_args = 0
 4757              		@ link register save eliminated.
 4758 0000 80B4     		push	{r7}
 4759              		.cfi_def_cfa_offset 4
 4760              		.cfi_offset 7, -4
 4761 0002 83B0     		sub	sp, sp, #12
 4762              		.cfi_def_cfa_offset 16
 4763 0004 00AF     		add	r7, sp, #0
 4764              		.cfi_def_cfa_register 7
 4765 0006 7860     		str	r0, [r7, #4]
 572:../src/lpc_xav.cpp **** 	*(_Periph + 2) = tx_buf[M_Counter_tx++]; // Put address in I2DAT
 4766              		.loc 1 572 0
 4767 0008 7B68     		ldr	r3, [r7, #4]
 4768 000a 93F80734 		ldrb	r3, [r3, #1031]	@ zero_extendqisi2
 4769 000e 5A1C     		adds	r2, r3, #1
 4770 0010 D1B2     		uxtb	r1, r2
 4771 0012 7A68     		ldr	r2, [r7, #4]
 4772 0014 82F80714 		strb	r1, [r2, #1031]
 4773 0018 1A46     		mov	r2, r3
 4774 001a 7B68     		ldr	r3, [r7, #4]
 4775 001c 1344     		add	r3, r3, r2
 4776 001e 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 4777 0020 7B68     		ldr	r3, [r7, #4]
 4778 0022 1B68     		ldr	r3, [r3]
 4779 0024 0833     		adds	r3, r3, #8
 4780 0026 1A60     		str	r2, [r3]
 573:../src/lpc_xav.cpp **** 
 574:../src/lpc_xav.cpp **** 	*(_Periph + 6) = 0x28; // Clear STA and SI in I2CONCLR
 4781              		.loc 1 574 0
 4782 0028 7B68     		ldr	r3, [r7, #4]
 4783 002a 1B68     		ldr	r3, [r3]
 4784 002c 1833     		adds	r3, r3, #24
 4785 002e 2822     		movs	r2, #40
 4786 0030 1A60     		str	r2, [r3]
 575:../src/lpc_xav.cpp **** }
 4787              		.loc 1 575 0
 4788 0032 00BF     		nop
 4789 0034 0C37     		adds	r7, r7, #12
 4790              		.cfi_def_cfa_offset 4
 4791 0036 BD46     		mov	sp, r7
 4792              		.cfi_def_cfa_register 13
 4793              		@ sp needed
 4794 0038 80BC     		pop	{r7}
 4795              		.cfi_restore 7
 4796              		.cfi_def_cfa_offset 0
 4797 003a 7047     		bx	lr
 4798              		.cfi_endproc
 4799              	.LFE396:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 93


 4801              		.section	.text._ZN4_I2C9Send_StopEv,"ax",%progbits
 4802              		.align	1
 4803              		.global	_ZN4_I2C9Send_StopEv
 4804              		.syntax unified
 4805              		.thumb
 4806              		.thumb_func
 4807              		.fpu softvfp
 4809              	_ZN4_I2C9Send_StopEv:
 4810              	.LFB397:
 576:../src/lpc_xav.cpp **** 
 577:../src/lpc_xav.cpp **** void _I2C::Send_Stop()
 578:../src/lpc_xav.cpp **** {
 4811              		.loc 1 578 0
 4812              		.cfi_startproc
 4813              		@ args = 0, pretend = 0, frame = 8
 4814              		@ frame_needed = 1, uses_anonymous_args = 0
 4815              		@ link register save eliminated.
 4816 0000 80B4     		push	{r7}
 4817              		.cfi_def_cfa_offset 4
 4818              		.cfi_offset 7, -4
 4819 0002 83B0     		sub	sp, sp, #12
 4820              		.cfi_def_cfa_offset 16
 4821 0004 00AF     		add	r7, sp, #0
 4822              		.cfi_def_cfa_register 7
 4823 0006 7860     		str	r0, [r7, #4]
 579:../src/lpc_xav.cpp **** 	*_Periph |= 0x10; // Set STO in I2CONSET
 4824              		.loc 1 579 0
 4825 0008 7B68     		ldr	r3, [r7, #4]
 4826 000a 1B68     		ldr	r3, [r3]
 4827 000c 1A68     		ldr	r2, [r3]
 4828 000e 7B68     		ldr	r3, [r7, #4]
 4829 0010 1B68     		ldr	r3, [r3]
 4830 0012 42F01002 		orr	r2, r2, #16
 4831 0016 1A60     		str	r2, [r3]
 580:../src/lpc_xav.cpp **** 
 581:../src/lpc_xav.cpp **** 	*(_Periph + 6) = 0x48; // Clear SI and I2EN in I2CONCLR
 4832              		.loc 1 581 0
 4833 0018 7B68     		ldr	r3, [r7, #4]
 4834 001a 1B68     		ldr	r3, [r3]
 4835 001c 1833     		adds	r3, r3, #24
 4836 001e 4822     		movs	r2, #72
 4837 0020 1A60     		str	r2, [r3]
 582:../src/lpc_xav.cpp **** 
 583:../src/lpc_xav.cpp **** 	Busy = false;
 4838              		.loc 1 583 0
 4839 0022 7B68     		ldr	r3, [r7, #4]
 4840 0024 0022     		movs	r2, #0
 4841 0026 83F80624 		strb	r2, [r3, #1030]
 584:../src/lpc_xav.cpp **** }
 4842              		.loc 1 584 0
 4843 002a 00BF     		nop
 4844 002c 0C37     		adds	r7, r7, #12
 4845              		.cfi_def_cfa_offset 4
 4846 002e BD46     		mov	sp, r7
 4847              		.cfi_def_cfa_register 13
 4848              		@ sp needed
 4849 0030 80BC     		pop	{r7}
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 94


 4850              		.cfi_restore 7
 4851              		.cfi_def_cfa_offset 0
 4852 0032 7047     		bx	lr
 4853              		.cfi_endproc
 4854              	.LFE397:
 4856              		.section	.text._ZN4_I2C9Send_nACKEv,"ax",%progbits
 4857              		.align	1
 4858              		.global	_ZN4_I2C9Send_nACKEv
 4859              		.syntax unified
 4860              		.thumb
 4861              		.thumb_func
 4862              		.fpu softvfp
 4864              	_ZN4_I2C9Send_nACKEv:
 4865              	.LFB398:
 585:../src/lpc_xav.cpp **** 
 586:../src/lpc_xav.cpp **** void _I2C::Send_nACK()
 587:../src/lpc_xav.cpp **** {
 4866              		.loc 1 587 0
 4867              		.cfi_startproc
 4868              		@ args = 0, pretend = 0, frame = 8
 4869              		@ frame_needed = 1, uses_anonymous_args = 0
 4870              		@ link register save eliminated.
 4871 0000 80B4     		push	{r7}
 4872              		.cfi_def_cfa_offset 4
 4873              		.cfi_offset 7, -4
 4874 0002 83B0     		sub	sp, sp, #12
 4875              		.cfi_def_cfa_offset 16
 4876 0004 00AF     		add	r7, sp, #0
 4877              		.cfi_def_cfa_register 7
 4878 0006 7860     		str	r0, [r7, #4]
 588:../src/lpc_xav.cpp **** 	*(_Periph + 6) = 0x0C; // Clear SI and AA in I2CONCLR
 4879              		.loc 1 588 0
 4880 0008 7B68     		ldr	r3, [r7, #4]
 4881 000a 1B68     		ldr	r3, [r3]
 4882 000c 1833     		adds	r3, r3, #24
 4883 000e 0C22     		movs	r2, #12
 4884 0010 1A60     		str	r2, [r3]
 589:../src/lpc_xav.cpp **** }
 4885              		.loc 1 589 0
 4886 0012 00BF     		nop
 4887 0014 0C37     		adds	r7, r7, #12
 4888              		.cfi_def_cfa_offset 4
 4889 0016 BD46     		mov	sp, r7
 4890              		.cfi_def_cfa_register 13
 4891              		@ sp needed
 4892 0018 80BC     		pop	{r7}
 4893              		.cfi_restore 7
 4894              		.cfi_def_cfa_offset 0
 4895 001a 7047     		bx	lr
 4896              		.cfi_endproc
 4897              	.LFE398:
 4899              		.section	.text._ZN4_I2C13Send_SequenceEv,"ax",%progbits
 4900              		.align	1
 4901              		.global	_ZN4_I2C13Send_SequenceEv
 4902              		.syntax unified
 4903              		.thumb
 4904              		.thumb_func
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 95


 4905              		.fpu softvfp
 4907              	_ZN4_I2C13Send_SequenceEv:
 4908              	.LFB399:
 590:../src/lpc_xav.cpp **** 
 591:../src/lpc_xav.cpp **** void _I2C::Send_Sequence()
 592:../src/lpc_xav.cpp **** {
 4909              		.loc 1 592 0
 4910              		.cfi_startproc
 4911              		@ args = 0, pretend = 0, frame = 8
 4912              		@ frame_needed = 1, uses_anonymous_args = 0
 4913              		@ link register save eliminated.
 4914 0000 80B4     		push	{r7}
 4915              		.cfi_def_cfa_offset 4
 4916              		.cfi_offset 7, -4
 4917 0002 83B0     		sub	sp, sp, #12
 4918              		.cfi_def_cfa_offset 16
 4919 0004 00AF     		add	r7, sp, #0
 4920              		.cfi_def_cfa_register 7
 4921 0006 7860     		str	r0, [r7, #4]
 593:../src/lpc_xav.cpp **** 	Busy = true;
 4922              		.loc 1 593 0
 4923 0008 7B68     		ldr	r3, [r7, #4]
 4924 000a 0122     		movs	r2, #1
 4925 000c 83F80624 		strb	r2, [r3, #1030]
 594:../src/lpc_xav.cpp **** 
 595:../src/lpc_xav.cpp **** 	*_Periph |= 0x64; // Set STA,I2EN and AA in I2CONSET
 4926              		.loc 1 595 0
 4927 0010 7B68     		ldr	r3, [r7, #4]
 4928 0012 1B68     		ldr	r3, [r3]
 4929 0014 1A68     		ldr	r2, [r3]
 4930 0016 7B68     		ldr	r3, [r7, #4]
 4931 0018 1B68     		ldr	r3, [r3]
 4932 001a 42F06402 		orr	r2, r2, #100
 4933 001e 1A60     		str	r2, [r3]
 596:../src/lpc_xav.cpp **** }
 4934              		.loc 1 596 0
 4935 0020 00BF     		nop
 4936 0022 0C37     		adds	r7, r7, #12
 4937              		.cfi_def_cfa_offset 4
 4938 0024 BD46     		mov	sp, r7
 4939              		.cfi_def_cfa_register 13
 4940              		@ sp needed
 4941 0026 80BC     		pop	{r7}
 4942              		.cfi_restore 7
 4943              		.cfi_def_cfa_offset 0
 4944 0028 7047     		bx	lr
 4945              		.cfi_endproc
 4946              	.LFE399:
 4948              		.section	.text._ZN4_I2C15Clear_InterruptEv,"ax",%progbits
 4949              		.align	1
 4950              		.global	_ZN4_I2C15Clear_InterruptEv
 4951              		.syntax unified
 4952              		.thumb
 4953              		.thumb_func
 4954              		.fpu softvfp
 4956              	_ZN4_I2C15Clear_InterruptEv:
 4957              	.LFB400:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 96


 597:../src/lpc_xav.cpp **** 
 598:../src/lpc_xav.cpp **** void _I2C::Clear_Interrupt()
 599:../src/lpc_xav.cpp **** {
 4958              		.loc 1 599 0
 4959              		.cfi_startproc
 4960              		@ args = 0, pretend = 0, frame = 8
 4961              		@ frame_needed = 1, uses_anonymous_args = 0
 4962              		@ link register save eliminated.
 4963 0000 80B4     		push	{r7}
 4964              		.cfi_def_cfa_offset 4
 4965              		.cfi_offset 7, -4
 4966 0002 83B0     		sub	sp, sp, #12
 4967              		.cfi_def_cfa_offset 16
 4968 0004 00AF     		add	r7, sp, #0
 4969              		.cfi_def_cfa_register 7
 4970 0006 7860     		str	r0, [r7, #4]
 600:../src/lpc_xav.cpp **** 	*(_Periph + 6) = 0x08; // Clear SI in I2CONCLR
 4971              		.loc 1 600 0
 4972 0008 7B68     		ldr	r3, [r7, #4]
 4973 000a 1B68     		ldr	r3, [r3]
 4974 000c 1833     		adds	r3, r3, #24
 4975 000e 0822     		movs	r2, #8
 4976 0010 1A60     		str	r2, [r3]
 601:../src/lpc_xav.cpp **** }
 4977              		.loc 1 601 0
 4978 0012 00BF     		nop
 4979 0014 0C37     		adds	r7, r7, #12
 4980              		.cfi_def_cfa_offset 4
 4981 0016 BD46     		mov	sp, r7
 4982              		.cfi_def_cfa_register 13
 4983              		@ sp needed
 4984 0018 80BC     		pop	{r7}
 4985              		.cfi_restore 7
 4986              		.cfi_def_cfa_offset 0
 4987 001a 7047     		bx	lr
 4988              		.cfi_endproc
 4989              	.LFE400:
 4991              		.section	.text._ZN4_I2CC2EPmhh,"ax",%progbits
 4992              		.align	1
 4993              		.global	_ZN4_I2CC2EPmhh
 4994              		.syntax unified
 4995              		.thumb
 4996              		.thumb_func
 4997              		.fpu softvfp
 4999              	_ZN4_I2CC2EPmhh:
 5000              	.LFB402:
 602:../src/lpc_xav.cpp **** 
 603:../src/lpc_xav.cpp **** _I2C::_I2C(uint32_t * PtrI2C, uint8_t C_bit, uint8_t Int_bit)
 5001              		.loc 1 603 0
 5002              		.cfi_startproc
 5003              		@ args = 0, pretend = 0, frame = 16
 5004              		@ frame_needed = 1, uses_anonymous_args = 0
 5005              		@ link register save eliminated.
 5006 0000 80B4     		push	{r7}
 5007              		.cfi_def_cfa_offset 4
 5008              		.cfi_offset 7, -4
 5009 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 97


 5010              		.cfi_def_cfa_offset 24
 5011 0004 00AF     		add	r7, sp, #0
 5012              		.cfi_def_cfa_register 7
 5013 0006 F860     		str	r0, [r7, #12]
 5014 0008 B960     		str	r1, [r7, #8]
 5015 000a 1146     		mov	r1, r2
 5016 000c 1A46     		mov	r2, r3
 5017 000e 0B46     		mov	r3, r1
 5018 0010 FB71     		strb	r3, [r7, #7]
 5019 0012 1346     		mov	r3, r2
 5020 0014 BB71     		strb	r3, [r7, #6]
 5021              	.LBB12:
 604:../src/lpc_xav.cpp **** {
 605:../src/lpc_xav.cpp **** 	_Periph = PtrI2C;
 5022              		.loc 1 605 0
 5023 0016 FB68     		ldr	r3, [r7, #12]
 5024 0018 BA68     		ldr	r2, [r7, #8]
 5025 001a 1A60     		str	r2, [r3]
 606:../src/lpc_xav.cpp **** 	Clk_bit = C_bit;
 5026              		.loc 1 606 0
 5027 001c FB68     		ldr	r3, [r7, #12]
 5028 001e FA79     		ldrb	r2, [r7, #7]
 5029 0020 1A71     		strb	r2, [r3, #4]
 607:../src/lpc_xav.cpp **** 	IRQ_bit = Int_bit;
 5030              		.loc 1 607 0
 5031 0022 FB68     		ldr	r3, [r7, #12]
 5032 0024 BA79     		ldrb	r2, [r7, #6]
 5033 0026 5A71     		strb	r2, [r3, #5]
 5034              	.LBE12:
 608:../src/lpc_xav.cpp **** }
 5035              		.loc 1 608 0
 5036 0028 FB68     		ldr	r3, [r7, #12]
 5037 002a 1846     		mov	r0, r3
 5038 002c 1437     		adds	r7, r7, #20
 5039              		.cfi_def_cfa_offset 4
 5040 002e BD46     		mov	sp, r7
 5041              		.cfi_def_cfa_register 13
 5042              		@ sp needed
 5043 0030 80BC     		pop	{r7}
 5044              		.cfi_restore 7
 5045              		.cfi_def_cfa_offset 0
 5046 0032 7047     		bx	lr
 5047              		.cfi_endproc
 5048              	.LFE402:
 5050              		.global	_ZN4_I2CC1EPmhh
 5051              		.thumb_set _ZN4_I2CC1EPmhh,_ZN4_I2CC2EPmhh
 5052              		.section	.text._ZN3SSP4InitEhhhh,"ax",%progbits
 5053              		.align	1
 5054              		.global	_ZN3SSP4InitEhhhh
 5055              		.syntax unified
 5056              		.thumb
 5057              		.thumb_func
 5058              		.fpu softvfp
 5060              	_ZN3SSP4InitEhhhh:
 5061              	.LFB404:
 609:../src/lpc_xav.cpp **** /**************************************************************************************************
 610:../src/lpc_xav.cpp **** void SSP::Init(uint8_t ClkPrescaler, uint8_t DataSizeSelect, uint8_t CPOL, uint8_t CPHA)
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 98


 611:../src/lpc_xav.cpp **** {
 5062              		.loc 1 611 0
 5063              		.cfi_startproc
 5064              		@ args = 4, pretend = 0, frame = 8
 5065              		@ frame_needed = 1, uses_anonymous_args = 0
 5066              		@ link register save eliminated.
 5067 0000 80B4     		push	{r7}
 5068              		.cfi_def_cfa_offset 4
 5069              		.cfi_offset 7, -4
 5070 0002 83B0     		sub	sp, sp, #12
 5071              		.cfi_def_cfa_offset 16
 5072 0004 00AF     		add	r7, sp, #0
 5073              		.cfi_def_cfa_register 7
 5074 0006 7860     		str	r0, [r7, #4]
 5075 0008 0846     		mov	r0, r1
 5076 000a 1146     		mov	r1, r2
 5077 000c 1A46     		mov	r2, r3
 5078 000e 0346     		mov	r3, r0
 5079 0010 FB70     		strb	r3, [r7, #3]
 5080 0012 0B46     		mov	r3, r1
 5081 0014 BB70     		strb	r3, [r7, #2]
 5082 0016 1346     		mov	r3, r2
 5083 0018 7B70     		strb	r3, [r7, #1]
 612:../src/lpc_xav.cpp **** 	if(Clk_bit < 16){ // SSP0
 5084              		.loc 1 612 0
 5085 001a 7B68     		ldr	r3, [r7, #4]
 5086 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5087 001e 0F2B     		cmp	r3, #15
 5088 0020 17D8     		bhi	.L203
 613:../src/lpc_xav.cpp **** 		PCLKSEL1 &= ~(3 << Clk_bit);
 5089              		.loc 1 613 0
 5090 0022 344B     		ldr	r3, .L205
 5091 0024 1B68     		ldr	r3, [r3]
 5092 0026 7A68     		ldr	r2, [r7, #4]
 5093 0028 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 5094 002a 1146     		mov	r1, r2
 5095 002c 0322     		movs	r2, #3
 5096 002e 8A40     		lsls	r2, r2, r1
 5097 0030 D243     		mvns	r2, r2
 5098 0032 1146     		mov	r1, r2
 5099 0034 2F4A     		ldr	r2, .L205
 5100 0036 0B40     		ands	r3, r3, r1
 5101 0038 1360     		str	r3, [r2]
 614:../src/lpc_xav.cpp **** 		PCLKSEL1 |= (CLK0 << Clk_bit);
 5102              		.loc 1 614 0
 5103 003a 2E4B     		ldr	r3, .L205
 5104 003c 1B68     		ldr	r3, [r3]
 5105 003e 7A68     		ldr	r2, [r7, #4]
 5106 0040 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 5107 0042 1146     		mov	r1, r2
 5108 0044 0122     		movs	r2, #1
 5109 0046 8A40     		lsls	r2, r2, r1
 5110 0048 1146     		mov	r1, r2
 5111 004a 2A4A     		ldr	r2, .L205
 5112 004c 0B43     		orrs	r3, r3, r1
 5113 004e 1360     		str	r3, [r2]
 5114 0050 16E0     		b	.L204
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 99


 5115              	.L203:
 615:../src/lpc_xav.cpp **** 	}
 616:../src/lpc_xav.cpp **** 	else{ // SSP1 & Legacy SPI
 617:../src/lpc_xav.cpp **** 		PCLKSEL0 &= ~(3 << Clk_bit);
 5116              		.loc 1 617 0
 5117 0052 294B     		ldr	r3, .L205+4
 5118 0054 1B68     		ldr	r3, [r3]
 5119 0056 7A68     		ldr	r2, [r7, #4]
 5120 0058 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 5121 005a 1146     		mov	r1, r2
 5122 005c 0322     		movs	r2, #3
 5123 005e 8A40     		lsls	r2, r2, r1
 5124 0060 D243     		mvns	r2, r2
 5125 0062 1146     		mov	r1, r2
 5126 0064 244A     		ldr	r2, .L205+4
 5127 0066 0B40     		ands	r3, r3, r1
 5128 0068 1360     		str	r3, [r2]
 618:../src/lpc_xav.cpp **** 		PCLKSEL0 |= (CLK0 << Clk_bit);
 5129              		.loc 1 618 0
 5130 006a 234B     		ldr	r3, .L205+4
 5131 006c 1B68     		ldr	r3, [r3]
 5132 006e 7A68     		ldr	r2, [r7, #4]
 5133 0070 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 5134 0072 1146     		mov	r1, r2
 5135 0074 0122     		movs	r2, #1
 5136 0076 8A40     		lsls	r2, r2, r1
 5137 0078 1146     		mov	r1, r2
 5138 007a 1F4A     		ldr	r2, .L205+4
 5139 007c 0B43     		orrs	r3, r3, r1
 5140 007e 1360     		str	r3, [r2]
 5141              	.L204:
 619:../src/lpc_xav.cpp **** 	}
 620:../src/lpc_xav.cpp **** 
 621:../src/lpc_xav.cpp **** 	*(_Periph + 4) = ClkPrescaler; // Set CPSDVSR
 5142              		.loc 1 621 0
 5143 0080 7B68     		ldr	r3, [r7, #4]
 5144 0082 1B68     		ldr	r3, [r3]
 5145 0084 1033     		adds	r3, r3, #16
 5146 0086 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 5147 0088 1A60     		str	r2, [r3]
 622:../src/lpc_xav.cpp **** 
 623:../src/lpc_xav.cpp **** 	*_Periph = DataSizeSelect - 1; // 4 to 16 bits transfer
 5148              		.loc 1 623 0
 5149 008a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 5150 008c 5A1E     		subs	r2, r3, #1
 5151 008e 7B68     		ldr	r3, [r7, #4]
 5152 0090 1B68     		ldr	r3, [r3]
 5153 0092 1A60     		str	r2, [r3]
 624:../src/lpc_xav.cpp **** 	*_Periph |= CPOL << 6; // Clock polarity select
 5154              		.loc 1 624 0
 5155 0094 7B68     		ldr	r3, [r7, #4]
 5156 0096 1B68     		ldr	r3, [r3]
 5157 0098 1A68     		ldr	r2, [r3]
 5158 009a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 5159 009c 9B01     		lsls	r3, r3, #6
 5160 009e 1946     		mov	r1, r3
 5161 00a0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 100


 5162 00a2 1B68     		ldr	r3, [r3]
 5163 00a4 0A43     		orrs	r2, r2, r1
 5164 00a6 1A60     		str	r2, [r3]
 625:../src/lpc_xav.cpp **** 	*_Periph |= CPHA << 7; // Clock phase select
 5165              		.loc 1 625 0
 5166 00a8 7B68     		ldr	r3, [r7, #4]
 5167 00aa 1B68     		ldr	r3, [r3]
 5168 00ac 1A68     		ldr	r2, [r3]
 5169 00ae 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 5170 00b0 DB01     		lsls	r3, r3, #7
 5171 00b2 1946     		mov	r1, r3
 5172 00b4 7B68     		ldr	r3, [r7, #4]
 5173 00b6 1B68     		ldr	r3, [r3]
 5174 00b8 0A43     		orrs	r2, r2, r1
 5175 00ba 1A60     		str	r2, [r3]
 626:../src/lpc_xav.cpp **** 
 627:../src/lpc_xav.cpp **** 	*_Periph &= ~(0xFF << 8); // 0 in SCR for 377KHz to 48MHz SPI rate
 5176              		.loc 1 627 0
 5177 00bc 7B68     		ldr	r3, [r7, #4]
 5178 00be 1B68     		ldr	r3, [r3]
 5179 00c0 1A68     		ldr	r2, [r3]
 5180 00c2 7B68     		ldr	r3, [r7, #4]
 5181 00c4 1B68     		ldr	r3, [r3]
 5182 00c6 22F47F42 		bic	r2, r2, #65280
 5183 00ca 1A60     		str	r2, [r3]
 628:../src/lpc_xav.cpp **** 
 629:../src/lpc_xav.cpp **** 	*(_Periph + 5) = 0; // Clear enabled interrupts
 5184              		.loc 1 629 0
 5185 00cc 7B68     		ldr	r3, [r7, #4]
 5186 00ce 1B68     		ldr	r3, [r3]
 5187 00d0 1433     		adds	r3, r3, #20
 5188 00d2 0022     		movs	r2, #0
 5189 00d4 1A60     		str	r2, [r3]
 630:../src/lpc_xav.cpp **** 
 631:../src/lpc_xav.cpp **** 	*(_Periph + 9) = (1 << 1);
 5190              		.loc 1 631 0
 5191 00d6 7B68     		ldr	r3, [r7, #4]
 5192 00d8 1B68     		ldr	r3, [r3]
 5193 00da 2433     		adds	r3, r3, #36
 5194 00dc 0222     		movs	r2, #2
 5195 00de 1A60     		str	r2, [r3]
 632:../src/lpc_xav.cpp **** 
 633:../src/lpc_xav.cpp **** 	*(_Periph + 1) = 0x2; // Enable SSPx controller
 5196              		.loc 1 633 0
 5197 00e0 7B68     		ldr	r3, [r7, #4]
 5198 00e2 1B68     		ldr	r3, [r3]
 5199 00e4 0433     		adds	r3, r3, #4
 5200 00e6 0222     		movs	r2, #2
 5201 00e8 1A60     		str	r2, [r3]
 634:../src/lpc_xav.cpp **** }
 5202              		.loc 1 634 0
 5203 00ea 00BF     		nop
 5204 00ec 0C37     		adds	r7, r7, #12
 5205              		.cfi_def_cfa_offset 4
 5206 00ee BD46     		mov	sp, r7
 5207              		.cfi_def_cfa_register 13
 5208              		@ sp needed
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 101


 5209 00f0 80BC     		pop	{r7}
 5210              		.cfi_restore 7
 5211              		.cfi_def_cfa_offset 0
 5212 00f2 7047     		bx	lr
 5213              	.L206:
 5214              		.align	2
 5215              	.L205:
 5216 00f4 ACC10F40 		.word	1074774444
 5217 00f8 A8C10F40 		.word	1074774440
 5218              		.cfi_endproc
 5219              	.LFE404:
 5221              		.section	.text._ZN3SSP12New_SequenceEv,"ax",%progbits
 5222              		.align	1
 5223              		.global	_ZN3SSP12New_SequenceEv
 5224              		.syntax unified
 5225              		.thumb
 5226              		.thumb_func
 5227              		.fpu softvfp
 5229              	_ZN3SSP12New_SequenceEv:
 5230              	.LFB405:
 635:../src/lpc_xav.cpp **** 
 636:../src/lpc_xav.cpp **** void SSP::New_Sequence()
 637:../src/lpc_xav.cpp **** {
 5231              		.loc 1 637 0
 5232              		.cfi_startproc
 5233              		@ args = 0, pretend = 0, frame = 16
 5234              		@ frame_needed = 1, uses_anonymous_args = 0
 5235              		@ link register save eliminated.
 5236 0000 80B4     		push	{r7}
 5237              		.cfi_def_cfa_offset 4
 5238              		.cfi_offset 7, -4
 5239 0002 85B0     		sub	sp, sp, #20
 5240              		.cfi_def_cfa_offset 24
 5241 0004 00AF     		add	r7, sp, #0
 5242              		.cfi_def_cfa_register 7
 5243 0006 7860     		str	r0, [r7, #4]
 5244              	.LBB13:
 638:../src/lpc_xav.cpp **** 	for(uint8_t i = 0; i < 100; i++){ // Reset Buffer, length and master counter
 5245              		.loc 1 638 0
 5246 0008 0023     		movs	r3, #0
 5247 000a FB73     		strb	r3, [r7, #15]
 5248              	.L209:
 5249              		.loc 1 638 0 is_stmt 0 discriminator 3
 5250 000c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5251 000e 632B     		cmp	r3, #99
 5252 0010 09D8     		bhi	.L208
 639:../src/lpc_xav.cpp **** 		Buffer[i] = 0;
 5253              		.loc 1 639 0 is_stmt 1 discriminator 2
 5254 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5255 0014 7A68     		ldr	r2, [r7, #4]
 5256 0016 5B00     		lsls	r3, r3, #1
 5257 0018 1344     		add	r3, r3, r2
 5258 001a 0022     		movs	r2, #0
 5259 001c DA80     		strh	r2, [r3, #6]	@ movhi
 638:../src/lpc_xav.cpp **** 	for(uint8_t i = 0; i < 100; i++){ // Reset Buffer, length and master counter
 5260              		.loc 1 638 0 discriminator 2
 5261 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 102


 5262 0020 0133     		adds	r3, r3, #1
 5263 0022 FB73     		strb	r3, [r7, #15]
 5264 0024 F2E7     		b	.L209
 5265              	.L208:
 5266              	.LBE13:
 640:../src/lpc_xav.cpp **** 	}
 641:../src/lpc_xav.cpp **** 	Msg_Length = 0;
 5267              		.loc 1 641 0
 5268 0026 7B68     		ldr	r3, [r7, #4]
 5269 0028 0022     		movs	r2, #0
 5270 002a 83F80D21 		strb	r2, [r3, #269]
 642:../src/lpc_xav.cpp **** 	M_Counter = 0;
 5271              		.loc 1 642 0
 5272 002e 7B68     		ldr	r3, [r7, #4]
 5273 0030 0022     		movs	r2, #0
 5274 0032 83F80C21 		strb	r2, [r3, #268]
 643:../src/lpc_xav.cpp **** }
 5275              		.loc 1 643 0
 5276 0036 00BF     		nop
 5277 0038 1437     		adds	r7, r7, #20
 5278              		.cfi_def_cfa_offset 4
 5279 003a BD46     		mov	sp, r7
 5280              		.cfi_def_cfa_register 13
 5281              		@ sp needed
 5282 003c 80BC     		pop	{r7}
 5283              		.cfi_restore 7
 5284              		.cfi_def_cfa_offset 0
 5285 003e 7047     		bx	lr
 5286              		.cfi_endproc
 5287              	.LFE405:
 5289              		.section	.text._ZN3SSP10Add_StringEPKc,"ax",%progbits
 5290              		.align	1
 5291              		.global	_ZN3SSP10Add_StringEPKc
 5292              		.syntax unified
 5293              		.thumb
 5294              		.thumb_func
 5295              		.fpu softvfp
 5297              	_ZN3SSP10Add_StringEPKc:
 5298              	.LFB406:
 644:../src/lpc_xav.cpp **** 
 645:../src/lpc_xav.cpp **** void SSP::Add_String(const char * StrToSend)
 646:../src/lpc_xav.cpp **** {
 5299              		.loc 1 646 0
 5300              		.cfi_startproc
 5301              		@ args = 0, pretend = 0, frame = 8
 5302              		@ frame_needed = 1, uses_anonymous_args = 0
 5303              		@ link register save eliminated.
 5304 0000 80B4     		push	{r7}
 5305              		.cfi_def_cfa_offset 4
 5306              		.cfi_offset 7, -4
 5307 0002 83B0     		sub	sp, sp, #12
 5308              		.cfi_def_cfa_offset 16
 5309 0004 00AF     		add	r7, sp, #0
 5310              		.cfi_def_cfa_register 7
 5311 0006 7860     		str	r0, [r7, #4]
 5312 0008 3960     		str	r1, [r7]
 5313              	.L212:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 103


 647:../src/lpc_xav.cpp **** 	while(*StrToSend != '\0'){
 5314              		.loc 1 647 0
 5315 000a 3B68     		ldr	r3, [r7]
 5316 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5317 000e 002B     		cmp	r3, #0
 5318 0010 12D0     		beq	.L213
 648:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = *StrToSend++;
 5319              		.loc 1 648 0
 5320 0012 3B68     		ldr	r3, [r7]
 5321 0014 5A1C     		adds	r2, r3, #1
 5322 0016 3A60     		str	r2, [r7]
 5323 0018 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5324 001a 7B68     		ldr	r3, [r7, #4]
 5325 001c 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5326 0020 5A1C     		adds	r2, r3, #1
 5327 0022 D0B2     		uxtb	r0, r2
 5328 0024 7A68     		ldr	r2, [r7, #4]
 5329 0026 82F80D01 		strb	r0, [r2, #269]
 5330 002a 89B2     		uxth	r1, r1
 5331 002c 7A68     		ldr	r2, [r7, #4]
 5332 002e 5B00     		lsls	r3, r3, #1
 5333 0030 1344     		add	r3, r3, r2
 5334 0032 0A46     		mov	r2, r1	@ movhi
 5335 0034 DA80     		strh	r2, [r3, #6]	@ movhi
 647:../src/lpc_xav.cpp **** 	while(*StrToSend != '\0'){
 5336              		.loc 1 647 0
 5337 0036 E8E7     		b	.L212
 5338              	.L213:
 649:../src/lpc_xav.cpp **** 	}
 650:../src/lpc_xav.cpp **** }
 5339              		.loc 1 650 0
 5340 0038 00BF     		nop
 5341 003a 0C37     		adds	r7, r7, #12
 5342              		.cfi_def_cfa_offset 4
 5343 003c BD46     		mov	sp, r7
 5344              		.cfi_def_cfa_register 13
 5345              		@ sp needed
 5346 003e 80BC     		pop	{r7}
 5347              		.cfi_restore 7
 5348              		.cfi_def_cfa_offset 0
 5349 0040 7047     		bx	lr
 5350              		.cfi_endproc
 5351              	.LFE406:
 5353              		.section	.text._ZN3SSP15Add_BCD_IntegerEmh,"ax",%progbits
 5354              		.align	1
 5355              		.global	_ZN3SSP15Add_BCD_IntegerEmh
 5356              		.syntax unified
 5357              		.thumb
 5358              		.thumb_func
 5359              		.fpu softvfp
 5361              	_ZN3SSP15Add_BCD_IntegerEmh:
 5362              	.LFB407:
 651:../src/lpc_xav.cpp **** 
 652:../src/lpc_xav.cpp **** void SSP::Add_BCD_Integer(uint32_t Decimal_uint, uint8_t NbDigits)
 653:../src/lpc_xav.cpp **** {
 5363              		.loc 1 653 0
 5364              		.cfi_startproc
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 104


 5365              		@ args = 0, pretend = 0, frame = 16
 5366              		@ frame_needed = 1, uses_anonymous_args = 0
 5367 0000 80B5     		push	{r7, lr}
 5368              		.cfi_def_cfa_offset 8
 5369              		.cfi_offset 7, -8
 5370              		.cfi_offset 14, -4
 5371 0002 84B0     		sub	sp, sp, #16
 5372              		.cfi_def_cfa_offset 24
 5373 0004 00AF     		add	r7, sp, #0
 5374              		.cfi_def_cfa_register 7
 5375 0006 F860     		str	r0, [r7, #12]
 5376 0008 B960     		str	r1, [r7, #8]
 5377 000a 1346     		mov	r3, r2
 5378 000c FB71     		strb	r3, [r7, #7]
 654:../src/lpc_xav.cpp **** 	IntegerToBCD(LCD_BCD, Decimal_uint);
 5379              		.loc 1 654 0
 5380 000e BB68     		ldr	r3, [r7, #8]
 5381 0010 9BB2     		uxth	r3, r3
 5382 0012 1946     		mov	r1, r3
 5383 0014 3548     		ldr	r0, .L222
 5384 0016 FFF7FEFF 		bl	_Z12IntegerToBCDR5BCD_tt
 655:../src/lpc_xav.cpp **** 
 656:../src/lpc_xav.cpp **** 	switch(NbDigits){
 5385              		.loc 1 656 0
 5386 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5387 001c 013B     		subs	r3, r3, #1
 5388 001e 032B     		cmp	r3, #3
 5389 0020 5FD8     		bhi	.L221
 5390 0022 01A2     		adr	r2, .L217
 5391 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5392              		.p2align 2
 5393              	.L217:
 5394 0028 B7000000 		.word	.L216+1
 5395 002c 8D000000 		.word	.L218+1
 5396 0030 63000000 		.word	.L219+1
 5397 0034 39000000 		.word	.L220+1
 5398              		.p2align 1
 5399              	.L220:
 657:../src/lpc_xav.cpp **** 	case 4:
 658:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.mil + 48);
 5400              		.loc 1 658 0
 5401 0038 2C4B     		ldr	r3, .L222
 5402 003a DB78     		ldrb	r3, [r3, #3]
 5403 003c C3F30313 		ubfx	r3, r3, #4, #4
 5404 0040 DBB2     		uxtb	r3, r3
 5405 0042 9AB2     		uxth	r2, r3
 5406 0044 FB68     		ldr	r3, [r7, #12]
 5407 0046 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5408 004a 591C     		adds	r1, r3, #1
 5409 004c C8B2     		uxtb	r0, r1
 5410 004e F968     		ldr	r1, [r7, #12]
 5411 0050 81F80D01 		strb	r0, [r1, #269]
 5412 0054 3032     		adds	r2, r2, #48
 5413 0056 91B2     		uxth	r1, r2
 5414 0058 FA68     		ldr	r2, [r7, #12]
 5415 005a 5B00     		lsls	r3, r3, #1
 5416 005c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 105


 5417 005e 0A46     		mov	r2, r1	@ movhi
 5418 0060 DA80     		strh	r2, [r3, #6]	@ movhi
 5419              	.L219:
 659:../src/lpc_xav.cpp **** 	case 3:
 660:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.cen + 48);
 5420              		.loc 1 660 0
 5421 0062 224B     		ldr	r3, .L222
 5422 0064 DB78     		ldrb	r3, [r3, #3]
 5423 0066 C3F30303 		ubfx	r3, r3, #0, #4
 5424 006a DBB2     		uxtb	r3, r3
 5425 006c 9AB2     		uxth	r2, r3
 5426 006e FB68     		ldr	r3, [r7, #12]
 5427 0070 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5428 0074 591C     		adds	r1, r3, #1
 5429 0076 C8B2     		uxtb	r0, r1
 5430 0078 F968     		ldr	r1, [r7, #12]
 5431 007a 81F80D01 		strb	r0, [r1, #269]
 5432 007e 3032     		adds	r2, r2, #48
 5433 0080 91B2     		uxth	r1, r2
 5434 0082 FA68     		ldr	r2, [r7, #12]
 5435 0084 5B00     		lsls	r3, r3, #1
 5436 0086 1344     		add	r3, r3, r2
 5437 0088 0A46     		mov	r2, r1	@ movhi
 5438 008a DA80     		strh	r2, [r3, #6]	@ movhi
 5439              	.L218:
 661:../src/lpc_xav.cpp **** 	case 2:
 662:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.diz + 48);
 5440              		.loc 1 662 0
 5441 008c 174B     		ldr	r3, .L222
 5442 008e 9B78     		ldrb	r3, [r3, #2]
 5443 0090 C3F30313 		ubfx	r3, r3, #4, #4
 5444 0094 DBB2     		uxtb	r3, r3
 5445 0096 9AB2     		uxth	r2, r3
 5446 0098 FB68     		ldr	r3, [r7, #12]
 5447 009a 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5448 009e 591C     		adds	r1, r3, #1
 5449 00a0 C8B2     		uxtb	r0, r1
 5450 00a2 F968     		ldr	r1, [r7, #12]
 5451 00a4 81F80D01 		strb	r0, [r1, #269]
 5452 00a8 3032     		adds	r2, r2, #48
 5453 00aa 91B2     		uxth	r1, r2
 5454 00ac FA68     		ldr	r2, [r7, #12]
 5455 00ae 5B00     		lsls	r3, r3, #1
 5456 00b0 1344     		add	r3, r3, r2
 5457 00b2 0A46     		mov	r2, r1	@ movhi
 5458 00b4 DA80     		strh	r2, [r3, #6]	@ movhi
 5459              	.L216:
 663:../src/lpc_xav.cpp **** 	case 1:
 664:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.uni + 48);
 5460              		.loc 1 664 0
 5461 00b6 0D4B     		ldr	r3, .L222
 5462 00b8 9B78     		ldrb	r3, [r3, #2]
 5463 00ba C3F30303 		ubfx	r3, r3, #0, #4
 5464 00be DBB2     		uxtb	r3, r3
 5465 00c0 9AB2     		uxth	r2, r3
 5466 00c2 FB68     		ldr	r3, [r7, #12]
 5467 00c4 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 106


 5468 00c8 591C     		adds	r1, r3, #1
 5469 00ca C8B2     		uxtb	r0, r1
 5470 00cc F968     		ldr	r1, [r7, #12]
 5471 00ce 81F80D01 		strb	r0, [r1, #269]
 5472 00d2 3032     		adds	r2, r2, #48
 5473 00d4 91B2     		uxth	r1, r2
 5474 00d6 FA68     		ldr	r2, [r7, #12]
 5475 00d8 5B00     		lsls	r3, r3, #1
 5476 00da 1344     		add	r3, r3, r2
 5477 00dc 0A46     		mov	r2, r1	@ movhi
 5478 00de DA80     		strh	r2, [r3, #6]	@ movhi
 665:../src/lpc_xav.cpp **** 		break;
 5479              		.loc 1 665 0
 5480 00e0 00BF     		nop
 5481              	.L221:
 666:../src/lpc_xav.cpp **** 	}
 667:../src/lpc_xav.cpp **** 
 668:../src/lpc_xav.cpp **** }
 5482              		.loc 1 668 0
 5483 00e2 00BF     		nop
 5484 00e4 1037     		adds	r7, r7, #16
 5485              		.cfi_def_cfa_offset 8
 5486 00e6 BD46     		mov	sp, r7
 5487              		.cfi_def_cfa_register 13
 5488              		@ sp needed
 5489 00e8 80BD     		pop	{r7, pc}
 5490              	.L223:
 5491 00ea 00BF     		.align	2
 5492              	.L222:
 5493 00ec 00000000 		.word	LCD_BCD
 5494              		.cfi_endproc
 5495              	.LFE407:
 5497              		.section	.text._ZN3SSP13Add_BCD_FloatEmhh,"ax",%progbits
 5498              		.align	1
 5499              		.global	_ZN3SSP13Add_BCD_FloatEmhh
 5500              		.syntax unified
 5501              		.thumb
 5502              		.thumb_func
 5503              		.fpu softvfp
 5505              	_ZN3SSP13Add_BCD_FloatEmhh:
 5506              	.LFB408:
 669:../src/lpc_xav.cpp **** 
 670:../src/lpc_xav.cpp **** void SSP::Add_BCD_Float(uint32_t Decimal_uint, uint8_t NbDigits, uint8_t DP_Position)
 671:../src/lpc_xav.cpp **** {
 5507              		.loc 1 671 0
 5508              		.cfi_startproc
 5509              		@ args = 0, pretend = 0, frame = 16
 5510              		@ frame_needed = 1, uses_anonymous_args = 0
 5511 0000 80B5     		push	{r7, lr}
 5512              		.cfi_def_cfa_offset 8
 5513              		.cfi_offset 7, -8
 5514              		.cfi_offset 14, -4
 5515 0002 84B0     		sub	sp, sp, #16
 5516              		.cfi_def_cfa_offset 24
 5517 0004 00AF     		add	r7, sp, #0
 5518              		.cfi_def_cfa_register 7
 5519 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 107


 5520 0008 B960     		str	r1, [r7, #8]
 5521 000a 1146     		mov	r1, r2
 5522 000c 1A46     		mov	r2, r3
 5523 000e 0B46     		mov	r3, r1
 5524 0010 FB71     		strb	r3, [r7, #7]
 5525 0012 1346     		mov	r3, r2
 5526 0014 BB71     		strb	r3, [r7, #6]
 672:../src/lpc_xav.cpp **** 	IntegerToBCD(LCD_BCD, Decimal_uint);
 5527              		.loc 1 672 0
 5528 0016 BB68     		ldr	r3, [r7, #8]
 5529 0018 9BB2     		uxth	r3, r3
 5530 001a 1946     		mov	r1, r3
 5531 001c 4E48     		ldr	r0, .L232
 5532 001e FFF7FEFF 		bl	_Z12IntegerToBCDR5BCD_tt
 673:../src/lpc_xav.cpp **** 
 674:../src/lpc_xav.cpp **** 	switch(NbDigits){
 5533              		.loc 1 674 0
 5534 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5535 0024 013B     		subs	r3, r3, #1
 5536 0026 032B     		cmp	r3, #3
 5537 0028 00F29180 		bhi	.L231
 5538 002c 01A2     		adr	r2, .L227
 5539 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5540 0032 00BF     		.p2align 2
 5541              	.L227:
 5542 0034 23010000 		.word	.L226+1
 5543 0038 D9000000 		.word	.L228+1
 5544 003c 8F000000 		.word	.L229+1
 5545 0040 45000000 		.word	.L230+1
 5546              		.p2align 1
 5547              	.L230:
 675:../src/lpc_xav.cpp **** 	case 4:
 676:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.mil + 48);
 5548              		.loc 1 676 0
 5549 0044 444B     		ldr	r3, .L232
 5550 0046 DB78     		ldrb	r3, [r3, #3]
 5551 0048 C3F30313 		ubfx	r3, r3, #4, #4
 5552 004c DBB2     		uxtb	r3, r3
 5553 004e 9AB2     		uxth	r2, r3
 5554 0050 FB68     		ldr	r3, [r7, #12]
 5555 0052 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5556 0056 591C     		adds	r1, r3, #1
 5557 0058 C8B2     		uxtb	r0, r1
 5558 005a F968     		ldr	r1, [r7, #12]
 5559 005c 81F80D01 		strb	r0, [r1, #269]
 5560 0060 3032     		adds	r2, r2, #48
 5561 0062 91B2     		uxth	r1, r2
 5562 0064 FA68     		ldr	r2, [r7, #12]
 5563 0066 5B00     		lsls	r3, r3, #1
 5564 0068 1344     		add	r3, r3, r2
 5565 006a 0A46     		mov	r2, r1	@ movhi
 5566 006c DA80     		strh	r2, [r3, #6]	@ movhi
 677:../src/lpc_xav.cpp **** 		if(DP_Position == 1)
 5567              		.loc 1 677 0
 5568 006e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5569 0070 012B     		cmp	r3, #1
 5570 0072 0CD1     		bne	.L229
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 108


 678:../src/lpc_xav.cpp **** 			Buffer[Msg_Length++] = '.';
 5571              		.loc 1 678 0
 5572 0074 FB68     		ldr	r3, [r7, #12]
 5573 0076 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5574 007a 5A1C     		adds	r2, r3, #1
 5575 007c D1B2     		uxtb	r1, r2
 5576 007e FA68     		ldr	r2, [r7, #12]
 5577 0080 82F80D11 		strb	r1, [r2, #269]
 5578 0084 FA68     		ldr	r2, [r7, #12]
 5579 0086 5B00     		lsls	r3, r3, #1
 5580 0088 1344     		add	r3, r3, r2
 5581 008a 2E22     		movs	r2, #46
 5582 008c DA80     		strh	r2, [r3, #6]	@ movhi
 5583              	.L229:
 679:../src/lpc_xav.cpp **** 	case 3:
 680:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.cen + 48);
 5584              		.loc 1 680 0
 5585 008e 324B     		ldr	r3, .L232
 5586 0090 DB78     		ldrb	r3, [r3, #3]
 5587 0092 C3F30303 		ubfx	r3, r3, #0, #4
 5588 0096 DBB2     		uxtb	r3, r3
 5589 0098 9AB2     		uxth	r2, r3
 5590 009a FB68     		ldr	r3, [r7, #12]
 5591 009c 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5592 00a0 591C     		adds	r1, r3, #1
 5593 00a2 C8B2     		uxtb	r0, r1
 5594 00a4 F968     		ldr	r1, [r7, #12]
 5595 00a6 81F80D01 		strb	r0, [r1, #269]
 5596 00aa 3032     		adds	r2, r2, #48
 5597 00ac 91B2     		uxth	r1, r2
 5598 00ae FA68     		ldr	r2, [r7, #12]
 5599 00b0 5B00     		lsls	r3, r3, #1
 5600 00b2 1344     		add	r3, r3, r2
 5601 00b4 0A46     		mov	r2, r1	@ movhi
 5602 00b6 DA80     		strh	r2, [r3, #6]	@ movhi
 681:../src/lpc_xav.cpp **** 		if(DP_Position == 2)
 5603              		.loc 1 681 0
 5604 00b8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5605 00ba 022B     		cmp	r3, #2
 5606 00bc 0CD1     		bne	.L228
 682:../src/lpc_xav.cpp **** 			Buffer[Msg_Length++] = '.';
 5607              		.loc 1 682 0
 5608 00be FB68     		ldr	r3, [r7, #12]
 5609 00c0 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5610 00c4 5A1C     		adds	r2, r3, #1
 5611 00c6 D1B2     		uxtb	r1, r2
 5612 00c8 FA68     		ldr	r2, [r7, #12]
 5613 00ca 82F80D11 		strb	r1, [r2, #269]
 5614 00ce FA68     		ldr	r2, [r7, #12]
 5615 00d0 5B00     		lsls	r3, r3, #1
 5616 00d2 1344     		add	r3, r3, r2
 5617 00d4 2E22     		movs	r2, #46
 5618 00d6 DA80     		strh	r2, [r3, #6]	@ movhi
 5619              	.L228:
 683:../src/lpc_xav.cpp **** 	case 2:
 684:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.diz + 48);
 5620              		.loc 1 684 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 109


 5621 00d8 1F4B     		ldr	r3, .L232
 5622 00da 9B78     		ldrb	r3, [r3, #2]
 5623 00dc C3F30313 		ubfx	r3, r3, #4, #4
 5624 00e0 DBB2     		uxtb	r3, r3
 5625 00e2 9AB2     		uxth	r2, r3
 5626 00e4 FB68     		ldr	r3, [r7, #12]
 5627 00e6 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5628 00ea 591C     		adds	r1, r3, #1
 5629 00ec C8B2     		uxtb	r0, r1
 5630 00ee F968     		ldr	r1, [r7, #12]
 5631 00f0 81F80D01 		strb	r0, [r1, #269]
 5632 00f4 3032     		adds	r2, r2, #48
 5633 00f6 91B2     		uxth	r1, r2
 5634 00f8 FA68     		ldr	r2, [r7, #12]
 5635 00fa 5B00     		lsls	r3, r3, #1
 5636 00fc 1344     		add	r3, r3, r2
 5637 00fe 0A46     		mov	r2, r1	@ movhi
 5638 0100 DA80     		strh	r2, [r3, #6]	@ movhi
 685:../src/lpc_xav.cpp **** 		if(DP_Position == 3)
 5639              		.loc 1 685 0
 5640 0102 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5641 0104 032B     		cmp	r3, #3
 5642 0106 0CD1     		bne	.L226
 686:../src/lpc_xav.cpp **** 			Buffer[Msg_Length++] = '.';
 5643              		.loc 1 686 0
 5644 0108 FB68     		ldr	r3, [r7, #12]
 5645 010a 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5646 010e 5A1C     		adds	r2, r3, #1
 5647 0110 D1B2     		uxtb	r1, r2
 5648 0112 FA68     		ldr	r2, [r7, #12]
 5649 0114 82F80D11 		strb	r1, [r2, #269]
 5650 0118 FA68     		ldr	r2, [r7, #12]
 5651 011a 5B00     		lsls	r3, r3, #1
 5652 011c 1344     		add	r3, r3, r2
 5653 011e 2E22     		movs	r2, #46
 5654 0120 DA80     		strh	r2, [r3, #6]	@ movhi
 5655              	.L226:
 687:../src/lpc_xav.cpp **** 	case 1:
 688:../src/lpc_xav.cpp **** 		Buffer[Msg_Length++] = (LCD_BCD.uni + 48);
 5656              		.loc 1 688 0
 5657 0122 0D4B     		ldr	r3, .L232
 5658 0124 9B78     		ldrb	r3, [r3, #2]
 5659 0126 C3F30303 		ubfx	r3, r3, #0, #4
 5660 012a DBB2     		uxtb	r3, r3
 5661 012c 9AB2     		uxth	r2, r3
 5662 012e FB68     		ldr	r3, [r7, #12]
 5663 0130 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5664 0134 591C     		adds	r1, r3, #1
 5665 0136 C8B2     		uxtb	r0, r1
 5666 0138 F968     		ldr	r1, [r7, #12]
 5667 013a 81F80D01 		strb	r0, [r1, #269]
 5668 013e 3032     		adds	r2, r2, #48
 5669 0140 91B2     		uxth	r1, r2
 5670 0142 FA68     		ldr	r2, [r7, #12]
 5671 0144 5B00     		lsls	r3, r3, #1
 5672 0146 1344     		add	r3, r3, r2
 5673 0148 0A46     		mov	r2, r1	@ movhi
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 110


 5674 014a DA80     		strh	r2, [r3, #6]	@ movhi
 689:../src/lpc_xav.cpp **** 		break;
 5675              		.loc 1 689 0
 5676 014c 00BF     		nop
 5677              	.L231:
 690:../src/lpc_xav.cpp **** 	}
 691:../src/lpc_xav.cpp **** }
 5678              		.loc 1 691 0
 5679 014e 00BF     		nop
 5680 0150 1037     		adds	r7, r7, #16
 5681              		.cfi_def_cfa_offset 8
 5682 0152 BD46     		mov	sp, r7
 5683              		.cfi_def_cfa_register 13
 5684              		@ sp needed
 5685 0154 80BD     		pop	{r7, pc}
 5686              	.L233:
 5687 0156 00BF     		.align	2
 5688              	.L232:
 5689 0158 00000000 		.word	LCD_BCD
 5690              		.cfi_endproc
 5691              	.LFE408:
 5693              		.section	.text._ZN3SSP8Add_ByteEt,"ax",%progbits
 5694              		.align	1
 5695              		.global	_ZN3SSP8Add_ByteEt
 5696              		.syntax unified
 5697              		.thumb
 5698              		.thumb_func
 5699              		.fpu softvfp
 5701              	_ZN3SSP8Add_ByteEt:
 5702              	.LFB409:
 692:../src/lpc_xav.cpp **** 
 693:../src/lpc_xav.cpp **** void SSP::Add_Byte(uint16_t ByteToSend)
 694:../src/lpc_xav.cpp **** {
 5703              		.loc 1 694 0
 5704              		.cfi_startproc
 5705              		@ args = 0, pretend = 0, frame = 8
 5706              		@ frame_needed = 1, uses_anonymous_args = 0
 5707              		@ link register save eliminated.
 5708 0000 80B4     		push	{r7}
 5709              		.cfi_def_cfa_offset 4
 5710              		.cfi_offset 7, -4
 5711 0002 83B0     		sub	sp, sp, #12
 5712              		.cfi_def_cfa_offset 16
 5713 0004 00AF     		add	r7, sp, #0
 5714              		.cfi_def_cfa_register 7
 5715 0006 7860     		str	r0, [r7, #4]
 5716 0008 0B46     		mov	r3, r1
 5717 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 695:../src/lpc_xav.cpp **** 	Buffer[Msg_Length++] = ByteToSend;
 5718              		.loc 1 695 0
 5719 000c 7B68     		ldr	r3, [r7, #4]
 5720 000e 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5721 0012 5A1C     		adds	r2, r3, #1
 5722 0014 D1B2     		uxtb	r1, r2
 5723 0016 7A68     		ldr	r2, [r7, #4]
 5724 0018 82F80D11 		strb	r1, [r2, #269]
 5725 001c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 111


 5726 001e 5B00     		lsls	r3, r3, #1
 5727 0020 1344     		add	r3, r3, r2
 5728 0022 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5729 0024 DA80     		strh	r2, [r3, #6]	@ movhi
 696:../src/lpc_xav.cpp **** }
 5730              		.loc 1 696 0
 5731 0026 00BF     		nop
 5732 0028 0C37     		adds	r7, r7, #12
 5733              		.cfi_def_cfa_offset 4
 5734 002a BD46     		mov	sp, r7
 5735              		.cfi_def_cfa_register 13
 5736              		@ sp needed
 5737 002c 80BC     		pop	{r7}
 5738              		.cfi_restore 7
 5739              		.cfi_def_cfa_offset 0
 5740 002e 7047     		bx	lr
 5741              		.cfi_endproc
 5742              	.LFE409:
 5744              		.section	.text._ZN3SSP14Send_Next_ByteEv,"ax",%progbits
 5745              		.align	1
 5746              		.global	_ZN3SSP14Send_Next_ByteEv
 5747              		.syntax unified
 5748              		.thumb
 5749              		.thumb_func
 5750              		.fpu softvfp
 5752              	_ZN3SSP14Send_Next_ByteEv:
 5753              	.LFB410:
 697:../src/lpc_xav.cpp **** 
 698:../src/lpc_xav.cpp **** void SSP::Send_Next_Byte()
 699:../src/lpc_xav.cpp **** {
 5754              		.loc 1 699 0
 5755              		.cfi_startproc
 5756              		@ args = 0, pretend = 0, frame = 16
 5757              		@ frame_needed = 1, uses_anonymous_args = 0
 5758              		@ link register save eliminated.
 5759 0000 80B4     		push	{r7}
 5760              		.cfi_def_cfa_offset 4
 5761              		.cfi_offset 7, -4
 5762 0002 85B0     		sub	sp, sp, #20
 5763              		.cfi_def_cfa_offset 24
 5764 0004 00AF     		add	r7, sp, #0
 5765              		.cfi_def_cfa_register 7
 5766 0006 7860     		str	r0, [r7, #4]
 5767              	.LBB14:
 700:../src/lpc_xav.cpp **** 	if(Msg_Length - M_Counter >= 8){
 5768              		.loc 1 700 0
 5769 0008 7B68     		ldr	r3, [r7, #4]
 5770 000a 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5771 000e 1A46     		mov	r2, r3
 5772 0010 7B68     		ldr	r3, [r7, #4]
 5773 0012 93F80C31 		ldrb	r3, [r3, #268]	@ zero_extendqisi2
 5774 0016 D31A     		subs	r3, r2, r3
 5775 0018 072B     		cmp	r3, #7
 5776 001a 18DD     		ble	.L236
 5777              	.LBB15:
 5778              	.LBB16:
 701:../src/lpc_xav.cpp **** 		for(int i = 0; i < 7; i++){
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 112


 5779              		.loc 1 701 0
 5780 001c 0023     		movs	r3, #0
 5781 001e FB60     		str	r3, [r7, #12]
 5782              	.L238:
 5783              		.loc 1 701 0 is_stmt 0 discriminator 3
 5784 0020 FB68     		ldr	r3, [r7, #12]
 5785 0022 062B     		cmp	r3, #6
 5786 0024 34DC     		bgt	.L241
 702:../src/lpc_xav.cpp **** 			*(_Periph + 2) = Buffer[M_Counter++]; // Put next byte in SSPDR
 5787              		.loc 1 702 0 is_stmt 1 discriminator 2
 5788 0026 7B68     		ldr	r3, [r7, #4]
 5789 0028 93F80C31 		ldrb	r3, [r3, #268]	@ zero_extendqisi2
 5790 002c 5A1C     		adds	r2, r3, #1
 5791 002e D1B2     		uxtb	r1, r2
 5792 0030 7A68     		ldr	r2, [r7, #4]
 5793 0032 82F80C11 		strb	r1, [r2, #268]
 5794 0036 7A68     		ldr	r2, [r7, #4]
 5795 0038 5B00     		lsls	r3, r3, #1
 5796 003a 1344     		add	r3, r3, r2
 5797 003c DA88     		ldrh	r2, [r3, #6]
 5798 003e 7B68     		ldr	r3, [r7, #4]
 5799 0040 1B68     		ldr	r3, [r3]
 5800 0042 0833     		adds	r3, r3, #8
 5801 0044 1A60     		str	r2, [r3]
 701:../src/lpc_xav.cpp **** 		for(int i = 0; i < 7; i++){
 5802              		.loc 1 701 0 discriminator 2
 5803 0046 FB68     		ldr	r3, [r7, #12]
 5804 0048 0133     		adds	r3, r3, #1
 5805 004a FB60     		str	r3, [r7, #12]
 5806 004c E8E7     		b	.L238
 5807              	.L236:
 5808              	.LBE16:
 5809              	.LBE15:
 5810              	.LBB17:
 5811              	.LBB18:
 703:../src/lpc_xav.cpp **** 		}
 704:../src/lpc_xav.cpp **** 	}
 705:../src/lpc_xav.cpp **** 	else{
 706:../src/lpc_xav.cpp **** 		for(int i = 0; i < (Msg_Length - M_Counter); i++){
 5812              		.loc 1 706 0
 5813 004e 0023     		movs	r3, #0
 5814 0050 BB60     		str	r3, [r7, #8]
 5815              	.L240:
 5816              		.loc 1 706 0 is_stmt 0 discriminator 3
 5817 0052 7B68     		ldr	r3, [r7, #4]
 5818 0054 93F80D31 		ldrb	r3, [r3, #269]	@ zero_extendqisi2
 5819 0058 1A46     		mov	r2, r3
 5820 005a 7B68     		ldr	r3, [r7, #4]
 5821 005c 93F80C31 		ldrb	r3, [r3, #268]	@ zero_extendqisi2
 5822 0060 D31A     		subs	r3, r2, r3
 5823 0062 BA68     		ldr	r2, [r7, #8]
 5824 0064 9A42     		cmp	r2, r3
 5825 0066 13DA     		bge	.L241
 707:../src/lpc_xav.cpp **** 			*(_Periph + 2) = Buffer[M_Counter++]; // Put next byte in SSPDR
 5826              		.loc 1 707 0 is_stmt 1 discriminator 2
 5827 0068 7B68     		ldr	r3, [r7, #4]
 5828 006a 93F80C31 		ldrb	r3, [r3, #268]	@ zero_extendqisi2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 113


 5829 006e 5A1C     		adds	r2, r3, #1
 5830 0070 D1B2     		uxtb	r1, r2
 5831 0072 7A68     		ldr	r2, [r7, #4]
 5832 0074 82F80C11 		strb	r1, [r2, #268]
 5833 0078 7A68     		ldr	r2, [r7, #4]
 5834 007a 5B00     		lsls	r3, r3, #1
 5835 007c 1344     		add	r3, r3, r2
 5836 007e DA88     		ldrh	r2, [r3, #6]
 5837 0080 7B68     		ldr	r3, [r7, #4]
 5838 0082 1B68     		ldr	r3, [r3]
 5839 0084 0833     		adds	r3, r3, #8
 5840 0086 1A60     		str	r2, [r3]
 706:../src/lpc_xav.cpp **** 			*(_Periph + 2) = Buffer[M_Counter++]; // Put next byte in SSPDR
 5841              		.loc 1 706 0 discriminator 2
 5842 0088 BB68     		ldr	r3, [r7, #8]
 5843 008a 0133     		adds	r3, r3, #1
 5844 008c BB60     		str	r3, [r7, #8]
 5845 008e E0E7     		b	.L240
 5846              	.L241:
 5847              	.LBE18:
 5848              	.LBE17:
 5849              	.LBE14:
 708:../src/lpc_xav.cpp **** 		}
 709:../src/lpc_xav.cpp **** 	}
 710:../src/lpc_xav.cpp **** }
 5850              		.loc 1 710 0
 5851 0090 00BF     		nop
 5852 0092 1437     		adds	r7, r7, #20
 5853              		.cfi_def_cfa_offset 4
 5854 0094 BD46     		mov	sp, r7
 5855              		.cfi_def_cfa_register 13
 5856              		@ sp needed
 5857 0096 80BC     		pop	{r7}
 5858              		.cfi_restore 7
 5859              		.cfi_def_cfa_offset 0
 5860 0098 7047     		bx	lr
 5861              		.cfi_endproc
 5862              	.LFE410:
 5864              		.section	.text._ZN3SSP13Send_SequenceEv,"ax",%progbits
 5865              		.align	1
 5866              		.global	_ZN3SSP13Send_SequenceEv
 5867              		.syntax unified
 5868              		.thumb
 5869              		.thumb_func
 5870              		.fpu softvfp
 5872              	_ZN3SSP13Send_SequenceEv:
 5873              	.LFB411:
 711:../src/lpc_xav.cpp **** 
 712:../src/lpc_xav.cpp **** void SSP::Send_Sequence()
 713:../src/lpc_xav.cpp **** {
 5874              		.loc 1 713 0
 5875              		.cfi_startproc
 5876              		@ args = 0, pretend = 0, frame = 8
 5877              		@ frame_needed = 1, uses_anonymous_args = 0
 5878 0000 80B5     		push	{r7, lr}
 5879              		.cfi_def_cfa_offset 8
 5880              		.cfi_offset 7, -8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 114


 5881              		.cfi_offset 14, -4
 5882 0002 82B0     		sub	sp, sp, #8
 5883              		.cfi_def_cfa_offset 16
 5884 0004 00AF     		add	r7, sp, #0
 5885              		.cfi_def_cfa_register 7
 5886 0006 7860     		str	r0, [r7, #4]
 714:../src/lpc_xav.cpp **** 	Enable_Int(TXIM);
 5887              		.loc 1 714 0
 5888 0008 0321     		movs	r1, #3
 5889 000a 7868     		ldr	r0, [r7, #4]
 5890 000c FFF7FEFF 		bl	_ZN3SSP10Enable_IntEh
 715:../src/lpc_xav.cpp **** }
 5891              		.loc 1 715 0
 5892 0010 00BF     		nop
 5893 0012 0837     		adds	r7, r7, #8
 5894              		.cfi_def_cfa_offset 8
 5895 0014 BD46     		mov	sp, r7
 5896              		.cfi_def_cfa_register 13
 5897              		@ sp needed
 5898 0016 80BD     		pop	{r7, pc}
 5899              		.cfi_endproc
 5900              	.LFE411:
 5902              		.section	.text._ZN3SSP12End_TransferEv,"ax",%progbits
 5903              		.align	1
 5904              		.global	_ZN3SSP12End_TransferEv
 5905              		.syntax unified
 5906              		.thumb
 5907              		.thumb_func
 5908              		.fpu softvfp
 5910              	_ZN3SSP12End_TransferEv:
 5911              	.LFB412:
 716:../src/lpc_xav.cpp **** 
 717:../src/lpc_xav.cpp **** void SSP::End_Transfer()
 718:../src/lpc_xav.cpp **** {
 5912              		.loc 1 718 0
 5913              		.cfi_startproc
 5914              		@ args = 0, pretend = 0, frame = 8
 5915              		@ frame_needed = 1, uses_anonymous_args = 0
 5916 0000 80B5     		push	{r7, lr}
 5917              		.cfi_def_cfa_offset 8
 5918              		.cfi_offset 7, -8
 5919              		.cfi_offset 14, -4
 5920 0002 82B0     		sub	sp, sp, #8
 5921              		.cfi_def_cfa_offset 16
 5922 0004 00AF     		add	r7, sp, #0
 5923              		.cfi_def_cfa_register 7
 5924 0006 7860     		str	r0, [r7, #4]
 719:../src/lpc_xav.cpp **** 	Disable_Int(TXIM);
 5925              		.loc 1 719 0
 5926 0008 0321     		movs	r1, #3
 5927 000a 7868     		ldr	r0, [r7, #4]
 5928 000c FFF7FEFF 		bl	_ZN3SSP11Disable_IntEh
 720:../src/lpc_xav.cpp **** }
 5929              		.loc 1 720 0
 5930 0010 00BF     		nop
 5931 0012 0837     		adds	r7, r7, #8
 5932              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 115


 5933 0014 BD46     		mov	sp, r7
 5934              		.cfi_def_cfa_register 13
 5935              		@ sp needed
 5936 0016 80BD     		pop	{r7, pc}
 5937              		.cfi_endproc
 5938              	.LFE412:
 5940              		.section	.text._ZN3SSP10Enable_IntEh,"ax",%progbits
 5941              		.align	1
 5942              		.global	_ZN3SSP10Enable_IntEh
 5943              		.syntax unified
 5944              		.thumb
 5945              		.thumb_func
 5946              		.fpu softvfp
 5948              	_ZN3SSP10Enable_IntEh:
 5949              	.LFB413:
 721:../src/lpc_xav.cpp **** 
 722:../src/lpc_xav.cpp **** void SSP::Enable_Int(uint8_t IntSelect)
 723:../src/lpc_xav.cpp **** {
 5950              		.loc 1 723 0
 5951              		.cfi_startproc
 5952              		@ args = 0, pretend = 0, frame = 8
 5953              		@ frame_needed = 1, uses_anonymous_args = 0
 5954 0000 80B5     		push	{r7, lr}
 5955              		.cfi_def_cfa_offset 8
 5956              		.cfi_offset 7, -8
 5957              		.cfi_offset 14, -4
 5958 0002 82B0     		sub	sp, sp, #8
 5959              		.cfi_def_cfa_offset 16
 5960 0004 00AF     		add	r7, sp, #0
 5961              		.cfi_def_cfa_register 7
 5962 0006 7860     		str	r0, [r7, #4]
 5963 0008 0B46     		mov	r3, r1
 5964 000a FB70     		strb	r3, [r7, #3]
 724:../src/lpc_xav.cpp **** 	*(_Periph + 5) |= (1 << IntSelect); // Enable selected interrupt
 5965              		.loc 1 724 0
 5966 000c 7B68     		ldr	r3, [r7, #4]
 5967 000e 1B68     		ldr	r3, [r3]
 5968 0010 1433     		adds	r3, r3, #20
 5969 0012 1A68     		ldr	r2, [r3]
 5970 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5971 0016 0121     		movs	r1, #1
 5972 0018 01FA03F3 		lsl	r3, r1, r3
 5973 001c 1946     		mov	r1, r3
 5974 001e 7B68     		ldr	r3, [r7, #4]
 5975 0020 1B68     		ldr	r3, [r3]
 5976 0022 1433     		adds	r3, r3, #20
 5977 0024 0A43     		orrs	r2, r2, r1
 5978 0026 1A60     		str	r2, [r3]
 725:../src/lpc_xav.cpp **** 
 726:../src/lpc_xav.cpp **** 	EnableIRQ(IRQ_bit);
 5979              		.loc 1 726 0
 5980 0028 7B68     		ldr	r3, [r7, #4]
 5981 002a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5982 002c 1846     		mov	r0, r3
 5983 002e FFF7FEFF 		bl	_Z9EnableIRQh
 727:../src/lpc_xav.cpp **** }
 5984              		.loc 1 727 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 116


 5985 0032 00BF     		nop
 5986 0034 0837     		adds	r7, r7, #8
 5987              		.cfi_def_cfa_offset 8
 5988 0036 BD46     		mov	sp, r7
 5989              		.cfi_def_cfa_register 13
 5990              		@ sp needed
 5991 0038 80BD     		pop	{r7, pc}
 5992              		.cfi_endproc
 5993              	.LFE413:
 5995              		.section	.text._ZN3SSP11Disable_IntEh,"ax",%progbits
 5996              		.align	1
 5997              		.global	_ZN3SSP11Disable_IntEh
 5998              		.syntax unified
 5999              		.thumb
 6000              		.thumb_func
 6001              		.fpu softvfp
 6003              	_ZN3SSP11Disable_IntEh:
 6004              	.LFB414:
 728:../src/lpc_xav.cpp **** 
 729:../src/lpc_xav.cpp **** void SSP::Disable_Int(uint8_t IntSelect)
 730:../src/lpc_xav.cpp **** {
 6005              		.loc 1 730 0
 6006              		.cfi_startproc
 6007              		@ args = 0, pretend = 0, frame = 8
 6008              		@ frame_needed = 1, uses_anonymous_args = 0
 6009              		@ link register save eliminated.
 6010 0000 80B4     		push	{r7}
 6011              		.cfi_def_cfa_offset 4
 6012              		.cfi_offset 7, -4
 6013 0002 83B0     		sub	sp, sp, #12
 6014              		.cfi_def_cfa_offset 16
 6015 0004 00AF     		add	r7, sp, #0
 6016              		.cfi_def_cfa_register 7
 6017 0006 7860     		str	r0, [r7, #4]
 6018 0008 0B46     		mov	r3, r1
 6019 000a FB70     		strb	r3, [r7, #3]
 731:../src/lpc_xav.cpp **** 	*(_Periph + 5) &= ~(1 << IntSelect); // Disable selected interrupt
 6020              		.loc 1 731 0
 6021 000c 7B68     		ldr	r3, [r7, #4]
 6022 000e 1B68     		ldr	r3, [r3]
 6023 0010 1433     		adds	r3, r3, #20
 6024 0012 1A68     		ldr	r2, [r3]
 6025 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6026 0016 0121     		movs	r1, #1
 6027 0018 01FA03F3 		lsl	r3, r1, r3
 6028 001c DB43     		mvns	r3, r3
 6029 001e 1946     		mov	r1, r3
 6030 0020 7B68     		ldr	r3, [r7, #4]
 6031 0022 1B68     		ldr	r3, [r3]
 6032 0024 1433     		adds	r3, r3, #20
 6033 0026 0A40     		ands	r2, r2, r1
 6034 0028 1A60     		str	r2, [r3]
 732:../src/lpc_xav.cpp **** }
 6035              		.loc 1 732 0
 6036 002a 00BF     		nop
 6037 002c 0C37     		adds	r7, r7, #12
 6038              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 117


 6039 002e BD46     		mov	sp, r7
 6040              		.cfi_def_cfa_register 13
 6041              		@ sp needed
 6042 0030 80BC     		pop	{r7}
 6043              		.cfi_restore 7
 6044              		.cfi_def_cfa_offset 0
 6045 0032 7047     		bx	lr
 6046              		.cfi_endproc
 6047              	.LFE414:
 6049              		.section	.text._ZN3SSPC2EPmhh,"ax",%progbits
 6050              		.align	1
 6051              		.global	_ZN3SSPC2EPmhh
 6052              		.syntax unified
 6053              		.thumb
 6054              		.thumb_func
 6055              		.fpu softvfp
 6057              	_ZN3SSPC2EPmhh:
 6058              	.LFB416:
 733:../src/lpc_xav.cpp **** 
 734:../src/lpc_xav.cpp **** SSP::SSP(uint32_t * PtrSSP, uint8_t C_bit, uint8_t Int_bit)
 6059              		.loc 1 734 0
 6060              		.cfi_startproc
 6061              		@ args = 0, pretend = 0, frame = 16
 6062              		@ frame_needed = 1, uses_anonymous_args = 0
 6063              		@ link register save eliminated.
 6064 0000 80B4     		push	{r7}
 6065              		.cfi_def_cfa_offset 4
 6066              		.cfi_offset 7, -4
 6067 0002 85B0     		sub	sp, sp, #20
 6068              		.cfi_def_cfa_offset 24
 6069 0004 00AF     		add	r7, sp, #0
 6070              		.cfi_def_cfa_register 7
 6071 0006 F860     		str	r0, [r7, #12]
 6072 0008 B960     		str	r1, [r7, #8]
 6073 000a 1146     		mov	r1, r2
 6074 000c 1A46     		mov	r2, r3
 6075 000e 0B46     		mov	r3, r1
 6076 0010 FB71     		strb	r3, [r7, #7]
 6077 0012 1346     		mov	r3, r2
 6078 0014 BB71     		strb	r3, [r7, #6]
 6079              	.LBB19:
 6080              		.file 2 "C:\\Users\\xavie\\Cegep\\Processeurs\\HeroOrZero\\inc/lpc_xav.h"
   1:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #include "chip.h"
   2:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #include "board.h"
   3:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #include "cr_section_macros.h"
   4:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
   5:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #ifndef LPC_XAV_H_
   6:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define LPC_XAV_H_
   7:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
   8:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define PCONP	 *((uint32_t *)0x400FC0C4)
   9:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define PCLKSEL0 *((uint32_t *)0x400FC1A8)
  10:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define PCLKSEL1 *((uint32_t *)0x400FC1AC)
  11:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  12:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define I2C_400KHZ	120
  13:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define I2C_100KHZ 	480
  14:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define I2C_50KHZ 	960
  15:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define SPI_24MHZ	4
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 118


  16:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define SPI_100KHZ  240
  17:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  18:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define SYS_FREQ ((uint32_t)96000000)
  19:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  20:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {GPIO, Fct0x1, Fct0x2, Fct0x3}; 				// GPIO pin function
  21:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {IN, OUT};										// GPIO direction
  22:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Pullup, Repeater, Float, Pulldown, Default};	// GPIO input mode
  23:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Normal, Open_Drain}; 							// GPIO output mode
  24:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Level_Sensitive, Edge_Sensitive};				// EXT int mode
  25:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {UND2, Rising_Edge, Falling_Edge, Both_Edges};	// Timer capture setting
  26:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {CLK4, CLK0, CLK2, CLK8};						// Timer clock rate (number stands for divisor)
  27:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Nothing, Clear, Set, Toggle};					// External match setting
  28:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {MR0 = 0x1, MR1 = 0x2, MR2 = 0x4, MR3 = 0x8, CR0 = 0x10, CR1 = 0x20};// Timer interrupt flag b
  29:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Disabled, Odd, Even = 3};						// UART Parity control
  30:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Single_Edge, Double_Edge};					// Motor PWM mode
  31:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Manual, Auto};								// AD Converter mode for starting conversions
  32:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Master = 0x40, Slave = 0x44};					// I2C Mode
  33:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {RORIM, RTIM, RXIM, TXIM};						// SSP Interrupt sources
  34:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  35:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class LPC_IO;
  36:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  37:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** void EnableIRQ(uint8_t Int_bit); // Enables periph's NVIC interrupt
  38:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** void GPIO_Enable_Int(uint8_t PortNo, uint8_t PinNo, uint8_t Edge_Select);
  39:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** void Enable_EXT_Int(uint8_t ExtIntNo, uint8_t ExtMode);
  40:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
  41:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class Port{ // Port object to provide pointers for the Lpc_IO class
  42:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	friend LPC_IO;
  43:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _PINCB; 	// Address of the first PINSEL register for desired port
  44:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _FIO; 	// Address of the first FIO register
  45:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _OD;		// Address of the open drain mode register
  46:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetFct(uint8_t PinNo, uint8_t Fct);
  47:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetDir(uint8_t PinNo, uint8_t Dir);
  48:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetMode(uint8_t PinNo, uint8_t Mode);
  49:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetOpenDrain(uint8_t PinNo, uint8_t Mode );
  50:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  51:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
  52:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Port(uint32_t* Pinsel_Add, // Constructor for LPC Port handles
  53:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		 uint32_t* FastIO_Add,
  54:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		 uint32_t* OpenDrain_Add);
  55:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
  56:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
  57:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class LPC_IO{ // Pin object to initialize all the register required for a pin functioning
  58:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Port& _Port;
  59:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Pin;
  60:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Function;
  61:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Direction;
  62:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Mode;
  63:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t OD_Mode;
  64:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  65:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
  66:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Out(bool State);
  67:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set();
  68:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Clear();
  69:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  70:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	LPC_IO();
  71:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	LPC_IO(	Port& PtrPort, // Constructor for IO pin handles.
  72:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t PinNo,
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 119


  73:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Fct,
  74:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Dir = OUT,
  75:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Md = Float,
  76:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t OD = Normal);
  77:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  78:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void operator=(bool OutputState) // Allows to use Object = boolean value; to set pin output
  79:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
  80:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		this->Out(OutputState);
  81:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
  82:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool operator==(bool BooleanValue)
  83:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
  84:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		if(BooleanValue == ((*(_Port._FIO + 5) >> this->Pin) & 0x1)){
  85:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return true;
  86:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  87:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		else{
  88:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return false;
  89:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  90:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
  91:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool operator!=(bool BooleanValue)
  92:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
  93:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		if(BooleanValue == ((*(_Port._FIO + 5) >> this->Pin) & 0x1)){
  94:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return false;
  95:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  96:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		else{
  97:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return true;
  98:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  99:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
 100:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 101:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 102:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class Bus{ // Bus object can be declared to group Lpc_IO handles together and use it as one 8-bit r
 103:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	LPC_IO * Bits[8];
 104:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Value;
 105:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 106:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 107:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Change_Value(uint8_t bus_value);
 108:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 109:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Bus(LPC_IO* LSB=nullptr, LPC_IO* B1=nullptr,
 110:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		LPC_IO* B2=nullptr, LPC_IO* B3=nullptr,
 111:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		LPC_IO* B4=nullptr, LPC_IO* B5=nullptr,
 112:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		LPC_IO* B6=nullptr, LPC_IO* MSB=nullptr);
 113:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 114:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void operator=(uint8_t bus_value)
 115:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
 116:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		Change_Value(bus_value);
 117:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
 118:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void operator+=(uint8_t increment_value)
 119:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
 120:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		Change_Value(Value + increment_value);
 121:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
 122:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 123:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 124:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class Timer{ // Timer object to group together all of a timer's functions and registers
 125:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 126:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Pwr_bit;
 127:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 128:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 129:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 120


 130:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 131:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Edge_Sel[2];
 132:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint8_t Clk_Speed); // Uses the IRQ bit to determine which PCLKSEL to set
 133:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Counter(uint8_t Channel, uint8_t Edge_Mode);
 134:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Capture(uint8_t Channel, uint8_t Edge_Mode);
 135:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Reset_onMatch(uint8_t Channel);
 136:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Match(uint8_t Channel, uint32_t Match_Value);
 137:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Ext_Match(uint8_t Channel, uint8_t Match_Setting);
 138:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Mat_Int(uint8_t Channel);
 139:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Cap_Int(uint8_t Channel);
 140:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Reset(); // Resets the TC
 141:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t get_IR();
 142:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Clear_Int(uint8_t FlagBit);
 143:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t get_CR(uint8_t Channel);
 144:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 145:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Timer(	uint32_t * PtrTimer, // Constructor function for timers
 146:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t P_bit,
 147:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t C_bit,
 148:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Int_bit);
 149:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 150:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 151:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class UART{
 152:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 153:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Pwr_bit;
 154:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 155:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 156:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 157:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 158:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint32_t Baudrate);
 159:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Transmission(uint8_t Bit_Length, uint8_t Parity);
 160:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_RX_Int();
 161:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PutByte(char Byte);
 162:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PrintStrConst(const char *StrToSend);
 163:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PrintDec(uint16_t NbrDec);
 164:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PrintFloat(uint16_t Scaled_Int);
 165:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void ClearScreen();
 166:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool Int_Flag_Set();
 167:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t get_RBR();
 168:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 169:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	UART(uint32_t * PtrUART, uint8_t P_bit, uint8_t C_bit, uint8_t Int_bit);
 170:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 171:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 172:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class PWM{
 173:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static uint32_t * _Periph;
 174:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Output_Channel;
 175:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 176:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	float Duty;
 177:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Set_Freq(uint32_t Freq); // Setup MR0 value that controls frequency of all single-e PW
 178:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Reset_onMatch();
 179:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Duty(float DutyPercentage);
 180:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Increment_Duty();
 181:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Decrement_Duty();
 182:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Enable(); // Always use at the end of initialization, starts TC for all PWMs
 183:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 184:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	PWM(uint8_t Ch, uint8_t Edge_Sel);
 185:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 186:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 121


 187:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class ADC{
 188:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static uint32_t * _Periph;
 189:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Output_Channel;
 190:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 191:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Start_Burst_Conversion(uint8_t Sel_Val);
 192:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Stop_Burst_Conversion();
 193:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Start_Conversion();
 194:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Stop_Conversion();
 195:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Int();
 196:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint16_t get_12bit_Result();
 197:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 198:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	ADC(uint8_t Ch, uint32_t Target_Freq);
 199:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 200:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 201:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class DAC{
 202:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static uint32_t * _Periph;
 203:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 204:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Output(uint16_t Val_10bit);
 205:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Out_Percent(uint8_t Percentage);
 206:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 207:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 208:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class _I2C{
 209:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 210:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 211:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 212:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 213:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t tx_buf[512];
 214:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t rx_buf[512];
 215:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool Busy;
 216:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t M_Counter_tx;
 217:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t M_Counter_rx;
 218:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Msg_Length;
 219:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Read_Length;
 220:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 221:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint8_t Bus_Mode, uint32_t I2C_Speed);
 222:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t get_Status();
 223:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void New_Sequence(uint8_t Slave_Address, uint16_t readLength = 0);
 224:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_String(const char * StrToSend);
 225:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Integer(uint32_t NumberToSend, uint8_t NbDigits);
 226:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Float(uint32_t NumberToSend, uint8_t NbDigits, uint8_t DP_Position);
 227:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_Byte(uint8_t ByteToSend);
 228:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Next_Byte();
 229:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Read_Next_Byte();
 230:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Address();
 231:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Stop();
 232:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_nACK();
 233:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Sequence();
 234:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Clear_Interrupt();
 235:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 236:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	_I2C(uint32_t * PtrI2C, uint8_t C_bit, uint8_t Int_bit);
 237:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 238:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 239:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class SSP{
 240:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 241:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 242:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 243:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint16_t Buffer[128];
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 122


 244:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 245:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t MIS = *(_Periph + 7);
 6081              		.loc 2 245 0
 6082 0016 FB68     		ldr	r3, [r7, #12]
 6083 0018 1B68     		ldr	r3, [r3]
 6084              		.loc 1 734 0
 6085 001a DA69     		ldr	r2, [r3, #28]
 6086 001c FB68     		ldr	r3, [r7, #12]
 6087 001e C3F80821 		str	r2, [r3, #264]
 735:../src/lpc_xav.cpp **** {
 736:../src/lpc_xav.cpp **** 	_Periph = PtrSSP;
 6088              		.loc 1 736 0
 6089 0022 FB68     		ldr	r3, [r7, #12]
 6090 0024 BA68     		ldr	r2, [r7, #8]
 6091 0026 1A60     		str	r2, [r3]
 737:../src/lpc_xav.cpp **** 	Clk_bit = C_bit;
 6092              		.loc 1 737 0
 6093 0028 FB68     		ldr	r3, [r7, #12]
 6094 002a FA79     		ldrb	r2, [r7, #7]
 6095 002c 1A71     		strb	r2, [r3, #4]
 738:../src/lpc_xav.cpp **** 	IRQ_bit = Int_bit;
 6096              		.loc 1 738 0
 6097 002e FB68     		ldr	r3, [r7, #12]
 6098 0030 BA79     		ldrb	r2, [r7, #6]
 6099 0032 5A71     		strb	r2, [r3, #5]
 6100              	.LBE19:
 739:../src/lpc_xav.cpp **** }
 6101              		.loc 1 739 0
 6102 0034 FB68     		ldr	r3, [r7, #12]
 6103 0036 1846     		mov	r0, r3
 6104 0038 1437     		adds	r7, r7, #20
 6105              		.cfi_def_cfa_offset 4
 6106 003a BD46     		mov	sp, r7
 6107              		.cfi_def_cfa_register 13
 6108              		@ sp needed
 6109 003c 80BC     		pop	{r7}
 6110              		.cfi_restore 7
 6111              		.cfi_def_cfa_offset 0
 6112 003e 7047     		bx	lr
 6113              		.cfi_endproc
 6114              	.LFE416:
 6116              		.global	_ZN3SSPC1EPmhh
 6117              		.thumb_set _ZN3SSPC1EPmhh,_ZN3SSPC2EPmhh
 6118              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 6119              		.align	1
 6120              		.syntax unified
 6121              		.thumb
 6122              		.thumb_func
 6123              		.fpu softvfp
 6125              	_Z41__static_initialization_and_destruction_0ii:
 6126              	.LFB418:
 6127              		.loc 1 739 0
 6128              		.cfi_startproc
 6129              		@ args = 0, pretend = 0, frame = 8
 6130              		@ frame_needed = 1, uses_anonymous_args = 0
 6131 0000 80B5     		push	{r7, lr}
 6132              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 123


 6133              		.cfi_offset 7, -8
 6134              		.cfi_offset 14, -4
 6135 0002 84B0     		sub	sp, sp, #16
 6136              		.cfi_def_cfa_offset 24
 6137 0004 02AF     		add	r7, sp, #8
 6138              		.cfi_def_cfa 7, 16
 6139 0006 7860     		str	r0, [r7, #4]
 6140 0008 3960     		str	r1, [r7]
 6141              		.loc 1 739 0
 6142 000a 7B68     		ldr	r3, [r7, #4]
 6143 000c 012B     		cmp	r3, #1
 6144 000e 5BD1     		bne	.L250
 6145              		.loc 1 739 0 is_stmt 0 discriminator 1
 6146 0010 3B68     		ldr	r3, [r7]
 6147 0012 4FF6FF72 		movw	r2, #65535
 6148 0016 9342     		cmp	r3, r2
 6149 0018 56D1     		bne	.L250
 246:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t M_Counter;
 247:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Msg_Length;
 248:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 249:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint8_t ClkPrescaler, uint8_t DataSizeSelect, uint8_t CPOL, uint8_t CPHA);
 250:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void New_Sequence();
 251:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_String(const char * StrToSend);
 252:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Integer(uint32_t NumberToSend, uint8_t NbDigits);
 253:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Float(uint32_t NumberToSend, uint8_t NbDigits, uint8_t DP_Position);
 254:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_Byte(uint16_t ByteToSend);
 255:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Next_Byte();
 256:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Sequence();
 257:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void End_Transfer();
 258:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Int(uint8_t IntSelect);
 259:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Disable_Int(uint8_t IntSelect);
 260:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 261:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	SSP(uint32_t * PtrSSP, uint8_t C_bit, uint8_t Int_bit);
 262:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 263:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 264:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** // Mandatory objects declaration (Peripherals)
 265:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P0((uint32_t *)0x4002C000, (uint32_t *)0x2009C000, (uint32_t *)0x4002C068);
 6150              		.loc 2 265 0 is_stmt 1
 6151 001a 2D4B     		ldr	r3, .L251
 6152 001c 2D4A     		ldr	r2, .L251+4
 6153 001e 2E49     		ldr	r1, .L251+8
 6154 0020 2E48     		ldr	r0, .L251+12
 6155 0022 FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 266:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P1((uint32_t *)0x4002C008, (uint32_t *)0x2009C020, (uint32_t *)0x4002C06C);
 6156              		.loc 2 266 0
 6157 0026 2E4B     		ldr	r3, .L251+16
 6158 0028 2E4A     		ldr	r2, .L251+20
 6159 002a 2F49     		ldr	r1, .L251+24
 6160 002c 2F48     		ldr	r0, .L251+28
 6161 002e FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 267:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P2((uint32_t *)0x4002C010, (uint32_t *)0x2009C040, (uint32_t *)0x4002C070);
 6162              		.loc 2 267 0
 6163 0032 2F4B     		ldr	r3, .L251+32
 6164 0034 2F4A     		ldr	r2, .L251+36
 6165 0036 3049     		ldr	r1, .L251+40
 6166 0038 3048     		ldr	r0, .L251+44
 6167 003a FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 124


 268:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P3((uint32_t *)0x4002C018, (uint32_t *)0x2009C060, (uint32_t *)0x4002C074);
 6168              		.loc 2 268 0
 6169 003e 304B     		ldr	r3, .L251+48
 6170 0040 304A     		ldr	r2, .L251+52
 6171 0042 3149     		ldr	r1, .L251+56
 6172 0044 3148     		ldr	r0, .L251+60
 6173 0046 FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 269:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P4((uint32_t *)0x4002C020, (uint32_t *)0x2009C080, (uint32_t *)0x4002C078);
 6174              		.loc 2 269 0
 6175 004a 314B     		ldr	r3, .L251+64
 6176 004c 314A     		ldr	r2, .L251+68
 6177 004e 3249     		ldr	r1, .L251+72
 6178 0050 3248     		ldr	r0, .L251+76
 6179 0052 FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 270:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 271:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR0((uint32_t *)0x40004000, 1, 2, 1);
 6180              		.loc 2 271 0
 6181 0056 0123     		movs	r3, #1
 6182 0058 0093     		str	r3, [sp]
 6183 005a 0223     		movs	r3, #2
 6184 005c 0122     		movs	r2, #1
 6185 005e 4FF04021 		mov	r1, #1073758208
 6186 0062 2F48     		ldr	r0, .L251+80
 6187 0064 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 272:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR1((uint32_t *)0x40008000, 2, 4, 2);
 6188              		.loc 2 272 0
 6189 0068 0223     		movs	r3, #2
 6190 006a 0093     		str	r3, [sp]
 6191 006c 0423     		movs	r3, #4
 6192 006e 0222     		movs	r2, #2
 6193 0070 2C49     		ldr	r1, .L251+84
 6194 0072 2D48     		ldr	r0, .L251+88
 6195 0074 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 273:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR2((uint32_t *)0x40090000, 22, 12, 3);
 6196              		.loc 2 273 0
 6197 0078 0323     		movs	r3, #3
 6198 007a 0093     		str	r3, [sp]
 6199 007c 0C23     		movs	r3, #12
 6200 007e 1622     		movs	r2, #22
 6201 0080 2A49     		ldr	r1, .L251+92
 6202 0082 2B48     		ldr	r0, .L251+96
 6203 0084 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 274:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR3((uint32_t *)0x40094000, 23, 14, 4);
 6204              		.loc 2 274 0
 6205 0088 0423     		movs	r3, #4
 6206 008a 0093     		str	r3, [sp]
 6207 008c 0E23     		movs	r3, #14
 6208 008e 1722     		movs	r2, #23
 6209 0090 2849     		ldr	r1, .L251+100
 6210 0092 2948     		ldr	r0, .L251+104
 6211 0094 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 275:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 276:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static UART UART0((uint32_t *)0x4000C000, 3, 6, 5);
 6212              		.loc 2 276 0
 6213 0098 0523     		movs	r3, #5
 6214 009a 0093     		str	r3, [sp]
 6215 009c 0623     		movs	r3, #6
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 125


 6216 009e 0322     		movs	r2, #3
 6217 00a0 2649     		ldr	r1, .L251+108
 6218 00a2 2748     		ldr	r0, .L251+112
 6219 00a4 FFF7FEFF 		bl	_ZN4UARTC1EPmhhh
 277:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static UART Keyboard((uint32_t *)0x40098000, 24, 16, 7);
 6220              		.loc 2 277 0
 6221 00a8 0723     		movs	r3, #7
 6222 00aa 0093     		str	r3, [sp]
 6223 00ac 1023     		movs	r3, #16
 6224 00ae 1822     		movs	r2, #24
 6225 00b0 2449     		ldr	r1, .L251+116
 6226 00b2 2548     		ldr	r0, .L251+120
 6227 00b4 FFF7FEFF 		bl	_ZN4UARTC1EPmhhh
 278:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static UART Console((uint32_t *)0x4009C000, 25, 18, 8);
 6228              		.loc 2 278 0
 6229 00b8 0823     		movs	r3, #8
 6230 00ba 0093     		str	r3, [sp]
 6231 00bc 1223     		movs	r3, #18
 6232 00be 1922     		movs	r2, #25
 6233 00c0 2249     		ldr	r1, .L251+124
 6234 00c2 2348     		ldr	r0, .L251+128
 6235 00c4 FFF7FEFF 		bl	_ZN4UARTC1EPmhhh
 6236              	.L250:
 6237              		.loc 1 739 0
 6238 00c8 00BF     		nop
 6239 00ca 0837     		adds	r7, r7, #8
 6240              		.cfi_def_cfa_offset 8
 6241 00cc BD46     		mov	sp, r7
 6242              		.cfi_def_cfa_register 13
 6243              		@ sp needed
 6244 00ce 80BD     		pop	{r7, pc}
 6245              	.L252:
 6246              		.align	2
 6247              	.L251:
 6248 00d0 68C00240 		.word	1073922152
 6249 00d4 00C00920 		.word	537509888
 6250 00d8 00C00240 		.word	1073922048
 6251 00dc 00000000 		.word	_ZL2P0
 6252 00e0 6CC00240 		.word	1073922156
 6253 00e4 20C00920 		.word	537509920
 6254 00e8 08C00240 		.word	1073922056
 6255 00ec 00000000 		.word	_ZL2P1
 6256 00f0 70C00240 		.word	1073922160
 6257 00f4 40C00920 		.word	537509952
 6258 00f8 10C00240 		.word	1073922064
 6259 00fc 00000000 		.word	_ZL2P2
 6260 0100 74C00240 		.word	1073922164
 6261 0104 60C00920 		.word	537509984
 6262 0108 18C00240 		.word	1073922072
 6263 010c 00000000 		.word	_ZL2P3
 6264 0110 78C00240 		.word	1073922168
 6265 0114 80C00920 		.word	537510016
 6266 0118 20C00240 		.word	1073922080
 6267 011c 00000000 		.word	_ZL2P4
 6268 0120 00000000 		.word	_ZL4TMR0
 6269 0124 00800040 		.word	1073774592
 6270 0128 00000000 		.word	_ZL4TMR1
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 126


 6271 012c 00000940 		.word	1074331648
 6272 0130 00000000 		.word	_ZL4TMR2
 6273 0134 00400940 		.word	1074348032
 6274 0138 00000000 		.word	_ZL4TMR3
 6275 013c 00C00040 		.word	1073790976
 6276 0140 00000000 		.word	_ZL5UART0
 6277 0144 00800940 		.word	1074364416
 6278 0148 00000000 		.word	_ZL8Keyboard
 6279 014c 00C00940 		.word	1074380800
 6280 0150 00000000 		.word	_ZL7Console
 6281              		.cfi_endproc
 6282              	.LFE418:
 6284              		.section	.text._GLOBAL__sub_I__Z9EnableIRQh,"ax",%progbits
 6285              		.align	1
 6286              		.syntax unified
 6287              		.thumb
 6288              		.thumb_func
 6289              		.fpu softvfp
 6291              	_GLOBAL__sub_I__Z9EnableIRQh:
 6292              	.LFB419:
 6293              		.loc 1 739 0
 6294              		.cfi_startproc
 6295              		@ args = 0, pretend = 0, frame = 0
 6296              		@ frame_needed = 1, uses_anonymous_args = 0
 6297 0000 80B5     		push	{r7, lr}
 6298              		.cfi_def_cfa_offset 8
 6299              		.cfi_offset 7, -8
 6300              		.cfi_offset 14, -4
 6301 0002 00AF     		add	r7, sp, #0
 6302              		.cfi_def_cfa_register 7
 6303              		.loc 1 739 0
 6304 0004 4FF6FF71 		movw	r1, #65535
 6305 0008 0120     		movs	r0, #1
 6306 000a FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 6307 000e 80BD     		pop	{r7, pc}
 6308              		.cfi_endproc
 6309              	.LFE419:
 6311              		.section	.init_array,"aw",%init_array
 6312              		.align	2
 6313 0000 00000000 		.word	_GLOBAL__sub_I__Z9EnableIRQh(target1)
 6314              		.text
 6315              	.Letext0:
 6316              		.file 3 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\machine\\_default_
 6317              		.file 4 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\_stdint.h"
 6318              		.file 5 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/lpc_types.h"
 6319              		.file 6 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/cmsis_175x_6x.h"
 6320              		.file 7 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/core_cm3.h"
 6321              		.file 8 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/chip.h"
 6322              		.file 9 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/sysctl_17xx_40xx.h"
 6323              		.file 10 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/clock_17xx_40xx.h"
 6324              		.file 11 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/iocon_17xx_40xx.h"
 6325              		.file 12 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/can_17xx_40xx.h"
 6326              		.file 13 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/i2s_17xx_40xx.h"
 6327              		.file 14 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/rtc_17xx_40xx.h"
 6328              		.file 15 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/spi_17xx_40xx.h"
 6329              		.file 16 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/error.h"
 6330              		.file 17 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\lock.h"
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 127


 6331              		.file 18 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\_types.h"
 6332              		.file 19 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\
 6333              		.file 20 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\reent.h"
 6334              		.file 21 "C:\\Users\\xavie\\Cegep\\Processeurs\\HeroOrZero\\inc/segdisplay.h"
 6335              		.file 22 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/ssp_17xx_40xx.h"
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 128


DEFINED SYMBOLS
                            *ABS*:00000000 lpc_xav.cpp
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:16     .bss._ZL2P0:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:19     .bss._ZL2P0:00000000 _ZL2P0
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:22     .bss._ZL2P1:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:25     .bss._ZL2P1:00000000 _ZL2P1
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:28     .bss._ZL2P2:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:31     .bss._ZL2P2:00000000 _ZL2P2
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:34     .bss._ZL2P3:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:37     .bss._ZL2P3:00000000 _ZL2P3
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:40     .bss._ZL2P4:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:43     .bss._ZL2P4:00000000 _ZL2P4
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:46     .bss._ZL4TMR0:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:49     .bss._ZL4TMR0:00000000 _ZL4TMR0
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:52     .bss._ZL4TMR1:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:55     .bss._ZL4TMR1:00000000 _ZL4TMR1
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:58     .bss._ZL4TMR2:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:61     .bss._ZL4TMR2:00000000 _ZL4TMR2
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:64     .bss._ZL4TMR3:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:67     .bss._ZL4TMR3:00000000 _ZL4TMR3
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:70     .bss._ZL5UART0:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:73     .bss._ZL5UART0:00000000 _ZL5UART0
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:76     .bss._ZL8Keyboard:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:79     .bss._ZL8Keyboard:00000000 _ZL8Keyboard
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:82     .bss._ZL7Console:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:85     .bss._ZL7Console:00000000 _ZL7Console
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:88     .rodata._ZL19PtrRI_TIMER_COMPVAL:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:91     .rodata._ZL19PtrRI_TIMER_COMPVAL:00000000 _ZL19PtrRI_TIMER_COMPVAL
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:94     .rodata._ZL16PtrRI_TIMER_MASK:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:97     .rodata._ZL16PtrRI_TIMER_MASK:00000000 _ZL16PtrRI_TIMER_MASK
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:100    .rodata._ZL16PtrRI_TIMER_CTRL:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:103    .rodata._ZL16PtrRI_TIMER_CTRL:00000000 _ZL16PtrRI_TIMER_CTRL
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:106    .rodata._ZL17PtrRI_TIMER_COUNT:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:109    .rodata._ZL17PtrRI_TIMER_COUNT:00000000 _ZL17PtrRI_TIMER_COUNT
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:112    .text._Z9EnableIRQh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:119    .text._Z9EnableIRQh:00000000 _Z9EnableIRQh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:170    .text._Z9EnableIRQh:0000003c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:176    .text._Z15GPIO_Enable_Inthhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:183    .text._Z15GPIO_Enable_Inthhh:00000000 _Z15GPIO_Enable_Inthhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:261    .text._Z15GPIO_Enable_Inthhh:00000074 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:267    .text._Z14Enable_EXT_Inthh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:274    .text._Z14Enable_EXT_Inthh:00000000 _Z14Enable_EXT_Inthh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:331    .text._Z14Enable_EXT_Inthh:00000050 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:336    .text._ZN4Port6SetFctEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:343    .text._ZN4Port6SetFctEhh:00000000 _ZN4Port6SetFctEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:445    .text._ZN4Port6SetDirEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:452    .text._ZN4Port6SetDirEhh:00000000 _ZN4Port6SetDirEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:511    .text._ZN4Port7SetModeEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:518    .text._ZN4Port7SetModeEhh:00000000 _ZN4Port7SetModeEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:624    .text._ZN4Port12SetOpenDrainEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:631    .text._ZN4Port12SetOpenDrainEhh:00000000 _ZN4Port12SetOpenDrainEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:695    .text._ZN4PortC2EPmS0_S0_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:702    .text._ZN4PortC2EPmS0_S0_:00000000 _ZN4PortC2EPmS0_S0_
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:702    .text._ZN4PortC2EPmS0_S0_:00000000 _ZN4PortC1EPmS0_S0_
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:750    .text._ZN6LPC_IO3OutEb:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:757    .text._ZN6LPC_IO3OutEb:00000000 _ZN6LPC_IO3OutEb
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:836    .text._ZN6LPC_IO3SetEv:00000000 $t
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 129


C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:843    .text._ZN6LPC_IO3SetEv:00000000 _ZN6LPC_IO3SetEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:891    .text._ZN6LPC_IO5ClearEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:898    .text._ZN6LPC_IO5ClearEv:00000000 _ZN6LPC_IO5ClearEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:946    .text._ZN6LPC_IOC2ER4Porthhhhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:953    .text._ZN6LPC_IOC2ER4Porthhhhh:00000000 _ZN6LPC_IOC2ER4Porthhhhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:953    .text._ZN6LPC_IOC2ER4Porthhhhh:00000000 _ZN6LPC_IOC1ER4Porthhhhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1058   .text._ZN3Bus12Change_ValueEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1065   .text._ZN3Bus12Change_ValueEh:00000000 _ZN3Bus12Change_ValueEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1135   .text._ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1142   .text._ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_:00000000 _ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1142   .text._ZN3BusC2EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_:00000000 _ZN3BusC1EP6LPC_IOS1_S1_S1_S1_S1_S1_S1_
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1216   .text._ZN5Timer4InitEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1223   .text._ZN5Timer4InitEh:00000000 _ZN5Timer4InitEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1329   .text._ZN5Timer4InitEh:00000098 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1336   .text._ZN5Timer14Enable_CounterEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1343   .text._ZN5Timer14Enable_CounterEhh:00000000 _ZN5Timer14Enable_CounterEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1397   .text._ZN5Timer14Enable_CaptureEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1404   .text._ZN5Timer14Enable_CaptureEhh:00000000 _ZN5Timer14Enable_CaptureEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1479   .text._ZN5Timer13Reset_onMatchEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1486   .text._ZN5Timer13Reset_onMatchEh:00000000 _ZN5Timer13Reset_onMatchEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1535   .text._ZN5Timer9Set_MatchEhm:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1542   .text._ZN5Timer9Set_MatchEhm:00000000 _ZN5Timer9Set_MatchEhm
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1584   .text._ZN5Timer16Enable_Ext_MatchEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1591   .text._ZN5Timer16Enable_Ext_MatchEhh:00000000 _ZN5Timer16Enable_Ext_MatchEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1658   .text._ZN5Timer14Enable_Mat_IntEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1665   .text._ZN5Timer14Enable_Mat_IntEh:00000000 _ZN5Timer14Enable_Mat_IntEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1716   .text._ZN5Timer14Enable_Cap_IntEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1723   .text._ZN5Timer14Enable_Cap_IntEh:00000000 _ZN5Timer14Enable_Cap_IntEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1774   .text._ZN5Timer5ResetEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1781   .text._ZN5Timer5ResetEv:00000000 _ZN5Timer5ResetEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1823   .text._ZN5Timer6get_IREv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1830   .text._ZN5Timer6get_IREv:00000000 _ZN5Timer6get_IREv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1865   .text._ZN5Timer9Clear_IntEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1872   .text._ZN5Timer9Clear_IntEh:00000000 _ZN5Timer9Clear_IntEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1913   .text._ZN5Timer6get_CREh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1920   .text._ZN5Timer6get_CREh:00000000 _ZN5Timer6get_CREh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1960   .text._ZN5TimerC2EPmhhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1967   .text._ZN5TimerC2EPmhhh:00000000 _ZN5TimerC2EPmhhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:1967   .text._ZN5TimerC2EPmhhh:00000000 _ZN5TimerC1EPmhhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2022   .text._ZN4UART4InitEm:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2029   .text._ZN4UART4InitEm:00000000 _ZN4UART4InitEm
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2178   .text._ZN4UART4InitEm:000000f0 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2186   .text._ZN4UART16Set_TransmissionEhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2193   .text._ZN4UART16Set_TransmissionEhh:00000000 _ZN4UART16Set_TransmissionEhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2273   .text._ZN4UART7PutByteEc:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2280   .text._ZN4UART7PutByteEc:00000000 _ZN4UART7PutByteEc
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2328   .text._ZN4UART13PrintStrConstEPKc:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2335   .text._ZN4UART13PrintStrConstEPKc:00000000 _ZN4UART13PrintStrConstEPKc
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2381   .text._ZN4UART8PrintDecEt:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2388   .text._ZN4UART8PrintDecEt:00000000 _ZN4UART8PrintDecEt
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2476   .text._ZN4UART8PrintDecEt:0000008c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2481   .text._ZN4UART10PrintFloatEt:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2488   .text._ZN4UART10PrintFloatEt:00000000 _ZN4UART10PrintFloatEt
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2581   .text._ZN4UART10PrintFloatEt:0000009c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2586   .text._ZN4UART11ClearScreenEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2593   .text._ZN4UART11ClearScreenEv:00000000 _ZN4UART11ClearScreenEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2644   .text._ZN4UART13Enable_RX_IntEv:00000000 $t
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 130


C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2651   .text._ZN4UART13Enable_RX_IntEv:00000000 _ZN4UART13Enable_RX_IntEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2689   .text._ZN4UART12Int_Flag_SetEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2696   .text._ZN4UART12Int_Flag_SetEv:00000000 _ZN4UART12Int_Flag_SetEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2752   .text._ZN4UART7get_RBREv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2759   .text._ZN4UART7get_RBREv:00000000 _ZN4UART7get_RBREv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2794   .text._ZN4UARTC2EPmhhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2801   .text._ZN4UARTC2EPmhhh:00000000 _ZN4UARTC2EPmhhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2801   .text._ZN4UARTC2EPmhhh:00000000 _ZN4UARTC1EPmhhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2860   .data._ZN3PWM7_PeriphE:00000000 _ZN3PWM7_PeriphE
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2857   .data._ZN3PWM7_PeriphE:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2863   .text._ZN3PWM8Set_FreqEm:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2870   .text._ZN3PWM8Set_FreqEm:00000000 _ZN3PWM8Set_FreqEm
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2927   .text._ZN3PWM8Set_FreqEm:0000004c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2933   .text._ZN3PWM13Reset_onMatchEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2940   .text._ZN3PWM13Reset_onMatchEv:00000000 _ZN3PWM13Reset_onMatchEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2988   .text._ZN3PWM13Reset_onMatchEv:00000038 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:2996   .text._ZN3PWM8Set_DutyEf:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3003   .text._ZN3PWM8Set_DutyEf:00000000 _ZN3PWM8Set_DutyEf
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3083   .text._ZN3PWM8Set_DutyEf:00000078 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3091   .text._ZN3PWM14Increment_DutyEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3098   .text._ZN3PWM14Increment_DutyEv:00000000 _ZN3PWM14Increment_DutyEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3149   .text._ZN3PWM14Increment_DutyEv:0000003c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3156   .text._ZN3PWM14Decrement_DutyEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3163   .text._ZN3PWM14Decrement_DutyEv:00000000 _ZN3PWM14Decrement_DutyEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3214   .text._ZN3PWM14Decrement_DutyEv:0000003c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3219   .text._ZN3PWM6EnableEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3226   .text._ZN3PWM6EnableEv:00000000 _ZN3PWM6EnableEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3260   .text._ZN3PWM6EnableEv:00000020 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3265   .text._ZN3PWMC2Ehh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3272   .text._ZN3PWMC2Ehh:00000000 _ZN3PWMC2Ehh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3366   .text._ZN3PWMC2Ehh:0000008c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3272   .text._ZN3PWMC2Ehh:00000000 _ZN3PWMC1Ehh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3378   .data._ZN3ADC7_PeriphE:00000000 _ZN3ADC7_PeriphE
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3375   .data._ZN3ADC7_PeriphE:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3381   .text._ZN3ADC16Start_ConversionEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3388   .text._ZN3ADC16Start_ConversionEv:00000000 _ZN3ADC16Start_ConversionEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3439   .text._ZN3ADC16Start_ConversionEv:0000003c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3444   .text._ZN3ADC22Start_Burst_ConversionEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3451   .text._ZN3ADC22Start_Burst_ConversionEh:00000000 _ZN3ADC22Start_Burst_ConversionEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3492   .text._ZN3ADC22Start_Burst_ConversionEh:0000002c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3497   .text._ZN3ADC15Stop_ConversionEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3504   .text._ZN3ADC15Stop_ConversionEv:00000000 _ZN3ADC15Stop_ConversionEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3556   .text._ZN3ADC15Stop_ConversionEv:00000040 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3561   .text._ZN3ADC21Stop_Burst_ConversionEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3568   .text._ZN3ADC21Stop_Burst_ConversionEv:00000000 _ZN3ADC21Stop_Burst_ConversionEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3608   .text._ZN3ADC21Stop_Burst_ConversionEv:0000002c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3613   .text._ZN3ADC10Enable_IntEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3620   .text._ZN3ADC10Enable_IntEv:00000000 _ZN3ADC10Enable_IntEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3675   .text._ZN3ADC10Enable_IntEv:00000048 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3680   .text._ZN3ADC16get_12bit_ResultEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3687   .text._ZN3ADC16get_12bit_ResultEv:00000000 _ZN3ADC16get_12bit_ResultEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3729   .text._ZN3ADC16get_12bit_ResultEv:0000002c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3734   .text._ZN3ADCC2Ehm:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3741   .text._ZN3ADCC2Ehm:00000000 _ZN3ADCC2Ehm
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3813   .text._ZN3ADCC2Ehm:00000064 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3741   .text._ZN3ADCC2Ehm:00000000 _ZN3ADCC1Ehm
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3827   .data._ZN3DAC7_PeriphE:00000000 _ZN3DAC7_PeriphE
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 131


C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3824   .data._ZN3DAC7_PeriphE:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3830   .text._ZN3DAC10Set_OutputEt:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3837   .text._ZN3DAC10Set_OutputEt:00000000 _ZN3DAC10Set_OutputEt
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3887   .text._ZN3DAC10Set_OutputEt:0000003c $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3892   .text._ZN3DAC15Set_Out_PercentEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3899   .text._ZN3DAC15Set_Out_PercentEh:00000000 _ZN3DAC15Set_Out_PercentEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3942   .text._ZN3DAC15Set_Out_PercentEh:00000034 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3947   .text._ZN4_I2C4InitEhm:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:3954   .text._ZN4_I2C4InitEhm:00000000 _ZN4_I2C4InitEhm
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4036   .text._ZN4_I2C4InitEhm:00000074 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4041   .text._ZN4_I2C10get_StatusEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4048   .text._ZN4_I2C10get_StatusEv:00000000 _ZN4_I2C10get_StatusEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4084   .text._ZN4_I2C12New_SequenceEht:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4091   .text._ZN4_I2C12New_SequenceEht:00000000 _ZN4_I2C12New_SequenceEht
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4182   .text._ZN4_I2C10Add_StringEPKc:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4189   .text._ZN4_I2C10Add_StringEPKc:00000000 _ZN4_I2C10Add_StringEPKc
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4244   .text._ZN4_I2C15Add_BCD_IntegerEmh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4251   .text._ZN4_I2C15Add_BCD_IntegerEmh:00000000 _ZN4_I2C15Add_BCD_IntegerEmh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4284   .text._ZN4_I2C15Add_BCD_IntegerEmh:00000028 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4288   .text._ZN4_I2C15Add_BCD_IntegerEmh:00000038 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4379   .text._ZN4_I2C15Add_BCD_IntegerEmh:000000ec $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4384   .text._ZN4_I2C13Add_BCD_FloatEmhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4391   .text._ZN4_I2C13Add_BCD_FloatEmhh:00000000 _ZN4_I2C13Add_BCD_FloatEmhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4428   .text._ZN4_I2C13Add_BCD_FloatEmhh:00000034 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4432   .text._ZN4_I2C13Add_BCD_FloatEmhh:00000044 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4571   .text._ZN4_I2C13Add_BCD_FloatEmhh:00000158 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4576   .text._ZN4_I2C8Add_ByteEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4583   .text._ZN4_I2C8Add_ByteEh:00000000 _ZN4_I2C8Add_ByteEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4627   .text._ZN4_I2C14Read_Next_ByteEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4634   .text._ZN4_I2C14Read_Next_ByteEv:00000000 _ZN4_I2C14Read_Next_ByteEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4686   .text._ZN4_I2C14Send_Next_ByteEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4693   .text._ZN4_I2C14Send_Next_ByteEv:00000000 _ZN4_I2C14Send_Next_ByteEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4744   .text._ZN4_I2C12Send_AddressEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4751   .text._ZN4_I2C12Send_AddressEv:00000000 _ZN4_I2C12Send_AddressEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4802   .text._ZN4_I2C9Send_StopEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4809   .text._ZN4_I2C9Send_StopEv:00000000 _ZN4_I2C9Send_StopEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4857   .text._ZN4_I2C9Send_nACKEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4864   .text._ZN4_I2C9Send_nACKEv:00000000 _ZN4_I2C9Send_nACKEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4900   .text._ZN4_I2C13Send_SequenceEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4907   .text._ZN4_I2C13Send_SequenceEv:00000000 _ZN4_I2C13Send_SequenceEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4949   .text._ZN4_I2C15Clear_InterruptEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4956   .text._ZN4_I2C15Clear_InterruptEv:00000000 _ZN4_I2C15Clear_InterruptEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4992   .text._ZN4_I2CC2EPmhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4999   .text._ZN4_I2CC2EPmhh:00000000 _ZN4_I2CC2EPmhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:4999   .text._ZN4_I2CC2EPmhh:00000000 _ZN4_I2CC1EPmhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5053   .text._ZN3SSP4InitEhhhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5060   .text._ZN3SSP4InitEhhhh:00000000 _ZN3SSP4InitEhhhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5216   .text._ZN3SSP4InitEhhhh:000000f4 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5222   .text._ZN3SSP12New_SequenceEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5229   .text._ZN3SSP12New_SequenceEv:00000000 _ZN3SSP12New_SequenceEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5290   .text._ZN3SSP10Add_StringEPKc:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5297   .text._ZN3SSP10Add_StringEPKc:00000000 _ZN3SSP10Add_StringEPKc
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5354   .text._ZN3SSP15Add_BCD_IntegerEmh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5361   .text._ZN3SSP15Add_BCD_IntegerEmh:00000000 _ZN3SSP15Add_BCD_IntegerEmh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5394   .text._ZN3SSP15Add_BCD_IntegerEmh:00000028 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5398   .text._ZN3SSP15Add_BCD_IntegerEmh:00000038 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5493   .text._ZN3SSP15Add_BCD_IntegerEmh:000000ec $d
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 132


C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5498   .text._ZN3SSP13Add_BCD_FloatEmhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5505   .text._ZN3SSP13Add_BCD_FloatEmhh:00000000 _ZN3SSP13Add_BCD_FloatEmhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5542   .text._ZN3SSP13Add_BCD_FloatEmhh:00000034 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5546   .text._ZN3SSP13Add_BCD_FloatEmhh:00000044 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5689   .text._ZN3SSP13Add_BCD_FloatEmhh:00000158 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5694   .text._ZN3SSP8Add_ByteEt:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5701   .text._ZN3SSP8Add_ByteEt:00000000 _ZN3SSP8Add_ByteEt
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5745   .text._ZN3SSP14Send_Next_ByteEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5752   .text._ZN3SSP14Send_Next_ByteEv:00000000 _ZN3SSP14Send_Next_ByteEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5865   .text._ZN3SSP13Send_SequenceEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5872   .text._ZN3SSP13Send_SequenceEv:00000000 _ZN3SSP13Send_SequenceEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5948   .text._ZN3SSP10Enable_IntEh:00000000 _ZN3SSP10Enable_IntEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5903   .text._ZN3SSP12End_TransferEv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5910   .text._ZN3SSP12End_TransferEv:00000000 _ZN3SSP12End_TransferEv
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6003   .text._ZN3SSP11Disable_IntEh:00000000 _ZN3SSP11Disable_IntEh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5941   .text._ZN3SSP10Enable_IntEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:5996   .text._ZN3SSP11Disable_IntEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6050   .text._ZN3SSPC2EPmhh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6057   .text._ZN3SSPC2EPmhh:00000000 _ZN3SSPC2EPmhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6057   .text._ZN3SSPC2EPmhh:00000000 _ZN3SSPC1EPmhh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6119   .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6125   .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6248   .text._Z41__static_initialization_and_destruction_0ii:000000d0 $d
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6285   .text._GLOBAL__sub_I__Z9EnableIRQh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6291   .text._GLOBAL__sub_I__Z9EnableIRQh:00000000 _GLOBAL__sub_I__Z9EnableIRQh
C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s:6312   .init_array:00000000 $d
                           .group:00000000 wm4.0.0474d032b6805b4a3671280691a3da50
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.lpc_types.h.63.c4e7eaf7330236ae510314a23d74e6ca
                           .group:00000000 wm4.sys_config.h.31.f8c315d4b1b74f49c8745dcf1114f978
                           .group:00000000 wm4.cmsis_175x_6x.h.33.75b091e3b445a2d3d6fff2c163abfea4
                           .group:00000000 wm4.core_cm3.h.47.c45d264953076019d6b3b1c20e8ad771
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm3.h.144.13c1820b08b053ff2afcbecd6c121769
                           .group:00000000 wm4.chip_lpc175x_6x.h.33.eb00dd5e876bba2d92e5365aaa2adcc9
                           .group:00000000 wm4.sysctl_17xx_40xx.h.33.60ea2b0c038b570d16b743be456c0a3c
                           .group:00000000 wm4.clock_17xx_40xx.h.33.ac1c09ba10bd275fd518dc893f69b719
                           .group:00000000 wm4.iocon_17xx_40xx.h.33.30efb695138835ce45b969a383622df1
                           .group:00000000 wm4.adc_17xx_40xx.h.33.4ccfb2b64a214dfbd42dcc57b951adea
                           .group:00000000 wm4.can_17xx_40xx.h.33.998a7ac704f1a68b2cd5e0b56d8d5982
                           .group:00000000 wm4.dac_17xx_40xx.h.33.c6b24d203fe35c404313549726e8b471
                           .group:00000000 wm4.enet_17xx_40xx.h.33.7cbc246ead5985e9ded0581894620518
                           .group:00000000 wm4.gpdma_17xx_40xx.h.33.48ff5e223f8561d024da95b445b6412f
                           .group:00000000 wm4.gpio_17xx_40xx.h.33.ccf33f35e6ec854f4c17216560fb0e2d
                           .group:00000000 wm4.i2c_17xx_40xx.h.33.251f9e2630fa2e1c5f956a841fad976e
                           .group:00000000 wm4.i2s_17xx_40xx.h.33.c4dac649f14353e74f7ad13206e59212
                           .group:00000000 wm4.pmu_17xx_40xx.h.33.6df98f4a15b545c975b3d7e285b1914a
                           .group:00000000 wm4.ritimer_17xx_40xx.h.33.2353edabf0d761fc5545c38574ab0483
                           .group:00000000 wm4.rtc_17xx_40xx.h.33.1b92c4cdbb0e30811f9b658793f1692a
                           .group:00000000 wm4.spi_17xx_40xx.h.33.29890397a2d0d2f7c45c9629c75ce288
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccGZh1BC.s 			page 133


                           .group:00000000 wm4.ssp_17xx_40xx.h.33.2caafe5625dd4e0c436aadef2d04967e
                           .group:00000000 wm4.timer_17xx_40xx.h.33.cf1ff612c99670767f5f971c7f8e9fde
                           .group:00000000 wm4.ring_buffer.h.33.ffd8153954783612f9c626df1ed9e770
                           .group:00000000 wm4.uart_17xx_40xx.h.98.24bad698225619af11e644944c69bb64
                           .group:00000000 wm4.wwdt_17xx_40xx.h.33.c6b9b47b39d0af231ccdbbe61f2e586a
                           .group:00000000 wm4.fmc_17xx_40xx.h.33.50d936806f8521fe9e7b0b5d644ffe41
                           .group:00000000 wm4.iap.h.33.bfa6a5070920deda981787d64c9b1d6d
                           .group:00000000 wm4.error.h.38.139632325ccc020d697d2fcf83ee170f
                           .group:00000000 wm4.board.h.33.b3d60928436b978782af3158a25a7b77
                           .group:00000000 wm4.newlib.h.8.e0fd068ed40a600f7426443f865dd469
                           .group:00000000 wm4.ieeefp.h.77.49bcce8a603f3d93a95080d6a3573782
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.187.422da5f95ac1285e95faf42258f23242
                           .group:00000000 wm4.cdefs.h.47.ef8413a24f515b2210954be82adc67e2
                           .group:00000000 wm4.stddef.h.39.101367dade8a53b166775e1434b00616
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.184.7120b8bb2e0149e2359704f4e2251b68
                           .group:00000000 wm4.reent.h.17.87376802c2b370b32a762f0a30482d9e
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.f9d7979a479d57685780efa849031ac4
                           .group:00000000 wm4.board_api.h.166.63aa07b58758871d5b14e460a43bd11e
                           .group:00000000 wm4.lpc_phy.h.56.88cb0dd4e85f8d7768db24fbc73d4911
                           .group:00000000 wm4.cr_section_macros.h.33.9e7c9c82e85b060f15a6d1b56a42fef2
                           .group:00000000 wm4.lpc_xav.h.6.5aa75daa274402c8e369cf781056e607
                           .group:00000000 wm4.segdisplay.h.2.e458eb9a0fec9c303ee2f42ed8b55f18

UNDEFINED SYMBOLS
_Z12IntegerToBCDR5BCD_tt
Console_BCD
__aeabi_ui2f
__aeabi_fmul
__aeabi_f2uiz
__aeabi_fcmplt
__aeabi_fadd
__aeabi_fcmpgt
__aeabi_fsub
LCD_BCD
