ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"segdisplay.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata._ZL19PtrRI_TIMER_COMPVAL,"a",%progbits
  16              		.align	2
  19              	_ZL19PtrRI_TIMER_COMPVAL:
  20 0000 00000B40 		.word	1074462720
  21              		.section	.rodata._ZL16PtrRI_TIMER_MASK,"a",%progbits
  22              		.align	2
  25              	_ZL16PtrRI_TIMER_MASK:
  26 0000 04000B40 		.word	1074462724
  27              		.section	.rodata._ZL16PtrRI_TIMER_CTRL,"a",%progbits
  28              		.align	2
  31              	_ZL16PtrRI_TIMER_CTRL:
  32 0000 08000B40 		.word	1074462728
  33              		.section	.rodata._ZL17PtrRI_TIMER_COUNT,"a",%progbits
  34              		.align	2
  37              	_ZL17PtrRI_TIMER_COUNT:
  38 0000 0C000B40 		.word	1074462732
  39              		.section	.text._ZN3BusaSEh,"axG",%progbits,_ZN3BusaSEh,comdat
  40              		.align	1
  41              		.weak	_ZN3BusaSEh
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu softvfp
  47              	_ZN3BusaSEh:
  48              	.LFB317:
  49              		.file 1 "C:\\Users\\xavie\\Cegep\\Processeurs\\HeroOrZero\\inc/lpc_xav.h"
   1:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #include "chip.h"
   2:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #include "board.h"
   3:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #include "cr_section_macros.h"
   4:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
   5:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #ifndef LPC_XAV_H_
   6:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define LPC_XAV_H_
   7:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
   8:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define PCONP	 *((uint32_t *)0x400FC0C4)
   9:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define PCLKSEL0 *((uint32_t *)0x400FC1A8)
  10:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define PCLKSEL1 *((uint32_t *)0x400FC1AC)
  11:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  12:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define I2C_400KHZ	120
  13:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define I2C_100KHZ 	480
  14:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define I2C_50KHZ 	960
  15:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define SPI_24MHZ	4
  16:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define SPI_100KHZ  240
  17:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 2


  18:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** #define SYS_FREQ ((uint32_t)96000000)
  19:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  20:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {GPIO, Fct0x1, Fct0x2, Fct0x3}; 				// GPIO pin function
  21:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {IN, OUT};										// GPIO direction
  22:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Pullup, Repeater, Float, Pulldown, Default};	// GPIO input mode
  23:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Normal, Open_Drain}; 							// GPIO output mode
  24:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Level_Sensitive, Edge_Sensitive};				// EXT int mode
  25:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {UND2, Rising_Edge, Falling_Edge, Both_Edges};	// Timer capture setting
  26:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {CLK4, CLK0, CLK2, CLK8};						// Timer clock rate (number stands for divisor)
  27:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Nothing, Clear, Set, Toggle};					// External match setting
  28:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {MR0 = 0x1, MR1 = 0x2, MR2 = 0x4, MR3 = 0x8, CR0 = 0x10, CR1 = 0x20};// Timer interrupt flag b
  29:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Disabled, Odd, Even = 3};						// UART Parity control
  30:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Single_Edge, Double_Edge};					// Motor PWM mode
  31:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Manual, Auto};								// AD Converter mode for starting conversions
  32:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {Master = 0x40, Slave = 0x44};					// I2C Mode
  33:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** enum {RORIM, RTIM, RXIM, TXIM};						// SSP Interrupt sources
  34:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  35:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class LPC_IO;
  36:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  37:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** void EnableIRQ(uint8_t Int_bit); // Enables periph's NVIC interrupt
  38:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** void GPIO_Enable_Int(uint8_t PortNo, uint8_t PinNo, uint8_t Edge_Select);
  39:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** void Enable_EXT_Int(uint8_t ExtIntNo, uint8_t ExtMode);
  40:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
  41:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class Port{ // Port object to provide pointers for the Lpc_IO class
  42:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	friend LPC_IO;
  43:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _PINCB; 	// Address of the first PINSEL register for desired port
  44:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _FIO; 	// Address of the first FIO register
  45:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _OD;		// Address of the open drain mode register
  46:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetFct(uint8_t PinNo, uint8_t Fct);
  47:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetDir(uint8_t PinNo, uint8_t Dir);
  48:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetMode(uint8_t PinNo, uint8_t Mode);
  49:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void SetOpenDrain(uint8_t PinNo, uint8_t Mode );
  50:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  51:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
  52:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Port(uint32_t* Pinsel_Add, // Constructor for LPC Port handles
  53:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		 uint32_t* FastIO_Add,
  54:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		 uint32_t* OpenDrain_Add);
  55:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
  56:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
  57:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class LPC_IO{ // Pin object to initialize all the register required for a pin functioning
  58:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Port& _Port;
  59:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Pin;
  60:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Function;
  61:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Direction;
  62:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Mode;
  63:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t OD_Mode;
  64:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  65:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
  66:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Out(bool State);
  67:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set();
  68:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Clear();
  69:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  70:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	LPC_IO();
  71:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	LPC_IO(	Port& PtrPort, // Constructor for IO pin handles.
  72:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t PinNo,
  73:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Fct,
  74:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Dir = OUT,
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 3


  75:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Md = Float,
  76:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t OD = Normal);
  77:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
  78:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void operator=(bool OutputState) // Allows to use Object = boolean value; to set pin output
  79:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
  80:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		this->Out(OutputState);
  81:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
  82:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool operator==(bool BooleanValue)
  83:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
  84:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		if(BooleanValue == ((*(_Port._FIO + 5) >> this->Pin) & 0x1)){
  85:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return true;
  86:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  87:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		else{
  88:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return false;
  89:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  90:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
  91:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool operator!=(bool BooleanValue)
  92:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
  93:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		if(BooleanValue == ((*(_Port._FIO + 5) >> this->Pin) & 0x1)){
  94:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return false;
  95:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  96:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		else{
  97:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			return true;
  98:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		}
  99:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
 100:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 101:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 102:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class Bus{ // Bus object can be declared to group Lpc_IO handles together and use it as one 8-bit r
 103:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	LPC_IO * Bits[8];
 104:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Value;
 105:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 106:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 107:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Change_Value(uint8_t bus_value);
 108:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 109:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Bus(LPC_IO* LSB=nullptr, LPC_IO* B1=nullptr,
 110:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		LPC_IO* B2=nullptr, LPC_IO* B3=nullptr,
 111:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		LPC_IO* B4=nullptr, LPC_IO* B5=nullptr,
 112:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		LPC_IO* B6=nullptr, LPC_IO* MSB=nullptr);
 113:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 114:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void operator=(uint8_t bus_value)
  50              		.loc 1 114 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 8
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 7, -8
  57              		.cfi_offset 14, -4
  58 0002 82B0     		sub	sp, sp, #8
  59              		.cfi_def_cfa_offset 16
  60 0004 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  62 0006 7860     		str	r0, [r7, #4]
  63 0008 0B46     		mov	r3, r1
  64 000a FB70     		strb	r3, [r7, #3]
 115:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
 116:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		Change_Value(bus_value);
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 4


  65              		.loc 1 116 0
  66 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  67 000e 1946     		mov	r1, r3
  68 0010 7868     		ldr	r0, [r7, #4]
  69 0012 FFF7FEFF 		bl	_ZN3Bus12Change_ValueEh
 117:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
  70              		.loc 1 117 0
  71 0016 00BF     		nop
  72 0018 0837     		adds	r7, r7, #8
  73              		.cfi_def_cfa_offset 8
  74 001a BD46     		mov	sp, r7
  75              		.cfi_def_cfa_register 13
  76              		@ sp needed
  77 001c 80BD     		pop	{r7, pc}
  78              		.cfi_endproc
  79              	.LFE317:
  81              		.section	.text._ZN3BuspLEh,"axG",%progbits,_ZN3BuspLEh,comdat
  82              		.align	1
  83              		.weak	_ZN3BuspLEh
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	_ZN3BuspLEh:
  90              	.LFB318:
 118:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void operator+=(uint8_t increment_value)
  91              		.loc 1 118 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 8
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 0000 80B5     		push	{r7, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 82B0     		sub	sp, sp, #8
 100              		.cfi_def_cfa_offset 16
 101 0004 00AF     		add	r7, sp, #0
 102              		.cfi_def_cfa_register 7
 103 0006 7860     		str	r0, [r7, #4]
 104 0008 0B46     		mov	r3, r1
 105 000a FB70     		strb	r3, [r7, #3]
 119:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	{
 120:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 		Change_Value(Value + increment_value);
 106              		.loc 1 120 0
 107 000c 7B68     		ldr	r3, [r7, #4]
 108 000e 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 109 0012 FB78     		ldrb	r3, [r7, #3]
 110 0014 1344     		add	r3, r3, r2
 111 0016 DBB2     		uxtb	r3, r3
 112 0018 1946     		mov	r1, r3
 113 001a 7868     		ldr	r0, [r7, #4]
 114 001c FFF7FEFF 		bl	_ZN3Bus12Change_ValueEh
 121:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	}
 115              		.loc 1 121 0
 116 0020 00BF     		nop
 117 0022 0837     		adds	r7, r7, #8
 118              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 5


 119 0024 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0026 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE318:
 126              		.section	.bss._ZL2P0,"aw",%nobits
 127              		.align	2
 130              	_ZL2P0:
 131 0000 00000000 		.space	12
 131      00000000 
 131      00000000 
 132              		.section	.bss._ZL2P1,"aw",%nobits
 133              		.align	2
 136              	_ZL2P1:
 137 0000 00000000 		.space	12
 137      00000000 
 137      00000000 
 138              		.section	.bss._ZL2P2,"aw",%nobits
 139              		.align	2
 142              	_ZL2P2:
 143 0000 00000000 		.space	12
 143      00000000 
 143      00000000 
 144              		.section	.bss._ZL2P3,"aw",%nobits
 145              		.align	2
 148              	_ZL2P3:
 149 0000 00000000 		.space	12
 149      00000000 
 149      00000000 
 150              		.section	.bss._ZL2P4,"aw",%nobits
 151              		.align	2
 154              	_ZL2P4:
 155 0000 00000000 		.space	12
 155      00000000 
 155      00000000 
 156              		.section	.bss._ZL4TMR0,"aw",%nobits
 157              		.align	2
 160              	_ZL4TMR0:
 161 0000 00000000 		.space	12
 161      00000000 
 161      00000000 
 162              		.section	.bss._ZL4TMR1,"aw",%nobits
 163              		.align	2
 166              	_ZL4TMR1:
 167 0000 00000000 		.space	12
 167      00000000 
 167      00000000 
 168              		.section	.bss._ZL4TMR2,"aw",%nobits
 169              		.align	2
 172              	_ZL4TMR2:
 173 0000 00000000 		.space	12
 173      00000000 
 173      00000000 
 174              		.section	.bss._ZL4TMR3,"aw",%nobits
 175              		.align	2
 178              	_ZL4TMR3:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 6


 179 0000 00000000 		.space	12
 179      00000000 
 179      00000000 
 180              		.section	.bss._ZL5UART0,"aw",%nobits
 181              		.align	2
 184              	_ZL5UART0:
 185 0000 00000000 		.space	8
 185      00000000 
 186              		.section	.bss._ZL8Keyboard,"aw",%nobits
 187              		.align	2
 190              	_ZL8Keyboard:
 191 0000 00000000 		.space	8
 191      00000000 
 192              		.section	.bss._ZL7Console,"aw",%nobits
 193              		.align	2
 196              	_ZL7Console:
 197 0000 00000000 		.space	8
 197      00000000 
 198              		.section	.text._Z12IntegerToBCDR5BCD_tt,"ax",%progbits
 199              		.align	1
 200              		.global	_Z12IntegerToBCDR5BCD_tt
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu softvfp
 206              	_Z12IntegerToBCDR5BCD_tt:
 207              	.LFB319:
 208              		.file 2 "../src/segdisplay.cpp"
   1:../src/segdisplay.cpp **** #include <segdisplay.h>
   2:../src/segdisplay.cpp **** #include <stdint.h>
   3:../src/segdisplay.cpp **** #include "lpc_xav.h"
   4:../src/segdisplay.cpp **** 
   5:../src/segdisplay.cpp **** extern Bus DisplayDataBus;
   6:../src/segdisplay.cpp **** extern Bus DisplaySelectBus;
   7:../src/segdisplay.cpp **** 
   8:../src/segdisplay.cpp **** extern BCD_t Seg_BCD;
   9:../src/segdisplay.cpp **** 
  10:../src/segdisplay.cpp **** void IntegerToBCD(BCD_t& BCD_Container, uint16_t Decimal_uint)
  11:../src/segdisplay.cpp **** {
 209              		.loc 2 11 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 16
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 85B0     		sub	sp, sp, #20
 218              		.cfi_def_cfa_offset 24
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 221 0006 7860     		str	r0, [r7, #4]
 222 0008 0B46     		mov	r3, r1
 223 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  12:../src/segdisplay.cpp ****     BCD_Container.DDabble_Container = (0x0000FFFF & Decimal_uint); // Clear the BCD struct
 224              		.loc 2 12 0
 225 000c 7A88     		ldrh	r2, [r7, #2]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 7


 226 000e 7B68     		ldr	r3, [r7, #4]
 227 0010 1A60     		str	r2, [r3]
 228              	.LBB2:
  13:../src/segdisplay.cpp **** 
  14:../src/segdisplay.cpp ****     // Converts 16-bit int to BCD in separate variables
  15:../src/segdisplay.cpp ****     for(char i = 0; i < 16; i++){
 229              		.loc 2 15 0
 230 0012 0023     		movs	r3, #0
 231 0014 FB73     		strb	r3, [r7, #15]
 232              	.L9:
 233              		.loc 2 15 0 is_stmt 0 discriminator 1
 234 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 235 0018 0F2B     		cmp	r3, #15
 236 001a 60D8     		bhi	.L10
  16:../src/segdisplay.cpp ****         if(BCD_Container.uni > 4)
 237              		.loc 2 16 0 is_stmt 1
 238 001c 7B68     		ldr	r3, [r7, #4]
 239 001e 9B78     		ldrb	r3, [r3, #2]
 240 0020 C3F30303 		ubfx	r3, r3, #0, #4
 241 0024 DBB2     		uxtb	r3, r3
 242 0026 042B     		cmp	r3, #4
 243 0028 0ED9     		bls	.L5
  17:../src/segdisplay.cpp ****             BCD_Container.uni += 3;
 244              		.loc 2 17 0
 245 002a 7B68     		ldr	r3, [r7, #4]
 246 002c 9B78     		ldrb	r3, [r3, #2]
 247 002e C3F30303 		ubfx	r3, r3, #0, #4
 248 0032 DBB2     		uxtb	r3, r3
 249 0034 0333     		adds	r3, r3, #3
 250 0036 DBB2     		uxtb	r3, r3
 251 0038 03F00F03 		and	r3, r3, #15
 252 003c D9B2     		uxtb	r1, r3
 253 003e 7A68     		ldr	r2, [r7, #4]
 254 0040 9378     		ldrb	r3, [r2, #2]
 255 0042 61F30303 		bfi	r3, r1, #0, #4
 256 0046 9370     		strb	r3, [r2, #2]
 257              	.L5:
  18:../src/segdisplay.cpp ****         if(BCD_Container.diz > 4)
 258              		.loc 2 18 0
 259 0048 7B68     		ldr	r3, [r7, #4]
 260 004a 9B78     		ldrb	r3, [r3, #2]
 261 004c C3F30313 		ubfx	r3, r3, #4, #4
 262 0050 DBB2     		uxtb	r3, r3
 263 0052 042B     		cmp	r3, #4
 264 0054 0ED9     		bls	.L6
  19:../src/segdisplay.cpp ****             BCD_Container.diz += 3;
 265              		.loc 2 19 0
 266 0056 7B68     		ldr	r3, [r7, #4]
 267 0058 9B78     		ldrb	r3, [r3, #2]
 268 005a C3F30313 		ubfx	r3, r3, #4, #4
 269 005e DBB2     		uxtb	r3, r3
 270 0060 0333     		adds	r3, r3, #3
 271 0062 DBB2     		uxtb	r3, r3
 272 0064 03F00F03 		and	r3, r3, #15
 273 0068 D9B2     		uxtb	r1, r3
 274 006a 7A68     		ldr	r2, [r7, #4]
 275 006c 9378     		ldrb	r3, [r2, #2]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 8


 276 006e 61F30713 		bfi	r3, r1, #4, #4
 277 0072 9370     		strb	r3, [r2, #2]
 278              	.L6:
  20:../src/segdisplay.cpp ****         if(BCD_Container.cen > 4)
 279              		.loc 2 20 0
 280 0074 7B68     		ldr	r3, [r7, #4]
 281 0076 DB78     		ldrb	r3, [r3, #3]
 282 0078 C3F30303 		ubfx	r3, r3, #0, #4
 283 007c DBB2     		uxtb	r3, r3
 284 007e 042B     		cmp	r3, #4
 285 0080 0ED9     		bls	.L7
  21:../src/segdisplay.cpp ****             BCD_Container.cen += 3;
 286              		.loc 2 21 0
 287 0082 7B68     		ldr	r3, [r7, #4]
 288 0084 DB78     		ldrb	r3, [r3, #3]
 289 0086 C3F30303 		ubfx	r3, r3, #0, #4
 290 008a DBB2     		uxtb	r3, r3
 291 008c 0333     		adds	r3, r3, #3
 292 008e DBB2     		uxtb	r3, r3
 293 0090 03F00F03 		and	r3, r3, #15
 294 0094 D9B2     		uxtb	r1, r3
 295 0096 7A68     		ldr	r2, [r7, #4]
 296 0098 D378     		ldrb	r3, [r2, #3]
 297 009a 61F30303 		bfi	r3, r1, #0, #4
 298 009e D370     		strb	r3, [r2, #3]
 299              	.L7:
  22:../src/segdisplay.cpp ****         if(BCD_Container.mil > 4)
 300              		.loc 2 22 0
 301 00a0 7B68     		ldr	r3, [r7, #4]
 302 00a2 DB78     		ldrb	r3, [r3, #3]
 303 00a4 C3F30313 		ubfx	r3, r3, #4, #4
 304 00a8 DBB2     		uxtb	r3, r3
 305 00aa 042B     		cmp	r3, #4
 306 00ac 0ED9     		bls	.L8
  23:../src/segdisplay.cpp ****             BCD_Container.mil += 3;
 307              		.loc 2 23 0
 308 00ae 7B68     		ldr	r3, [r7, #4]
 309 00b0 DB78     		ldrb	r3, [r3, #3]
 310 00b2 C3F30313 		ubfx	r3, r3, #4, #4
 311 00b6 DBB2     		uxtb	r3, r3
 312 00b8 0333     		adds	r3, r3, #3
 313 00ba DBB2     		uxtb	r3, r3
 314 00bc 03F00F03 		and	r3, r3, #15
 315 00c0 D9B2     		uxtb	r1, r3
 316 00c2 7A68     		ldr	r2, [r7, #4]
 317 00c4 D378     		ldrb	r3, [r2, #3]
 318 00c6 61F30713 		bfi	r3, r1, #4, #4
 319 00ca D370     		strb	r3, [r2, #3]
 320              	.L8:
  24:../src/segdisplay.cpp ****         BCD_Container.DDabble_Container <<= 1;
 321              		.loc 2 24 0 discriminator 2
 322 00cc 7B68     		ldr	r3, [r7, #4]
 323 00ce 1B68     		ldr	r3, [r3]
 324 00d0 5A00     		lsls	r2, r3, #1
 325 00d2 7B68     		ldr	r3, [r7, #4]
 326 00d4 1A60     		str	r2, [r3]
  15:../src/segdisplay.cpp ****         if(BCD_Container.uni > 4)
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 9


 327              		.loc 2 15 0 discriminator 2
 328 00d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 329 00d8 0133     		adds	r3, r3, #1
 330 00da FB73     		strb	r3, [r7, #15]
 331 00dc 9BE7     		b	.L9
 332              	.L10:
 333              	.LBE2:
  25:../src/segdisplay.cpp ****     }
  26:../src/segdisplay.cpp **** }
 334              		.loc 2 26 0
 335 00de 00BF     		nop
 336 00e0 1437     		adds	r7, r7, #20
 337              		.cfi_def_cfa_offset 4
 338 00e2 BD46     		mov	sp, r7
 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 00e4 80BC     		pop	{r7}
 342              		.cfi_restore 7
 343              		.cfi_def_cfa_offset 0
 344 00e6 7047     		bx	lr
 345              		.cfi_endproc
 346              	.LFE319:
 348              		.section	.text._Z10PrintDigitc,"ax",%progbits
 349              		.align	1
 350              		.global	_Z10PrintDigitc
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu softvfp
 356              	_Z10PrintDigitc:
 357              	.LFB320:
  27:../src/segdisplay.cpp **** 
  28:../src/segdisplay.cpp **** void PrintDigit(char AsciiNumber)
  29:../src/segdisplay.cpp **** {
 358              		.loc 2 29 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362 0000 80B5     		push	{r7, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 82B0     		sub	sp, sp, #8
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 0346     		mov	r3, r0
 371 0008 FB71     		strb	r3, [r7, #7]
  30:../src/segdisplay.cpp **** 	if(AsciiNumber <= 9)
 372              		.loc 2 30 0
 373 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 374 000c 092B     		cmp	r3, #9
 375 000e 05D8     		bhi	.L12
  31:../src/segdisplay.cpp **** 		DisplayDataBus = AsciiNumber;
 376              		.loc 2 31 0
 377 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 378 0012 1946     		mov	r1, r3
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 10


 379 0014 1648     		ldr	r0, .L19
 380 0016 FFF7FEFF 		bl	_ZN3BusaSEh
  32:../src/segdisplay.cpp **** 	else if(AsciiNumber <= 57)
  33:../src/segdisplay.cpp **** 		DisplayDataBus = AsciiNumber - 48;
  34:../src/segdisplay.cpp **** 	else if(AsciiNumber >= 65)
  35:../src/segdisplay.cpp **** 		DisplayDataBus = AsciiNumber - 55;
  36:../src/segdisplay.cpp **** 	else
  37:../src/segdisplay.cpp **** 		switch(AsciiNumber)
  38:../src/segdisplay.cpp **** 		{
  39:../src/segdisplay.cpp **** 		case '=':
  40:../src/segdisplay.cpp **** 			DisplayDataBus = 43;
  41:../src/segdisplay.cpp **** 			break;
  42:../src/segdisplay.cpp **** 		case ' ':
  43:../src/segdisplay.cpp **** 			DisplayDataBus = 48;
  44:../src/segdisplay.cpp **** 			break;
  45:../src/segdisplay.cpp **** 		}
  46:../src/segdisplay.cpp **** }
 381              		.loc 2 46 0
 382 001a 25E0     		b	.L18
 383              	.L12:
  32:../src/segdisplay.cpp **** 	else if(AsciiNumber <= 57)
 384              		.loc 2 32 0
 385 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 386 001e 392B     		cmp	r3, #57
 387 0020 07D8     		bhi	.L14
  33:../src/segdisplay.cpp **** 	else if(AsciiNumber >= 65)
 388              		.loc 2 33 0
 389 0022 FB79     		ldrb	r3, [r7, #7]
 390 0024 303B     		subs	r3, r3, #48
 391 0026 DBB2     		uxtb	r3, r3
 392 0028 1946     		mov	r1, r3
 393 002a 1148     		ldr	r0, .L19
 394 002c FFF7FEFF 		bl	_ZN3BusaSEh
 395              		.loc 2 46 0
 396 0030 1AE0     		b	.L18
 397              	.L14:
  34:../src/segdisplay.cpp **** 		DisplayDataBus = AsciiNumber - 55;
 398              		.loc 2 34 0
 399 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 400 0034 402B     		cmp	r3, #64
 401 0036 07D9     		bls	.L15
  35:../src/segdisplay.cpp **** 	else
 402              		.loc 2 35 0
 403 0038 FB79     		ldrb	r3, [r7, #7]
 404 003a 373B     		subs	r3, r3, #55
 405 003c DBB2     		uxtb	r3, r3
 406 003e 1946     		mov	r1, r3
 407 0040 0B48     		ldr	r0, .L19
 408 0042 FFF7FEFF 		bl	_ZN3BusaSEh
 409              		.loc 2 46 0
 410 0046 0FE0     		b	.L18
 411              	.L15:
  37:../src/segdisplay.cpp **** 		{
 412              		.loc 2 37 0
 413 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 414 004a 202B     		cmp	r3, #32
 415 004c 07D0     		beq	.L16
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 11


 416 004e 3D2B     		cmp	r3, #61
 417 0050 00D0     		beq	.L17
 418              		.loc 2 46 0
 419 0052 09E0     		b	.L18
 420              	.L17:
  40:../src/segdisplay.cpp **** 			break;
 421              		.loc 2 40 0
 422 0054 2B21     		movs	r1, #43
 423 0056 0648     		ldr	r0, .L19
 424 0058 FFF7FEFF 		bl	_ZN3BusaSEh
  41:../src/segdisplay.cpp **** 		case ' ':
 425              		.loc 2 41 0
 426 005c 04E0     		b	.L13
 427              	.L16:
  43:../src/segdisplay.cpp **** 			break;
 428              		.loc 2 43 0
 429 005e 3021     		movs	r1, #48
 430 0060 0348     		ldr	r0, .L19
 431 0062 FFF7FEFF 		bl	_ZN3BusaSEh
  44:../src/segdisplay.cpp **** 		}
 432              		.loc 2 44 0
 433 0066 00BF     		nop
 434              	.L13:
 435              	.L18:
 436              		.loc 2 46 0
 437 0068 00BF     		nop
 438 006a 0837     		adds	r7, r7, #8
 439              		.cfi_def_cfa_offset 8
 440 006c BD46     		mov	sp, r7
 441              		.cfi_def_cfa_register 13
 442              		@ sp needed
 443 006e 80BD     		pop	{r7, pc}
 444              	.L20:
 445              		.align	2
 446              	.L19:
 447 0070 00000000 		.word	DisplayDataBus
 448              		.cfi_endproc
 449              	.LFE320:
 451              		.section	.text._Z13WriteStrConstPKc,"ax",%progbits
 452              		.align	1
 453              		.global	_Z13WriteStrConstPKc
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu softvfp
 459              	_Z13WriteStrConstPKc:
 460              	.LFB321:
  47:../src/segdisplay.cpp **** 
  48:../src/segdisplay.cpp **** void WriteStrConst(const char *StrToSend) // Obsolete with RIT seg-by-seg mode
  49:../src/segdisplay.cpp **** {
 461              		.loc 2 49 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 16
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 80B5     		push	{r7, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 12


 468              		.cfi_offset 14, -4
 469 0002 84B0     		sub	sp, sp, #16
 470              		.cfi_def_cfa_offset 24
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 7860     		str	r0, [r7, #4]
 474              	.L25:
 475              	.LBB3:
  50:../src/segdisplay.cpp ****     for(; *StrToSend; StrToSend++){
 476              		.loc 2 50 0 discriminator 1
 477 0008 7B68     		ldr	r3, [r7, #4]
 478 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 000c 002B     		cmp	r3, #0
 480 000e 1AD0     		beq	.L26
 481              	.LBB4:
  51:../src/segdisplay.cpp ****         PrintDigit(*StrToSend);
 482              		.loc 2 51 0
 483 0010 7B68     		ldr	r3, [r7, #4]
 484 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0014 1846     		mov	r0, r3
 486 0016 FFF7FEFF 		bl	_Z10PrintDigitc
 487              	.LBB5:
  52:../src/segdisplay.cpp ****         for(uint32_t i = 0; i< 5000; i++);
 488              		.loc 2 52 0
 489 001a 0023     		movs	r3, #0
 490 001c FB60     		str	r3, [r7, #12]
 491              	.L24:
 492              		.loc 2 52 0 is_stmt 0 discriminator 3
 493 001e FB68     		ldr	r3, [r7, #12]
 494 0020 41F28732 		movw	r2, #4999
 495 0024 9342     		cmp	r3, r2
 496 0026 03D8     		bhi	.L23
 497              		.loc 2 52 0 discriminator 2
 498 0028 FB68     		ldr	r3, [r7, #12]
 499 002a 0133     		adds	r3, r3, #1
 500 002c FB60     		str	r3, [r7, #12]
 501 002e F6E7     		b	.L24
 502              	.L23:
 503              	.LBE5:
  53:../src/segdisplay.cpp ****         PrintDigit(' '); // Sends a dead segment (space) to prevent shadows of precedent digit
 504              		.loc 2 53 0 is_stmt 1
 505 0030 2020     		movs	r0, #32
 506 0032 FFF7FEFF 		bl	_Z10PrintDigitc
  54:../src/segdisplay.cpp ****         DisplaySelectBus += 1;
 507              		.loc 2 54 0
 508 0036 0121     		movs	r1, #1
 509 0038 0548     		ldr	r0, .L27
 510 003a FFF7FEFF 		bl	_ZN3BuspLEh
 511              	.LBE4:
  50:../src/segdisplay.cpp ****         PrintDigit(*StrToSend);
 512              		.loc 2 50 0
 513 003e 7B68     		ldr	r3, [r7, #4]
 514 0040 0133     		adds	r3, r3, #1
 515 0042 7B60     		str	r3, [r7, #4]
 516 0044 E0E7     		b	.L25
 517              	.L26:
 518              	.LBE3:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 13


  55:../src/segdisplay.cpp ****     }
  56:../src/segdisplay.cpp **** }
 519              		.loc 2 56 0
 520 0046 00BF     		nop
 521 0048 1037     		adds	r7, r7, #16
 522              		.cfi_def_cfa_offset 8
 523 004a BD46     		mov	sp, r7
 524              		.cfi_def_cfa_register 13
 525              		@ sp needed
 526 004c 80BD     		pop	{r7, pc}
 527              	.L28:
 528 004e 00BF     		.align	2
 529              	.L27:
 530 0050 00000000 		.word	DisplaySelectBus
 531              		.cfi_endproc
 532              	.LFE321:
 534              		.section	.text._Z8PrintDecj,"ax",%progbits
 535              		.align	1
 536              		.global	_Z8PrintDecj
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu softvfp
 542              	_Z8PrintDecj:
 543              	.LFB322:
  57:../src/segdisplay.cpp **** 
  58:../src/segdisplay.cpp **** void PrintDec(unsigned int NbrDec) // Obsolete with RIT seg-by-seg mode
  59:../src/segdisplay.cpp **** {
 544              		.loc 2 59 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 24
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 86B0     		sub	sp, sp, #24
 553              		.cfi_def_cfa_offset 32
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 556 0006 7860     		str	r0, [r7, #4]
  60:../src/segdisplay.cpp ****     IntegerToBCD(Seg_BCD, NbrDec);
 557              		.loc 2 60 0
 558 0008 7B68     		ldr	r3, [r7, #4]
 559 000a 9BB2     		uxth	r3, r3
 560 000c 1946     		mov	r1, r3
 561 000e 3348     		ldr	r0, .L39
 562 0010 FFF7FEFF 		bl	_Z12IntegerToBCDR5BCD_tt
  61:../src/segdisplay.cpp **** 
  62:../src/segdisplay.cpp ****     DisplaySelectBus = 0;
 563              		.loc 2 62 0
 564 0014 0021     		movs	r1, #0
 565 0016 3248     		ldr	r0, .L39+4
 566 0018 FFF7FEFF 		bl	_ZN3BusaSEh
  63:../src/segdisplay.cpp **** 
  64:../src/segdisplay.cpp ****     DisplayDataBus = (Seg_BCD.mil);
 567              		.loc 2 64 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 14


 568 001c 2F4B     		ldr	r3, .L39
 569 001e DB78     		ldrb	r3, [r3, #3]
 570 0020 C3F30313 		ubfx	r3, r3, #4, #4
 571 0024 DBB2     		uxtb	r3, r3
 572 0026 1946     		mov	r1, r3
 573 0028 2E48     		ldr	r0, .L39+8
 574 002a FFF7FEFF 		bl	_ZN3BusaSEh
 575              	.LBB6:
  65:../src/segdisplay.cpp ****     for(uint32_t i = 0; i< 5000; i++);
 576              		.loc 2 65 0
 577 002e 0023     		movs	r3, #0
 578 0030 7B61     		str	r3, [r7, #20]
 579              	.L31:
 580              		.loc 2 65 0 is_stmt 0 discriminator 3
 581 0032 7B69     		ldr	r3, [r7, #20]
 582 0034 41F28732 		movw	r2, #4999
 583 0038 9342     		cmp	r3, r2
 584 003a 03D8     		bhi	.L30
 585              		.loc 2 65 0 discriminator 2
 586 003c 7B69     		ldr	r3, [r7, #20]
 587 003e 0133     		adds	r3, r3, #1
 588 0040 7B61     		str	r3, [r7, #20]
 589 0042 F6E7     		b	.L31
 590              	.L30:
 591              	.LBE6:
  66:../src/segdisplay.cpp ****     DisplaySelectBus += 1;
 592              		.loc 2 66 0 is_stmt 1
 593 0044 0121     		movs	r1, #1
 594 0046 2648     		ldr	r0, .L39+4
 595 0048 FFF7FEFF 		bl	_ZN3BuspLEh
  67:../src/segdisplay.cpp **** 
  68:../src/segdisplay.cpp ****     DisplayDataBus = (Seg_BCD.cen);
 596              		.loc 2 68 0
 597 004c 234B     		ldr	r3, .L39
 598 004e DB78     		ldrb	r3, [r3, #3]
 599 0050 C3F30303 		ubfx	r3, r3, #0, #4
 600 0054 DBB2     		uxtb	r3, r3
 601 0056 1946     		mov	r1, r3
 602 0058 2248     		ldr	r0, .L39+8
 603 005a FFF7FEFF 		bl	_ZN3BusaSEh
 604              	.LBB7:
  69:../src/segdisplay.cpp ****     for(uint32_t i = 0; i< 5000; i++);
 605              		.loc 2 69 0
 606 005e 0023     		movs	r3, #0
 607 0060 3B61     		str	r3, [r7, #16]
 608              	.L33:
 609              		.loc 2 69 0 is_stmt 0 discriminator 3
 610 0062 3B69     		ldr	r3, [r7, #16]
 611 0064 41F28732 		movw	r2, #4999
 612 0068 9342     		cmp	r3, r2
 613 006a 03D8     		bhi	.L32
 614              		.loc 2 69 0 discriminator 2
 615 006c 3B69     		ldr	r3, [r7, #16]
 616 006e 0133     		adds	r3, r3, #1
 617 0070 3B61     		str	r3, [r7, #16]
 618 0072 F6E7     		b	.L33
 619              	.L32:
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 15


 620              	.LBE7:
  70:../src/segdisplay.cpp ****     DisplaySelectBus += 1;
 621              		.loc 2 70 0 is_stmt 1
 622 0074 0121     		movs	r1, #1
 623 0076 1A48     		ldr	r0, .L39+4
 624 0078 FFF7FEFF 		bl	_ZN3BuspLEh
  71:../src/segdisplay.cpp **** 
  72:../src/segdisplay.cpp ****     DisplayDataBus = (Seg_BCD.diz);
 625              		.loc 2 72 0
 626 007c 174B     		ldr	r3, .L39
 627 007e 9B78     		ldrb	r3, [r3, #2]
 628 0080 C3F30313 		ubfx	r3, r3, #4, #4
 629 0084 DBB2     		uxtb	r3, r3
 630 0086 1946     		mov	r1, r3
 631 0088 1648     		ldr	r0, .L39+8
 632 008a FFF7FEFF 		bl	_ZN3BusaSEh
 633              	.LBB8:
  73:../src/segdisplay.cpp ****     for(uint32_t i = 0; i< 5000; i++);
 634              		.loc 2 73 0
 635 008e 0023     		movs	r3, #0
 636 0090 FB60     		str	r3, [r7, #12]
 637              	.L35:
 638              		.loc 2 73 0 is_stmt 0 discriminator 3
 639 0092 FB68     		ldr	r3, [r7, #12]
 640 0094 41F28732 		movw	r2, #4999
 641 0098 9342     		cmp	r3, r2
 642 009a 03D8     		bhi	.L34
 643              		.loc 2 73 0 discriminator 2
 644 009c FB68     		ldr	r3, [r7, #12]
 645 009e 0133     		adds	r3, r3, #1
 646 00a0 FB60     		str	r3, [r7, #12]
 647 00a2 F6E7     		b	.L35
 648              	.L34:
 649              	.LBE8:
  74:../src/segdisplay.cpp ****     DisplaySelectBus += 1;
 650              		.loc 2 74 0 is_stmt 1
 651 00a4 0121     		movs	r1, #1
 652 00a6 0E48     		ldr	r0, .L39+4
 653 00a8 FFF7FEFF 		bl	_ZN3BuspLEh
  75:../src/segdisplay.cpp **** 
  76:../src/segdisplay.cpp ****     DisplayDataBus = (Seg_BCD.uni);
 654              		.loc 2 76 0
 655 00ac 0B4B     		ldr	r3, .L39
 656 00ae 9B78     		ldrb	r3, [r3, #2]
 657 00b0 C3F30303 		ubfx	r3, r3, #0, #4
 658 00b4 DBB2     		uxtb	r3, r3
 659 00b6 1946     		mov	r1, r3
 660 00b8 0A48     		ldr	r0, .L39+8
 661 00ba FFF7FEFF 		bl	_ZN3BusaSEh
 662              	.LBB9:
  77:../src/segdisplay.cpp ****     for(uint32_t i = 0; i< 5000; i++);
 663              		.loc 2 77 0
 664 00be 0023     		movs	r3, #0
 665 00c0 BB60     		str	r3, [r7, #8]
 666              	.L37:
 667              		.loc 2 77 0 is_stmt 0 discriminator 3
 668 00c2 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 16


 669 00c4 41F28732 		movw	r2, #4999
 670 00c8 9342     		cmp	r3, r2
 671 00ca 03D8     		bhi	.L38
 672              		.loc 2 77 0 discriminator 2
 673 00cc BB68     		ldr	r3, [r7, #8]
 674 00ce 0133     		adds	r3, r3, #1
 675 00d0 BB60     		str	r3, [r7, #8]
 676 00d2 F6E7     		b	.L37
 677              	.L38:
 678              	.LBE9:
  78:../src/segdisplay.cpp **** }
 679              		.loc 2 78 0 is_stmt 1
 680 00d4 00BF     		nop
 681 00d6 1837     		adds	r7, r7, #24
 682              		.cfi_def_cfa_offset 8
 683 00d8 BD46     		mov	sp, r7
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 00da 80BD     		pop	{r7, pc}
 687              	.L40:
 688              		.align	2
 689              	.L39:
 690 00dc 00000000 		.word	Seg_BCD
 691 00e0 00000000 		.word	DisplaySelectBus
 692 00e4 00000000 		.word	DisplayDataBus
 693              		.cfi_endproc
 694              	.LFE322:
 696              		.section	.text._Z8RIT_Initv,"ax",%progbits
 697              		.align	1
 698              		.global	_Z8RIT_Initv
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu softvfp
 704              	_Z8RIT_Initv:
 705              	.LFB323:
  79:../src/segdisplay.cpp **** 
  80:../src/segdisplay.cpp **** void RIT_Init() // Initialize RIT peripheral
  81:../src/segdisplay.cpp **** {
 706              		.loc 2 81 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
  82:../src/segdisplay.cpp **** 	*(uint32_t *)0x400FC0C4 |= (1 << 16);
 716              		.loc 2 82 0
 717 0004 0A4B     		ldr	r3, .L42
 718 0006 1B68     		ldr	r3, [r3]
 719 0008 094A     		ldr	r2, .L42
 720 000a 43F48033 		orr	r3, r3, #65536
 721 000e 1360     		str	r3, [r2]
  83:../src/segdisplay.cpp **** 	RI_TIMER_COMPVAL = 50000;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 17


 722              		.loc 2 83 0
 723 0010 084B     		ldr	r3, .L42+4
 724 0012 4CF25032 		movw	r2, #50000
 725 0016 1A60     		str	r2, [r3]
  84:../src/segdisplay.cpp **** 	RI_TIMER_COUNT = 0;
 726              		.loc 2 84 0
 727 0018 074B     		ldr	r3, .L42+8
 728 001a 0022     		movs	r2, #0
 729 001c 1A60     		str	r2, [r3]
  85:../src/segdisplay.cpp **** 	RI_TIMER_CTRL = 0x0E;
 730              		.loc 2 85 0
 731 001e 074B     		ldr	r3, .L42+12
 732 0020 0E22     		movs	r2, #14
 733 0022 1A60     		str	r2, [r3]
  86:../src/segdisplay.cpp **** 	EnableIRQ(29);
 734              		.loc 2 86 0
 735 0024 1D20     		movs	r0, #29
 736 0026 FFF7FEFF 		bl	_Z9EnableIRQh
  87:../src/segdisplay.cpp **** }
 737              		.loc 2 87 0
 738 002a 00BF     		nop
 739 002c 80BD     		pop	{r7, pc}
 740              	.L43:
 741 002e 00BF     		.align	2
 742              	.L42:
 743 0030 C4C00F40 		.word	1074774212
 744 0034 00000B40 		.word	1074462720
 745 0038 0C000B40 		.word	1074462732
 746 003c 08000B40 		.word	1074462728
 747              		.cfi_endproc
 748              	.LFE323:
 750              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 751              		.align	1
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu softvfp
 757              	_Z41__static_initialization_and_destruction_0ii:
 758              	.LFB324:
 759              		.loc 2 87 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 8
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763 0000 80B5     		push	{r7, lr}
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 7, -8
 766              		.cfi_offset 14, -4
 767 0002 84B0     		sub	sp, sp, #16
 768              		.cfi_def_cfa_offset 24
 769 0004 02AF     		add	r7, sp, #8
 770              		.cfi_def_cfa 7, 16
 771 0006 7860     		str	r0, [r7, #4]
 772 0008 3960     		str	r1, [r7]
 773              		.loc 2 87 0
 774 000a 7B68     		ldr	r3, [r7, #4]
 775 000c 012B     		cmp	r3, #1
 776 000e 5BD1     		bne	.L46
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 18


 777              		.loc 2 87 0 is_stmt 0 discriminator 1
 778 0010 3B68     		ldr	r3, [r7]
 779 0012 4FF6FF72 		movw	r2, #65535
 780 0016 9342     		cmp	r3, r2
 781 0018 56D1     		bne	.L46
 122:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 123:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 124:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class Timer{ // Timer object to group together all of a timer's functions and registers
 125:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 126:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Pwr_bit;
 127:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 128:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 129:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 130:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 131:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Edge_Sel[2];
 132:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint8_t Clk_Speed); // Uses the IRQ bit to determine which PCLKSEL to set
 133:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Counter(uint8_t Channel, uint8_t Edge_Mode);
 134:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Capture(uint8_t Channel, uint8_t Edge_Mode);
 135:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Reset_onMatch(uint8_t Channel);
 136:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Match(uint8_t Channel, uint32_t Match_Value);
 137:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Ext_Match(uint8_t Channel, uint8_t Match_Setting);
 138:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Mat_Int(uint8_t Channel);
 139:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Cap_Int(uint8_t Channel);
 140:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Reset(); // Resets the TC
 141:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t get_IR();
 142:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Clear_Int(uint8_t FlagBit);
 143:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t get_CR(uint8_t Channel);
 144:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 145:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	Timer(	uint32_t * PtrTimer, // Constructor function for timers
 146:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t P_bit,
 147:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t C_bit,
 148:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 			uint8_t Int_bit);
 149:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 150:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 151:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class UART{
 152:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 153:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Pwr_bit;
 154:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 155:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 156:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 157:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 158:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint32_t Baudrate);
 159:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Transmission(uint8_t Bit_Length, uint8_t Parity);
 160:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_RX_Int();
 161:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PutByte(char Byte);
 162:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PrintStrConst(const char *StrToSend);
 163:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PrintDec(uint16_t NbrDec);
 164:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void PrintFloat(uint16_t Scaled_Int);
 165:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void ClearScreen();
 166:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool Int_Flag_Set();
 167:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t get_RBR();
 168:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 169:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	UART(uint32_t * PtrUART, uint8_t P_bit, uint8_t C_bit, uint8_t Int_bit);
 170:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 171:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 172:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class PWM{
 173:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static uint32_t * _Periph;
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 19


 174:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Output_Channel;
 175:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 176:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	float Duty;
 177:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Set_Freq(uint32_t Freq); // Setup MR0 value that controls frequency of all single-e PW
 178:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Reset_onMatch();
 179:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Duty(float DutyPercentage);
 180:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Increment_Duty();
 181:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Decrement_Duty();
 182:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Enable(); // Always use at the end of initialization, starts TC for all PWMs
 183:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 184:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	PWM(uint8_t Ch, uint8_t Edge_Sel);
 185:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 186:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 187:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class ADC{
 188:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static uint32_t * _Periph;
 189:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Output_Channel;
 190:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 191:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Start_Burst_Conversion(uint8_t Sel_Val);
 192:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static void Stop_Burst_Conversion();
 193:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Start_Conversion();
 194:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Stop_Conversion();
 195:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Int();
 196:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint16_t get_12bit_Result();
 197:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 198:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	ADC(uint8_t Ch, uint32_t Target_Freq);
 199:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 200:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 201:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class DAC{
 202:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	static uint32_t * _Periph;
 203:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 204:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Output(uint16_t Val_10bit);
 205:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Set_Out_Percent(uint8_t Percentage);
 206:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 207:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 208:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class _I2C{
 209:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 210:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 211:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 212:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 213:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t tx_buf[512];
 214:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t rx_buf[512];
 215:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	bool Busy;
 216:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t M_Counter_tx;
 217:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t M_Counter_rx;
 218:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Msg_Length;
 219:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Read_Length;
 220:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 221:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint8_t Bus_Mode, uint32_t I2C_Speed);
 222:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t get_Status();
 223:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void New_Sequence(uint8_t Slave_Address, uint16_t readLength = 0);
 224:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_String(const char * StrToSend);
 225:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Integer(uint32_t NumberToSend, uint8_t NbDigits);
 226:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Float(uint32_t NumberToSend, uint8_t NbDigits, uint8_t DP_Position);
 227:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_Byte(uint8_t ByteToSend);
 228:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Next_Byte();
 229:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Read_Next_Byte();
 230:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Address();
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 20


 231:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Stop();
 232:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_nACK();
 233:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Sequence();
 234:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Clear_Interrupt();
 235:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 236:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	_I2C(uint32_t * PtrI2C, uint8_t C_bit, uint8_t Int_bit);
 237:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 238:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 239:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** class SSP{
 240:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t * _Periph;
 241:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Clk_bit;
 242:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t IRQ_bit;
 243:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint16_t Buffer[128];
 244:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** public:
 245:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint32_t MIS = *(_Periph + 7);
 246:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t M_Counter;
 247:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	uint8_t Msg_Length;
 248:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 249:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Init(uint8_t ClkPrescaler, uint8_t DataSizeSelect, uint8_t CPOL, uint8_t CPHA);
 250:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void New_Sequence();
 251:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_String(const char * StrToSend);
 252:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Integer(uint32_t NumberToSend, uint8_t NbDigits);
 253:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_BCD_Float(uint32_t NumberToSend, uint8_t NbDigits, uint8_t DP_Position);
 254:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Add_Byte(uint16_t ByteToSend);
 255:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Next_Byte();
 256:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Send_Sequence();
 257:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void End_Transfer();
 258:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Enable_Int(uint8_t IntSelect);
 259:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	void Disable_Int(uint8_t IntSelect);
 260:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 261:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 	SSP(uint32_t * PtrSSP, uint8_t C_bit, uint8_t Int_bit);
 262:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** };
 263:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** /**************************************************************************************************
 264:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** // Mandatory objects declaration (Peripherals)
 265:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P0((uint32_t *)0x4002C000, (uint32_t *)0x2009C000, (uint32_t *)0x4002C068);
 782              		.loc 1 265 0 is_stmt 1
 783 001a 2D4B     		ldr	r3, .L47
 784 001c 2D4A     		ldr	r2, .L47+4
 785 001e 2E49     		ldr	r1, .L47+8
 786 0020 2E48     		ldr	r0, .L47+12
 787 0022 FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 266:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P1((uint32_t *)0x4002C008, (uint32_t *)0x2009C020, (uint32_t *)0x4002C06C);
 788              		.loc 1 266 0
 789 0026 2E4B     		ldr	r3, .L47+16
 790 0028 2E4A     		ldr	r2, .L47+20
 791 002a 2F49     		ldr	r1, .L47+24
 792 002c 2F48     		ldr	r0, .L47+28
 793 002e FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 267:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P2((uint32_t *)0x4002C010, (uint32_t *)0x2009C040, (uint32_t *)0x4002C070);
 794              		.loc 1 267 0
 795 0032 2F4B     		ldr	r3, .L47+32
 796 0034 2F4A     		ldr	r2, .L47+36
 797 0036 3049     		ldr	r1, .L47+40
 798 0038 3048     		ldr	r0, .L47+44
 799 003a FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 268:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P3((uint32_t *)0x4002C018, (uint32_t *)0x2009C060, (uint32_t *)0x4002C074);
 800              		.loc 1 268 0
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 21


 801 003e 304B     		ldr	r3, .L47+48
 802 0040 304A     		ldr	r2, .L47+52
 803 0042 3149     		ldr	r1, .L47+56
 804 0044 3148     		ldr	r0, .L47+60
 805 0046 FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 269:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Port P4((uint32_t *)0x4002C020, (uint32_t *)0x2009C080, (uint32_t *)0x4002C078);
 806              		.loc 1 269 0
 807 004a 314B     		ldr	r3, .L47+64
 808 004c 314A     		ldr	r2, .L47+68
 809 004e 3249     		ldr	r1, .L47+72
 810 0050 3248     		ldr	r0, .L47+76
 811 0052 FFF7FEFF 		bl	_ZN4PortC1EPmS0_S0_
 270:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 271:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR0((uint32_t *)0x40004000, 1, 2, 1);
 812              		.loc 1 271 0
 813 0056 0123     		movs	r3, #1
 814 0058 0093     		str	r3, [sp]
 815 005a 0223     		movs	r3, #2
 816 005c 0122     		movs	r2, #1
 817 005e 4FF04021 		mov	r1, #1073758208
 818 0062 2F48     		ldr	r0, .L47+80
 819 0064 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 272:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR1((uint32_t *)0x40008000, 2, 4, 2);
 820              		.loc 1 272 0
 821 0068 0223     		movs	r3, #2
 822 006a 0093     		str	r3, [sp]
 823 006c 0423     		movs	r3, #4
 824 006e 0222     		movs	r2, #2
 825 0070 2C49     		ldr	r1, .L47+84
 826 0072 2D48     		ldr	r0, .L47+88
 827 0074 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 273:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR2((uint32_t *)0x40090000, 22, 12, 3);
 828              		.loc 1 273 0
 829 0078 0323     		movs	r3, #3
 830 007a 0093     		str	r3, [sp]
 831 007c 0C23     		movs	r3, #12
 832 007e 1622     		movs	r2, #22
 833 0080 2A49     		ldr	r1, .L47+92
 834 0082 2B48     		ldr	r0, .L47+96
 835 0084 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 274:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static Timer TMR3((uint32_t *)0x40094000, 23, 14, 4);
 836              		.loc 1 274 0
 837 0088 0423     		movs	r3, #4
 838 008a 0093     		str	r3, [sp]
 839 008c 0E23     		movs	r3, #14
 840 008e 1722     		movs	r2, #23
 841 0090 2849     		ldr	r1, .L47+100
 842 0092 2948     		ldr	r0, .L47+104
 843 0094 FFF7FEFF 		bl	_ZN5TimerC1EPmhhh
 275:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** 
 276:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static UART UART0((uint32_t *)0x4000C000, 3, 6, 5);
 844              		.loc 1 276 0
 845 0098 0523     		movs	r3, #5
 846 009a 0093     		str	r3, [sp]
 847 009c 0623     		movs	r3, #6
 848 009e 0322     		movs	r2, #3
 849 00a0 2649     		ldr	r1, .L47+108
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 22


 850 00a2 2748     		ldr	r0, .L47+112
 851 00a4 FFF7FEFF 		bl	_ZN4UARTC1EPmhhh
 277:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static UART Keyboard((uint32_t *)0x40098000, 24, 16, 7);
 852              		.loc 1 277 0
 853 00a8 0723     		movs	r3, #7
 854 00aa 0093     		str	r3, [sp]
 855 00ac 1023     		movs	r3, #16
 856 00ae 1822     		movs	r2, #24
 857 00b0 2449     		ldr	r1, .L47+116
 858 00b2 2548     		ldr	r0, .L47+120
 859 00b4 FFF7FEFF 		bl	_ZN4UARTC1EPmhhh
 278:C:\Users\xavie\Cegep\Processeurs\HeroOrZero\inc\lpc_xav.h **** static UART Console((uint32_t *)0x4009C000, 25, 18, 8);
 860              		.loc 1 278 0
 861 00b8 0823     		movs	r3, #8
 862 00ba 0093     		str	r3, [sp]
 863 00bc 1223     		movs	r3, #18
 864 00be 1922     		movs	r2, #25
 865 00c0 2249     		ldr	r1, .L47+124
 866 00c2 2348     		ldr	r0, .L47+128
 867 00c4 FFF7FEFF 		bl	_ZN4UARTC1EPmhhh
 868              	.L46:
 869              		.loc 2 87 0
 870 00c8 00BF     		nop
 871 00ca 0837     		adds	r7, r7, #8
 872              		.cfi_def_cfa_offset 8
 873 00cc BD46     		mov	sp, r7
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 00ce 80BD     		pop	{r7, pc}
 877              	.L48:
 878              		.align	2
 879              	.L47:
 880 00d0 68C00240 		.word	1073922152
 881 00d4 00C00920 		.word	537509888
 882 00d8 00C00240 		.word	1073922048
 883 00dc 00000000 		.word	_ZL2P0
 884 00e0 6CC00240 		.word	1073922156
 885 00e4 20C00920 		.word	537509920
 886 00e8 08C00240 		.word	1073922056
 887 00ec 00000000 		.word	_ZL2P1
 888 00f0 70C00240 		.word	1073922160
 889 00f4 40C00920 		.word	537509952
 890 00f8 10C00240 		.word	1073922064
 891 00fc 00000000 		.word	_ZL2P2
 892 0100 74C00240 		.word	1073922164
 893 0104 60C00920 		.word	537509984
 894 0108 18C00240 		.word	1073922072
 895 010c 00000000 		.word	_ZL2P3
 896 0110 78C00240 		.word	1073922168
 897 0114 80C00920 		.word	537510016
 898 0118 20C00240 		.word	1073922080
 899 011c 00000000 		.word	_ZL2P4
 900 0120 00000000 		.word	_ZL4TMR0
 901 0124 00800040 		.word	1073774592
 902 0128 00000000 		.word	_ZL4TMR1
 903 012c 00000940 		.word	1074331648
 904 0130 00000000 		.word	_ZL4TMR2
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 23


 905 0134 00400940 		.word	1074348032
 906 0138 00000000 		.word	_ZL4TMR3
 907 013c 00C00040 		.word	1073790976
 908 0140 00000000 		.word	_ZL5UART0
 909 0144 00800940 		.word	1074364416
 910 0148 00000000 		.word	_ZL8Keyboard
 911 014c 00C00940 		.word	1074380800
 912 0150 00000000 		.word	_ZL7Console
 913              		.cfi_endproc
 914              	.LFE324:
 916              		.section	.text._GLOBAL__sub_I__Z12IntegerToBCDR5BCD_tt,"ax",%progbits
 917              		.align	1
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu softvfp
 923              	_GLOBAL__sub_I__Z12IntegerToBCDR5BCD_tt:
 924              	.LFB325:
 925              		.loc 2 87 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 80B5     		push	{r7, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 7, -8
 932              		.cfi_offset 14, -4
 933 0002 00AF     		add	r7, sp, #0
 934              		.cfi_def_cfa_register 7
 935              		.loc 2 87 0
 936 0004 4FF6FF71 		movw	r1, #65535
 937 0008 0120     		movs	r0, #1
 938 000a FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 939 000e 80BD     		pop	{r7, pc}
 940              		.cfi_endproc
 941              	.LFE325:
 943              		.section	.init_array,"aw",%init_array
 944              		.align	2
 945 0000 00000000 		.word	_GLOBAL__sub_I__Z12IntegerToBCDR5BCD_tt(target1)
 946              		.text
 947              	.Letext0:
 948              		.file 3 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\machine\\_default_
 949              		.file 4 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\_stdint.h"
 950              		.file 5 "C:\\Users\\xavie\\Cegep\\Processeurs\\HeroOrZero\\inc/segdisplay.h"
 951              		.file 6 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/core_cm3.h"
 952              		.file 7 "C:\\Users\\xavie\\Cegep\\Processeurs\\lpc_chip_175x_6x\\inc/chip.h"
 953              		.file 8 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\lock.h"
 954              		.file 9 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\_types.h"
 955              		.file 10 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\
 956              		.file 11 "c:\\nxp\\mcuxpressoide_10.2.1_795\\ide\\tools\\arm-none-eabi\\include\\sys\\reent.h"
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 segdisplay.cpp
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:16     .rodata._ZL19PtrRI_TIMER_COMPVAL:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:19     .rodata._ZL19PtrRI_TIMER_COMPVAL:00000000 _ZL19PtrRI_TIMER_COMPVAL
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:22     .rodata._ZL16PtrRI_TIMER_MASK:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:25     .rodata._ZL16PtrRI_TIMER_MASK:00000000 _ZL16PtrRI_TIMER_MASK
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:28     .rodata._ZL16PtrRI_TIMER_CTRL:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:31     .rodata._ZL16PtrRI_TIMER_CTRL:00000000 _ZL16PtrRI_TIMER_CTRL
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:34     .rodata._ZL17PtrRI_TIMER_COUNT:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:37     .rodata._ZL17PtrRI_TIMER_COUNT:00000000 _ZL17PtrRI_TIMER_COUNT
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:40     .text._ZN3BusaSEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:47     .text._ZN3BusaSEh:00000000 _ZN3BusaSEh
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:82     .text._ZN3BuspLEh:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:89     .text._ZN3BuspLEh:00000000 _ZN3BuspLEh
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:127    .bss._ZL2P0:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:130    .bss._ZL2P0:00000000 _ZL2P0
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:133    .bss._ZL2P1:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:136    .bss._ZL2P1:00000000 _ZL2P1
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:139    .bss._ZL2P2:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:142    .bss._ZL2P2:00000000 _ZL2P2
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:145    .bss._ZL2P3:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:148    .bss._ZL2P3:00000000 _ZL2P3
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:151    .bss._ZL2P4:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:154    .bss._ZL2P4:00000000 _ZL2P4
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:157    .bss._ZL4TMR0:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:160    .bss._ZL4TMR0:00000000 _ZL4TMR0
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:163    .bss._ZL4TMR1:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:166    .bss._ZL4TMR1:00000000 _ZL4TMR1
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:169    .bss._ZL4TMR2:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:172    .bss._ZL4TMR2:00000000 _ZL4TMR2
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:175    .bss._ZL4TMR3:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:178    .bss._ZL4TMR3:00000000 _ZL4TMR3
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:181    .bss._ZL5UART0:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:184    .bss._ZL5UART0:00000000 _ZL5UART0
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:187    .bss._ZL8Keyboard:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:190    .bss._ZL8Keyboard:00000000 _ZL8Keyboard
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:193    .bss._ZL7Console:00000000 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:196    .bss._ZL7Console:00000000 _ZL7Console
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:199    .text._Z12IntegerToBCDR5BCD_tt:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:206    .text._Z12IntegerToBCDR5BCD_tt:00000000 _Z12IntegerToBCDR5BCD_tt
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:349    .text._Z10PrintDigitc:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:356    .text._Z10PrintDigitc:00000000 _Z10PrintDigitc
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:447    .text._Z10PrintDigitc:00000070 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:452    .text._Z13WriteStrConstPKc:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:459    .text._Z13WriteStrConstPKc:00000000 _Z13WriteStrConstPKc
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:530    .text._Z13WriteStrConstPKc:00000050 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:535    .text._Z8PrintDecj:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:542    .text._Z8PrintDecj:00000000 _Z8PrintDecj
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:690    .text._Z8PrintDecj:000000dc $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:697    .text._Z8RIT_Initv:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:704    .text._Z8RIT_Initv:00000000 _Z8RIT_Initv
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:743    .text._Z8RIT_Initv:00000030 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:751    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:757    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:880    .text._Z41__static_initialization_and_destruction_0ii:000000d0 $d
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:917    .text._GLOBAL__sub_I__Z12IntegerToBCDR5BCD_tt:00000000 $t
C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:923    .text._GLOBAL__sub_I__Z12IntegerToBCDR5BCD_tt:00000000 _GLOBAL__sub_I__Z12IntegerToBCDR5BCD_tt
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 25


C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s:944    .init_array:00000000 $d
                           .group:00000000 wm4.0.0474d032b6805b4a3671280691a3da50
                           .group:00000000 wm4.stdint.h.4.659be5aa44c4ab4eb7c7cc2b24d8ceee
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.segdisplay.h.9.98326a2fbd989aebe1b364b73354de3a
                           .group:00000000 wm4.stdbool.h.29.01580e438512fc255c0619569742ffd3
                           .group:00000000 wm4.lpc_types.h.63.c4e7eaf7330236ae510314a23d74e6ca
                           .group:00000000 wm4.sys_config.h.31.f8c315d4b1b74f49c8745dcf1114f978
                           .group:00000000 wm4.cmsis_175x_6x.h.33.75b091e3b445a2d3d6fff2c163abfea4
                           .group:00000000 wm4.core_cm3.h.47.c45d264953076019d6b3b1c20e8ad771
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm3.h.144.13c1820b08b053ff2afcbecd6c121769
                           .group:00000000 wm4.chip_lpc175x_6x.h.33.eb00dd5e876bba2d92e5365aaa2adcc9
                           .group:00000000 wm4.sysctl_17xx_40xx.h.33.60ea2b0c038b570d16b743be456c0a3c
                           .group:00000000 wm4.clock_17xx_40xx.h.33.ac1c09ba10bd275fd518dc893f69b719
                           .group:00000000 wm4.iocon_17xx_40xx.h.33.30efb695138835ce45b969a383622df1
                           .group:00000000 wm4.adc_17xx_40xx.h.33.4ccfb2b64a214dfbd42dcc57b951adea
                           .group:00000000 wm4.can_17xx_40xx.h.33.998a7ac704f1a68b2cd5e0b56d8d5982
                           .group:00000000 wm4.dac_17xx_40xx.h.33.c6b24d203fe35c404313549726e8b471
                           .group:00000000 wm4.enet_17xx_40xx.h.33.7cbc246ead5985e9ded0581894620518
                           .group:00000000 wm4.gpdma_17xx_40xx.h.33.48ff5e223f8561d024da95b445b6412f
                           .group:00000000 wm4.gpio_17xx_40xx.h.33.ccf33f35e6ec854f4c17216560fb0e2d
                           .group:00000000 wm4.i2c_17xx_40xx.h.33.251f9e2630fa2e1c5f956a841fad976e
                           .group:00000000 wm4.i2s_17xx_40xx.h.33.c4dac649f14353e74f7ad13206e59212
                           .group:00000000 wm4.pmu_17xx_40xx.h.33.6df98f4a15b545c975b3d7e285b1914a
                           .group:00000000 wm4.ritimer_17xx_40xx.h.33.2353edabf0d761fc5545c38574ab0483
                           .group:00000000 wm4.rtc_17xx_40xx.h.33.1b92c4cdbb0e30811f9b658793f1692a
                           .group:00000000 wm4.spi_17xx_40xx.h.33.29890397a2d0d2f7c45c9629c75ce288
                           .group:00000000 wm4.ssp_17xx_40xx.h.33.2caafe5625dd4e0c436aadef2d04967e
                           .group:00000000 wm4.timer_17xx_40xx.h.33.cf1ff612c99670767f5f971c7f8e9fde
                           .group:00000000 wm4.ring_buffer.h.33.ffd8153954783612f9c626df1ed9e770
                           .group:00000000 wm4.uart_17xx_40xx.h.98.24bad698225619af11e644944c69bb64
                           .group:00000000 wm4.wwdt_17xx_40xx.h.33.c6b9b47b39d0af231ccdbbe61f2e586a
                           .group:00000000 wm4.fmc_17xx_40xx.h.33.50d936806f8521fe9e7b0b5d644ffe41
                           .group:00000000 wm4.iap.h.33.bfa6a5070920deda981787d64c9b1d6d
                           .group:00000000 wm4.error.h.38.139632325ccc020d697d2fcf83ee170f
                           .group:00000000 wm4.board.h.33.b3d60928436b978782af3158a25a7b77
                           .group:00000000 wm4.newlib.h.8.e0fd068ed40a600f7426443f865dd469
                           .group:00000000 wm4.ieeefp.h.77.49bcce8a603f3d93a95080d6a3573782
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.187.422da5f95ac1285e95faf42258f23242
                           .group:00000000 wm4.cdefs.h.47.ef8413a24f515b2210954be82adc67e2
                           .group:00000000 wm4.stddef.h.39.101367dade8a53b166775e1434b00616
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:00000000 wm4._types.h.184.7120b8bb2e0149e2359704f4e2251b68
                           .group:00000000 wm4.reent.h.17.87376802c2b370b32a762f0a30482d9e
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
ARM GAS  C:\Users\xavie\AppData\Local\Temp\ccSG6uZc.s 			page 26


                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.f9d7979a479d57685780efa849031ac4
                           .group:00000000 wm4.board_api.h.166.63aa07b58758871d5b14e460a43bd11e
                           .group:00000000 wm4.lpc_phy.h.56.88cb0dd4e85f8d7768db24fbc73d4911
                           .group:00000000 wm4.cr_section_macros.h.33.9e7c9c82e85b060f15a6d1b56a42fef2
                           .group:00000000 wm4.lpc_xav.h.6.5aa75daa274402c8e369cf781056e607

UNDEFINED SYMBOLS
_ZN3Bus12Change_ValueEh
DisplayDataBus
DisplaySelectBus
Seg_BCD
_Z9EnableIRQh
_ZN4PortC1EPmS0_S0_
_ZN5TimerC1EPmhhh
_ZN4UARTC1EPmhhh
